{"version":3,"sources":["pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","message","setMessage","recieved","setRecieved","ack","setAck","req","setReq","walletText","setWalletText","walletColor","setWalletColor","abi","useEffect","a","provider1","ethers","providers","JsonRpcProvider","contract","Contract","currentRequestId","data","provider","Web3Provider","window","ethereum","provider2","console","log","handleSubmit","ackFromDestination","type","style","class","onClick","request","method","accounts","alert","id","rows","onChange","e","target","value","signer","getSigner","pingDestination","then","contract1","pingFromSource","catch","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.3c079406.chunk.js","sourcesContent":["import React,{useState,useMemo,useEffect} from 'react'\r\nimport { ethers } from 'ethers';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n// 0xf078259544740e9CA50ed6d73763e02E9D809819\r\nimport './Login.css';\r\n\r\n\r\n\r\n\r\nfunction Login() {\r\n    const [account,setAccount]=useState('login')\r\n    const [message,setMessage]=useState('')\r\n    const [recieved,setRecieved]=useState('')\r\n    const [ack,setAck]=useState('')\r\n    const [req,setReq]=useState(1)\r\n    const [walletText,setWalletText]=useState(\"Connect Wallet\")\r\n   const [walletColor,setWalletColor]=useState(\"btn btn-danger\")\r\n    const abi=[\r\n        \r\n            {\r\n                \"inputs\": [\r\n                    {\r\n                        \"internalType\": \"address payable\",\r\n                        \"name\": \"gatewayAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"_destGasLimit\",\r\n                        \"type\": \"uint64\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"_ackGasLimit\",\r\n                        \"type\": \"uint64\"\r\n                    }\r\n                ],\r\n                \"stateMutability\": \"nonpayable\",\r\n                \"type\": \"constructor\"\r\n            },\r\n            {\r\n                \"inputs\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"message\",\r\n                        \"type\": \"string\"\r\n                    }\r\n                ],\r\n                \"name\": \"CustomError\",\r\n                \"type\": \"error\"\r\n            },\r\n            {\r\n                \"anonymous\": false,\r\n                \"inputs\": [\r\n                    {\r\n                        \"indexed\": true,\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"requestId\",\r\n                        \"type\": \"uint64\"\r\n                    },\r\n                    {\r\n                        \"indexed\": false,\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"ackMessage\",\r\n                        \"type\": \"string\"\r\n                    }\r\n                ],\r\n                \"name\": \"AckFromDestination\",\r\n                \"type\": \"event\"\r\n            },\r\n            {\r\n                \"anonymous\": false,\r\n                \"inputs\": [\r\n                    {\r\n                        \"indexed\": true,\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"eventIdentifier\",\r\n                        \"type\": \"uint64\"\r\n                    },\r\n                    {\r\n                        \"indexed\": false,\r\n                        \"internalType\": \"bool\",\r\n                        \"name\": \"isSuccess\",\r\n                        \"type\": \"bool\"\r\n                    }\r\n                ],\r\n                \"name\": \"ExecutionStatus\",\r\n                \"type\": \"event\"\r\n            },\r\n            {\r\n                \"anonymous\": false,\r\n                \"inputs\": [\r\n                    {\r\n                        \"indexed\": true,\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"requestId\",\r\n                        \"type\": \"uint64\"\r\n                    }\r\n                ],\r\n                \"name\": \"NewPing\",\r\n                \"type\": \"event\"\r\n            },\r\n            {\r\n                \"anonymous\": false,\r\n                \"inputs\": [\r\n                    {\r\n                        \"indexed\": true,\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"srcChainType\",\r\n                        \"type\": \"uint64\"\r\n                    },\r\n                    {\r\n                        \"indexed\": true,\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"srcChainId\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"indexed\": true,\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"requestId\",\r\n                        \"type\": \"uint64\"\r\n                    },\r\n                    {\r\n                        \"indexed\": false,\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"message\",\r\n                        \"type\": \"string\"\r\n                    }\r\n                ],\r\n                \"name\": \"PingFromSource\",\r\n                \"type\": \"event\"\r\n            },\r\n            {\r\n                \"inputs\": [\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"uint64\"\r\n                    }\r\n                ],\r\n                \"name\": \"ackFromDestination\",\r\n                \"outputs\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"string\"\r\n                    }\r\n                ],\r\n                \"stateMutability\": \"view\",\r\n                \"type\": \"function\"\r\n            },\r\n            {\r\n                \"inputs\": [],\r\n                \"name\": \"ackGasLimit\",\r\n                \"outputs\": [\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"uint64\"\r\n                    }\r\n                ],\r\n                \"stateMutability\": \"view\",\r\n                \"type\": \"function\"\r\n            },\r\n            {\r\n                \"inputs\": [],\r\n                \"name\": \"currentRequestId\",\r\n                \"outputs\": [\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"uint64\"\r\n                    }\r\n                ],\r\n                \"stateMutability\": \"view\",\r\n                \"type\": \"function\"\r\n            },\r\n            {\r\n                \"inputs\": [],\r\n                \"name\": \"destGasLimit\",\r\n                \"outputs\": [\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"uint64\"\r\n                    }\r\n                ],\r\n                \"stateMutability\": \"view\",\r\n                \"type\": \"function\"\r\n            },\r\n            {\r\n                \"inputs\": [],\r\n                \"name\": \"gatewayContract\",\r\n                \"outputs\": [\r\n                    {\r\n                        \"internalType\": \"contract IGateway\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"address\"\r\n                    }\r\n                ],\r\n                \"stateMutability\": \"view\",\r\n                \"type\": \"function\"\r\n            },\r\n            {\r\n                \"inputs\": [\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"eventIdentifier\",\r\n                        \"type\": \"uint64\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bool[]\",\r\n                        \"name\": \"execFlags\",\r\n                        \"type\": \"bool[]\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes[]\",\r\n                        \"name\": \"execData\",\r\n                        \"type\": \"bytes[]\"\r\n                    }\r\n                ],\r\n                \"name\": \"handleCrossTalkAck\",\r\n                \"outputs\": [],\r\n                \"stateMutability\": \"nonpayable\",\r\n                \"type\": \"function\"\r\n            },\r\n            {\r\n                \"inputs\": [\r\n                    {\r\n                        \"internalType\": \"bytes\",\r\n                        \"name\": \"srcContractAddress\",\r\n                        \"type\": \"bytes\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"bytes\",\r\n                        \"name\": \"payload\",\r\n                        \"type\": \"bytes\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"srcChainId\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"srcChainType\",\r\n                        \"type\": \"uint64\"\r\n                    }\r\n                ],\r\n                \"name\": \"handleRequestFromSource\",\r\n                \"outputs\": [\r\n                    {\r\n                        \"internalType\": \"bytes\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"bytes\"\r\n                    }\r\n                ],\r\n                \"stateMutability\": \"nonpayable\",\r\n                \"type\": \"function\"\r\n            },\r\n            {\r\n                \"inputs\": [\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"chainType\",\r\n                        \"type\": \"uint64\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"chainId\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"destGasPrice\",\r\n                        \"type\": \"uint64\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"ackGasPrice\",\r\n                        \"type\": \"uint64\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"destinationContractAddress\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"str\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"expiryDurationInSeconds\",\r\n                        \"type\": \"uint64\"\r\n                    }\r\n                ],\r\n                \"name\": \"pingDestination\",\r\n                \"outputs\": [],\r\n                \"stateMutability\": \"payable\",\r\n                \"type\": \"function\"\r\n            },\r\n            {\r\n                \"inputs\": [\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"uint64\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"string\"\r\n                    },\r\n                    {\r\n                        \"internalType\": \"uint64\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"uint64\"\r\n                    }\r\n                ],\r\n                \"name\": \"pingFromSource\",\r\n                \"outputs\": [\r\n                    {\r\n                        \"internalType\": \"string\",\r\n                        \"name\": \"\",\r\n                        \"type\": \"string\"\r\n                    }\r\n                ],\r\n                \"stateMutability\": \"view\",\r\n                \"type\": \"function\"\r\n            },\r\n            {\r\n                \"inputs\": [\r\n                    {\r\n                        \"internalType\": \"address\",\r\n                        \"name\": \"a\",\r\n                        \"type\": \"address\"\r\n                    }\r\n                ],\r\n                \"name\": \"toBytes\",\r\n                \"outputs\": [\r\n                    {\r\n                        \"internalType\": \"bytes\",\r\n                        \"name\": \"b\",\r\n                        \"type\": \"bytes\"\r\n                    }\r\n                ],\r\n                \"stateMutability\": \"pure\",\r\n                \"type\": \"function\"\r\n            }\r\n        \r\n]\r\n  \r\nuseEffect(async() => {\r\n    const provider1 = new ethers.providers.JsonRpcProvider(\"https://rpc.ankr.com/polygon_mumbai\");\r\n    const contractAddress = \"0x9fF2c6D8bFf3b87538A156Ea1a768ec5A2d55B32\";\r\n\r\n\r\n  const contract = new ethers.Contract(\r\n    contractAddress,\r\n    abi,\r\n    provider1\r\n)\r\nconst data=await contract.currentRequestId();\r\nsetReq(data)\r\n}, [])\r\n\r\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\r\nconst provider1 = new ethers.providers.JsonRpcProvider(\"https://rpc.ankr.com/polygon_mumbai\");\r\nconst provider2= new ethers.providers.JsonRpcProvider(\"https://rpc.ankr.com/avalanche_fuji\")\r\nconsole.log(provider1)\r\n\r\nconst handleSubmit=async ()=>{\r\n    \r\n    try{\r\n        const contractAddress = \"0x9fF2c6D8bFf3b87538A156Ea1a768ec5A2d55B32\";\r\n\r\n\r\n  const contract = new ethers.Contract(\r\n    contractAddress,\r\n    abi,\r\n    provider1\r\n)\r\nconsole.log(contract)\r\n\r\ntry\r\n  {\r\n    const data=await contract.ackFromDestination(req)\r\n  \r\n    setAck(data)\r\n\r\n   \r\n    }\r\n    catch(err){\r\n        console.log(\"calling the function\"+err)\r\n    }\r\n}\r\n    catch(err){\r\n        console.log(\"outside\"+err)\r\n    }\r\n  \r\n\r\n        \r\n}\r\n\r\n  return (\r\n\r\n    <div>\r\n        <br/>\r\n        <button type=\"button\" style={{'width':'10em','height':'3em','margin-left':'30em'}} class={walletColor} onClick={async()=>{\r\n         \r\n         console.log('Requesting account...');\r\n     \r\n         // ❌ Check if Meta Mask Extension exists \r\n         if(window.ethereum) {\r\n           console.log('detected');\r\n     \r\n           try {\r\n             const accounts = await window.ethereum.request({\r\n               method: \"eth_requestAccounts\",\r\n             });\r\n             alert(accounts[0])\r\n             setWalletText(\"Connected\");\r\n             setWalletColor(\"btn btn-success\")\r\n           } catch (error) {\r\n             console.log('Error connecting...');\r\n           }\r\n     \r\n         } else {\r\n           alert('Meta Mask not detected');\r\n         }\r\n       \r\n     \r\n   }}>\r\n     {walletText}\r\n     \r\n   </button>\r\n    <div class=\"main\">\r\n    \r\n      \r\n        <div class=\"card\" style={{'width':'20em'}}>\r\n  <div class=\"card-header\">\r\n    Mumbai Testnet\r\n  </div>\r\n  <div class=\"card-body\">\r\n    \r\n    <textarea class=\"form-control\" id=\"textAreaExample2\" rows=\"4\" onChange={(e)=>{\r\n            setMessage(e.target.value)\r\n        }}/>\r\n        <br></br>\r\n       \r\n    \r\n     <button type=\"button\" class=\"btn btn-success\" onClick={async()=>{\r\n              const signer = provider.getSigner();\r\n\r\n           \r\n\r\n            const contractAddress = \"0x9fF2c6D8bFf3b87538A156Ea1a768ec5A2d55B32\";\r\n            \r\n            const contract = new ethers.Contract(\r\n                contractAddress,\r\n                abi,\r\n               signer\r\n            );\r\n            \r\n            contract.pingDestination(0,\"43113\",200000,200000,\"0xf7015AD80B60EA4A9e12d90ff00D68fAa8e08df4\",message,1000000000000).then(()=>{\r\n                \r\n            })\r\n            \r\n     \r\n            \r\n          \r\n            \r\n        }}>Send Message</button>\r\n        <br></br>\r\n        <br></br>\r\n        <textarea value={ack} class=\"form-control\" id=\"textAreaExample2\" rows=\"4\" onChange={(e)=>{\r\n            setMessage(e.target.value)\r\n        }}/>\r\n       \r\n        <br></br>\r\n   \r\n        <button type=\"button\" class=\"btn btn-success\" onClick={\r\n            handleSubmit\r\n    }>Acknowledgement</button>\r\n  </div>\r\n</div>\r\n     \r\n        <div class=\"card\" style={{'width':'20em'}}>\r\n  <div class=\"card-header\">\r\n    Fuji Testnet\r\n  </div>\r\n  <div class=\"card-body\">\r\n  <textarea value={recieved} class=\"form-control\" id=\"textAreaExample2\" rows=\"4\" onChange={(e)=>{\r\n            setMessage(e.target.value)\r\n        }}/>\r\n\r\n \r\n\r\n<br></br> \r\n       <button type=\"button\" class=\"btn btn-success\" onClick={async()=>{\r\n                   const provider1 = new ethers.providers.JsonRpcProvider(\"https://rpc.ankr.com/polygon_mumbai\");\r\n                   const contractAddress1 = \"0x9fF2c6D8bFf3b87538A156Ea1a768ec5A2d55B32\";\r\n               \r\n               \r\n                 const contract1 = new ethers.Contract(\r\n                   contractAddress1,\r\n                   abi,\r\n                   provider1\r\n               )\r\n               const data=await contract1.currentRequestId();\r\n             \r\n               setReq(data)\r\n              const signer = provider.getSigner()\r\n           \r\n            \r\n            const contractAddress = \"0xf7015AD80B60EA4A9e12d90ff00D68fAa8e08df4\";\r\n            \r\n            const contract = new ethers.Contract(\r\n                contractAddress,\r\n                abi,\r\n                provider2\r\n            );\r\n            \r\n            contract.pingFromSource(0,\"80001\",req).then((data)=>{\r\n               \r\n                setRecieved(data)\r\n            }).catch(()=>{\r\n                alert('connect to Fuji Network')\r\n            })\r\n            \r\n            \r\n        }}>Message Recieved</button>\r\n        \r\n  </div>\r\n</div>\r\n        \r\n     \r\n           </div>\r\n           </div>\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Login from './pages/Login'\r\nimport './App.css';\r\nconst App = () => {\r\n\r\n  return(\r\n    <>\r\n\r\n    <Routes>\r\n      <Route path=\"/\" element={<Login />} />\r\n    \r\n    </Routes>\r\n    \r\n    </>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport { NotificationProvider } from 'web3uikit';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MoralisProvider appId=\"xxxxx\" serverUrl=\"xxxxx\">\r\n      <NotificationProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      </NotificationProvider>\r\n    </MoralisProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}