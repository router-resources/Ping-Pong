{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file WebsocketProvider.js\n * @authors: Samuel Furter <samuel@ethereum.org>, Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2019\n */\n'use strict';\n\nvar EventEmitter = require('eventemitter3');\nvar helpers = require('./helpers.js');\nvar errors = require('web3-core-helpers').errors;\nvar Ws = require('websocket').w3cwebsocket;\n/**\n * @param {string} url\n * @param {Object} options\n *\n * @constructor\n */\nvar WebsocketProvider = function WebsocketProvider(url, options) {\n  EventEmitter.call(this);\n  options = options || {};\n  this.url = url;\n  this._customTimeout = options.timeout || 1000 * 15;\n  this.headers = options.headers || {};\n  this.protocol = options.protocol || undefined;\n  this.reconnectOptions = Object.assign({\n    auto: false,\n    delay: 5000,\n    maxAttempts: false,\n    onTimeout: false\n  }, options.reconnect);\n  this.clientConfig = options.clientConfig || undefined; // Allow a custom client configuration\n  this.requestOptions = options.requestOptions || undefined; // Allow a custom request options (https://github.com/theturtle32/WebSocket-Node/blob/master/docs/WebSocketClient.md#connectrequesturl-requestedprotocols-origin-headers-requestoptions)\n  this.DATA = 'data';\n  this.CLOSE = 'close';\n  this.ERROR = 'error';\n  this.CONNECT = 'connect';\n  this.RECONNECT = 'reconnect';\n  this.connection = null;\n  this.requestQueue = new Map();\n  this.responseQueue = new Map();\n  this.reconnectAttempts = 0;\n  this.reconnecting = false;\n  // The w3cwebsocket implementation does not support Basic Auth\n  // username/password in the URL. So generate the basic auth header, and\n  // pass through with any additional headers supplied in constructor\n  var parsedURL = helpers.parseURL(url);\n  if (parsedURL.username && parsedURL.password) {\n    this.headers.authorization = 'Basic ' + helpers.btoa(parsedURL.username + ':' + parsedURL.password);\n  }\n  // When all node core implementations that do not have the\n  // WHATWG compatible URL parser go out of service this line can be removed.\n  if (parsedURL.auth) {\n    this.headers.authorization = 'Basic ' + helpers.btoa(parsedURL.auth);\n  }\n  // make property `connected` which will return the current connection status\n  Object.defineProperty(this, 'connected', {\n    get: function () {\n      return this.connection && this.connection.readyState === this.connection.OPEN;\n    },\n    enumerable: true\n  });\n  this.connect();\n};\n// Inherit from EventEmitter\nWebsocketProvider.prototype = Object.create(EventEmitter.prototype);\nWebsocketProvider.prototype.constructor = WebsocketProvider;\n/**\n * Connects to the configured node\n *\n * @method connect\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.connect = function () {\n  this.connection = new Ws(this.url, this.protocol, undefined, this.headers, this.requestOptions, this.clientConfig);\n  this._addSocketListeners();\n};\n/**\n * Listener for the `data` event of the underlying WebSocket object\n *\n * @method _onMessage\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._onMessage = function (e) {\n  var _this = this;\n  this._parseResponse(typeof e.data === 'string' ? e.data : '').forEach(function (result) {\n    if (result.method && result.method.indexOf('_subscription') !== -1) {\n      _this.emit(_this.DATA, result);\n      return;\n    }\n    var id = result.id;\n    // get the id which matches the returned id\n    if (Array.isArray(result)) {\n      id = result[0].id;\n    }\n    if (_this.responseQueue.has(id)) {\n      if (_this.responseQueue.get(id).callback !== undefined) {\n        _this.responseQueue.get(id).callback(false, result);\n      }\n      _this.responseQueue.delete(id);\n    }\n  });\n};\n/**\n * Listener for the `open` event of the underlying WebSocket object\n *\n * @method _onConnect\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._onConnect = function () {\n  this.emit(this.CONNECT);\n  this.reconnectAttempts = 0;\n  this.reconnecting = false;\n  if (this.requestQueue.size > 0) {\n    var _this = this;\n    this.requestQueue.forEach(function (request, key) {\n      _this.send(request.payload, request.callback);\n      _this.requestQueue.delete(key);\n    });\n  }\n};\n/**\n * Listener for the `close` event of the underlying WebSocket object\n *\n * @method _onClose\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._onClose = function (event) {\n  var _this = this;\n  if (this.reconnectOptions.auto && (![1000, 1001].includes(event.code) || event.wasClean === false)) {\n    this.reconnect();\n    return;\n  }\n  this.emit(this.CLOSE, event);\n  if (this.requestQueue.size > 0) {\n    this.requestQueue.forEach(function (request, key) {\n      request.callback(errors.ConnectionNotOpenError(event));\n      _this.requestQueue.delete(key);\n    });\n  }\n  if (this.responseQueue.size > 0) {\n    this.responseQueue.forEach(function (request, key) {\n      request.callback(errors.InvalidConnection('on WS', event));\n      _this.responseQueue.delete(key);\n    });\n  }\n  this._removeSocketListeners();\n  this.removeAllListeners();\n};\n/**\n * Will add the required socket listeners\n *\n * @method _addSocketListeners\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._addSocketListeners = function () {\n  this.connection.addEventListener('message', this._onMessage.bind(this));\n  this.connection.addEventListener('open', this._onConnect.bind(this));\n  this.connection.addEventListener('close', this._onClose.bind(this));\n};\n/**\n * Will remove all socket listeners\n *\n * @method _removeSocketListeners\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._removeSocketListeners = function () {\n  this.connection.removeEventListener('message', this._onMessage);\n  this.connection.removeEventListener('open', this._onConnect);\n  this.connection.removeEventListener('close', this._onClose);\n};\n/**\n * Will parse the response and make an array out of it.\n *\n * @method _parseResponse\n *\n * @param {String} data\n *\n * @returns {Array}\n */\nWebsocketProvider.prototype._parseResponse = function (data) {\n  var _this = this,\n    returnValues = [];\n  // DE-CHUNKER\n  var dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n  .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n  .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n  .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n  .split('|--|');\n  dechunkedData.forEach(function (data) {\n    // prepend the last chunk\n    if (_this.lastChunk) data = _this.lastChunk + data;\n    var result = null;\n    try {\n      result = JSON.parse(data);\n    } catch (e) {\n      _this.lastChunk = data;\n      // start timeout to cancel all requests\n      clearTimeout(_this.lastChunkTimeout);\n      _this.lastChunkTimeout = setTimeout(function () {\n        if (_this.reconnectOptions.auto && _this.reconnectOptions.onTimeout) {\n          _this.reconnect();\n          return;\n        }\n        _this.emit(_this.ERROR, errors.ConnectionTimeout(_this._customTimeout));\n        if (_this.requestQueue.size > 0) {\n          _this.requestQueue.forEach(function (request, key) {\n            request.callback(errors.ConnectionTimeout(_this._customTimeout));\n            _this.requestQueue.delete(key);\n          });\n        }\n      }, _this._customTimeout);\n      return;\n    }\n    // cancel timeout and set chunk to null\n    clearTimeout(_this.lastChunkTimeout);\n    _this.lastChunk = null;\n    if (result) returnValues.push(result);\n  });\n  return returnValues;\n};\n/**\n * Does check if the provider is connecting and will add it to the queue or will send it directly\n *\n * @method send\n *\n * @param {Object} payload\n * @param {Function} callback\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.send = function (payload, callback) {\n  var _this = this;\n  var id = payload.id;\n  var request = {\n    payload: payload,\n    callback: callback\n  };\n  if (Array.isArray(payload)) {\n    id = payload[0].id;\n  }\n  if (this.connection.readyState === this.connection.CONNECTING || this.reconnecting) {\n    this.requestQueue.set(id, request);\n    return;\n  }\n  if (this.connection.readyState !== this.connection.OPEN) {\n    this.requestQueue.delete(id);\n    this.emit(this.ERROR, errors.ConnectionNotOpenError());\n    request.callback(errors.ConnectionNotOpenError());\n    return;\n  }\n  this.responseQueue.set(id, request);\n  this.requestQueue.delete(id);\n  try {\n    this.connection.send(JSON.stringify(request.payload));\n  } catch (error) {\n    request.callback(error);\n    _this.responseQueue.delete(id);\n  }\n};\n/**\n * Resets the providers, clears all callbacks\n *\n * @method reset\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.reset = function () {\n  this.responseQueue.clear();\n  this.requestQueue.clear();\n  this.removeAllListeners();\n  this._removeSocketListeners();\n  this._addSocketListeners();\n};\n/**\n * Closes the current connection with the given code and reason arguments\n *\n * @method disconnect\n *\n * @param {number} code\n * @param {string} reason\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.disconnect = function (code, reason) {\n  this._removeSocketListeners();\n  this.connection.close(code || 1000, reason);\n};\n/**\n * Returns the desired boolean.\n *\n * @method supportsSubscriptions\n *\n * @returns {boolean}\n */\nWebsocketProvider.prototype.supportsSubscriptions = function () {\n  return true;\n};\n/**\n * Removes the listeners and reconnects to the socket.\n *\n * @method reconnect\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.reconnect = function () {\n  var _this = this;\n  this.reconnecting = true;\n  if (this.responseQueue.size > 0) {\n    this.responseQueue.forEach(function (request, key) {\n      request.callback(errors.PendingRequestsOnReconnectingError());\n      _this.responseQueue.delete(key);\n    });\n  }\n  if (!this.reconnectOptions.maxAttempts || this.reconnectAttempts < this.reconnectOptions.maxAttempts) {\n    setTimeout(function () {\n      _this.reconnectAttempts++;\n      _this._removeSocketListeners();\n      _this.emit(_this.RECONNECT, _this.reconnectAttempts);\n      _this.connect();\n    }, this.reconnectOptions.delay);\n    return;\n  }\n  this.emit(this.ERROR, errors.MaxAttemptsReachedOnReconnectingError());\n  this.reconnecting = false;\n  if (this.requestQueue.size > 0) {\n    this.requestQueue.forEach(function (request, key) {\n      request.callback(errors.MaxAttemptsReachedOnReconnectingError());\n      _this.requestQueue.delete(key);\n    });\n  }\n};\nmodule.exports = WebsocketProvider;","map":{"version":3,"names":["EventEmitter","require","helpers","errors","Ws","w3cwebsocket","WebsocketProvider","url","options","call","_customTimeout","timeout","headers","protocol","undefined","reconnectOptions","Object","assign","auto","delay","maxAttempts","onTimeout","reconnect","clientConfig","requestOptions","DATA","CLOSE","ERROR","CONNECT","RECONNECT","connection","requestQueue","Map","responseQueue","reconnectAttempts","reconnecting","parsedURL","parseURL","username","password","authorization","btoa","auth","defineProperty","get","readyState","OPEN","enumerable","connect","prototype","create","constructor","_addSocketListeners","_onMessage","e","_this","_parseResponse","data","forEach","result","method","indexOf","emit","id","Array","isArray","has","callback","delete","_onConnect","size","request","key","send","payload","_onClose","event","includes","code","wasClean","ConnectionNotOpenError","InvalidConnection","_removeSocketListeners","removeAllListeners","addEventListener","bind","removeEventListener","returnValues","dechunkedData","replace","split","lastChunk","JSON","parse","clearTimeout","lastChunkTimeout","setTimeout","ConnectionTimeout","push","CONNECTING","set","stringify","error","reset","clear","disconnect","reason","close","supportsSubscriptions","PendingRequestsOnReconnectingError","MaxAttemptsReachedOnReconnectingError","module","exports"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/web3-providers-ws/lib/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file WebsocketProvider.js\n * @authors: Samuel Furter <samuel@ethereum.org>, Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2019\n */\n'use strict';\nvar EventEmitter = require('eventemitter3');\nvar helpers = require('./helpers.js');\nvar errors = require('web3-core-helpers').errors;\nvar Ws = require('websocket').w3cwebsocket;\n/**\n * @param {string} url\n * @param {Object} options\n *\n * @constructor\n */\nvar WebsocketProvider = function WebsocketProvider(url, options) {\n    EventEmitter.call(this);\n    options = options || {};\n    this.url = url;\n    this._customTimeout = options.timeout || 1000 * 15;\n    this.headers = options.headers || {};\n    this.protocol = options.protocol || undefined;\n    this.reconnectOptions = Object.assign({\n        auto: false,\n        delay: 5000,\n        maxAttempts: false,\n        onTimeout: false\n    }, options.reconnect);\n    this.clientConfig = options.clientConfig || undefined; // Allow a custom client configuration\n    this.requestOptions = options.requestOptions || undefined; // Allow a custom request options (https://github.com/theturtle32/WebSocket-Node/blob/master/docs/WebSocketClient.md#connectrequesturl-requestedprotocols-origin-headers-requestoptions)\n    this.DATA = 'data';\n    this.CLOSE = 'close';\n    this.ERROR = 'error';\n    this.CONNECT = 'connect';\n    this.RECONNECT = 'reconnect';\n    this.connection = null;\n    this.requestQueue = new Map();\n    this.responseQueue = new Map();\n    this.reconnectAttempts = 0;\n    this.reconnecting = false;\n    // The w3cwebsocket implementation does not support Basic Auth\n    // username/password in the URL. So generate the basic auth header, and\n    // pass through with any additional headers supplied in constructor\n    var parsedURL = helpers.parseURL(url);\n    if (parsedURL.username && parsedURL.password) {\n        this.headers.authorization = 'Basic ' + helpers.btoa(parsedURL.username + ':' + parsedURL.password);\n    }\n    // When all node core implementations that do not have the\n    // WHATWG compatible URL parser go out of service this line can be removed.\n    if (parsedURL.auth) {\n        this.headers.authorization = 'Basic ' + helpers.btoa(parsedURL.auth);\n    }\n    // make property `connected` which will return the current connection status\n    Object.defineProperty(this, 'connected', {\n        get: function () {\n            return this.connection && this.connection.readyState === this.connection.OPEN;\n        },\n        enumerable: true\n    });\n    this.connect();\n};\n// Inherit from EventEmitter\nWebsocketProvider.prototype = Object.create(EventEmitter.prototype);\nWebsocketProvider.prototype.constructor = WebsocketProvider;\n/**\n * Connects to the configured node\n *\n * @method connect\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.connect = function () {\n    this.connection = new Ws(this.url, this.protocol, undefined, this.headers, this.requestOptions, this.clientConfig);\n    this._addSocketListeners();\n};\n/**\n * Listener for the `data` event of the underlying WebSocket object\n *\n * @method _onMessage\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._onMessage = function (e) {\n    var _this = this;\n    this._parseResponse((typeof e.data === 'string') ? e.data : '').forEach(function (result) {\n        if (result.method && result.method.indexOf('_subscription') !== -1) {\n            _this.emit(_this.DATA, result);\n            return;\n        }\n        var id = result.id;\n        // get the id which matches the returned id\n        if (Array.isArray(result)) {\n            id = result[0].id;\n        }\n        if (_this.responseQueue.has(id)) {\n            if (_this.responseQueue.get(id).callback !== undefined) {\n                _this.responseQueue.get(id).callback(false, result);\n            }\n            _this.responseQueue.delete(id);\n        }\n    });\n};\n/**\n * Listener for the `open` event of the underlying WebSocket object\n *\n * @method _onConnect\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._onConnect = function () {\n    this.emit(this.CONNECT);\n    this.reconnectAttempts = 0;\n    this.reconnecting = false;\n    if (this.requestQueue.size > 0) {\n        var _this = this;\n        this.requestQueue.forEach(function (request, key) {\n            _this.send(request.payload, request.callback);\n            _this.requestQueue.delete(key);\n        });\n    }\n};\n/**\n * Listener for the `close` event of the underlying WebSocket object\n *\n * @method _onClose\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._onClose = function (event) {\n    var _this = this;\n    if (this.reconnectOptions.auto && (![1000, 1001].includes(event.code) || event.wasClean === false)) {\n        this.reconnect();\n        return;\n    }\n    this.emit(this.CLOSE, event);\n    if (this.requestQueue.size > 0) {\n        this.requestQueue.forEach(function (request, key) {\n            request.callback(errors.ConnectionNotOpenError(event));\n            _this.requestQueue.delete(key);\n        });\n    }\n    if (this.responseQueue.size > 0) {\n        this.responseQueue.forEach(function (request, key) {\n            request.callback(errors.InvalidConnection('on WS', event));\n            _this.responseQueue.delete(key);\n        });\n    }\n    this._removeSocketListeners();\n    this.removeAllListeners();\n};\n/**\n * Will add the required socket listeners\n *\n * @method _addSocketListeners\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._addSocketListeners = function () {\n    this.connection.addEventListener('message', this._onMessage.bind(this));\n    this.connection.addEventListener('open', this._onConnect.bind(this));\n    this.connection.addEventListener('close', this._onClose.bind(this));\n};\n/**\n * Will remove all socket listeners\n *\n * @method _removeSocketListeners\n *\n * @returns {void}\n */\nWebsocketProvider.prototype._removeSocketListeners = function () {\n    this.connection.removeEventListener('message', this._onMessage);\n    this.connection.removeEventListener('open', this._onConnect);\n    this.connection.removeEventListener('close', this._onClose);\n};\n/**\n * Will parse the response and make an array out of it.\n *\n * @method _parseResponse\n *\n * @param {String} data\n *\n * @returns {Array}\n */\nWebsocketProvider.prototype._parseResponse = function (data) {\n    var _this = this, returnValues = [];\n    // DE-CHUNKER\n    var dechunkedData = data\n        .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n        .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n        .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n        .split('|--|');\n    dechunkedData.forEach(function (data) {\n        // prepend the last chunk\n        if (_this.lastChunk)\n            data = _this.lastChunk + data;\n        var result = null;\n        try {\n            result = JSON.parse(data);\n        }\n        catch (e) {\n            _this.lastChunk = data;\n            // start timeout to cancel all requests\n            clearTimeout(_this.lastChunkTimeout);\n            _this.lastChunkTimeout = setTimeout(function () {\n                if (_this.reconnectOptions.auto && _this.reconnectOptions.onTimeout) {\n                    _this.reconnect();\n                    return;\n                }\n                _this.emit(_this.ERROR, errors.ConnectionTimeout(_this._customTimeout));\n                if (_this.requestQueue.size > 0) {\n                    _this.requestQueue.forEach(function (request, key) {\n                        request.callback(errors.ConnectionTimeout(_this._customTimeout));\n                        _this.requestQueue.delete(key);\n                    });\n                }\n            }, _this._customTimeout);\n            return;\n        }\n        // cancel timeout and set chunk to null\n        clearTimeout(_this.lastChunkTimeout);\n        _this.lastChunk = null;\n        if (result)\n            returnValues.push(result);\n    });\n    return returnValues;\n};\n/**\n * Does check if the provider is connecting and will add it to the queue or will send it directly\n *\n * @method send\n *\n * @param {Object} payload\n * @param {Function} callback\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.send = function (payload, callback) {\n    var _this = this;\n    var id = payload.id;\n    var request = { payload: payload, callback: callback };\n    if (Array.isArray(payload)) {\n        id = payload[0].id;\n    }\n    if (this.connection.readyState === this.connection.CONNECTING || this.reconnecting) {\n        this.requestQueue.set(id, request);\n        return;\n    }\n    if (this.connection.readyState !== this.connection.OPEN) {\n        this.requestQueue.delete(id);\n        this.emit(this.ERROR, errors.ConnectionNotOpenError());\n        request.callback(errors.ConnectionNotOpenError());\n        return;\n    }\n    this.responseQueue.set(id, request);\n    this.requestQueue.delete(id);\n    try {\n        this.connection.send(JSON.stringify(request.payload));\n    }\n    catch (error) {\n        request.callback(error);\n        _this.responseQueue.delete(id);\n    }\n};\n/**\n * Resets the providers, clears all callbacks\n *\n * @method reset\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.reset = function () {\n    this.responseQueue.clear();\n    this.requestQueue.clear();\n    this.removeAllListeners();\n    this._removeSocketListeners();\n    this._addSocketListeners();\n};\n/**\n * Closes the current connection with the given code and reason arguments\n *\n * @method disconnect\n *\n * @param {number} code\n * @param {string} reason\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.disconnect = function (code, reason) {\n    this._removeSocketListeners();\n    this.connection.close(code || 1000, reason);\n};\n/**\n * Returns the desired boolean.\n *\n * @method supportsSubscriptions\n *\n * @returns {boolean}\n */\nWebsocketProvider.prototype.supportsSubscriptions = function () {\n    return true;\n};\n/**\n * Removes the listeners and reconnects to the socket.\n *\n * @method reconnect\n *\n * @returns {void}\n */\nWebsocketProvider.prototype.reconnect = function () {\n    var _this = this;\n    this.reconnecting = true;\n    if (this.responseQueue.size > 0) {\n        this.responseQueue.forEach(function (request, key) {\n            request.callback(errors.PendingRequestsOnReconnectingError());\n            _this.responseQueue.delete(key);\n        });\n    }\n    if (!this.reconnectOptions.maxAttempts ||\n        this.reconnectAttempts < this.reconnectOptions.maxAttempts) {\n        setTimeout(function () {\n            _this.reconnectAttempts++;\n            _this._removeSocketListeners();\n            _this.emit(_this.RECONNECT, _this.reconnectAttempts);\n            _this.connect();\n        }, this.reconnectOptions.delay);\n        return;\n    }\n    this.emit(this.ERROR, errors.MaxAttemptsReachedOnReconnectingError());\n    this.reconnecting = false;\n    if (this.requestQueue.size > 0) {\n        this.requestQueue.forEach(function (request, key) {\n            request.callback(errors.MaxAttemptsReachedOnReconnectingError());\n            _this.requestQueue.delete(key);\n        });\n    }\n};\nmodule.exports = WebsocketProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}