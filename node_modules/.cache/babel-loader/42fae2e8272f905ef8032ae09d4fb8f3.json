{"ast":null,"code":"/* jshint node: true */\n(function () {\n  \"use strict\";\n\n  function CookieAccessInfo(domain, path, secure, script) {\n    if (this instanceof CookieAccessInfo) {\n      this.domain = domain || undefined;\n      this.path = path || \"/\";\n      this.secure = !!secure;\n      this.script = !!script;\n      return this;\n    }\n    return new CookieAccessInfo(domain, path, secure, script);\n  }\n  CookieAccessInfo.All = Object.freeze(Object.create(null));\n  exports.CookieAccessInfo = CookieAccessInfo;\n  function Cookie(cookiestr, request_domain, request_path) {\n    if (cookiestr instanceof Cookie) {\n      return cookiestr;\n    }\n    if (this instanceof Cookie) {\n      this.name = null;\n      this.value = null;\n      this.expiration_date = Infinity;\n      this.path = String(request_path || \"/\");\n      this.explicit_path = false;\n      this.domain = request_domain || null;\n      this.explicit_domain = false;\n      this.secure = false; //how to define default?\n      this.noscript = false; //httponly\n      if (cookiestr) {\n        this.parse(cookiestr, request_domain, request_path);\n      }\n      return this;\n    }\n    return new Cookie(cookiestr, request_domain, request_path);\n  }\n  exports.Cookie = Cookie;\n  Cookie.prototype.toString = function toString() {\n    var str = [this.name + \"=\" + this.value];\n    if (this.expiration_date !== Infinity) {\n      str.push(\"expires=\" + new Date(this.expiration_date).toGMTString());\n    }\n    if (this.domain) {\n      str.push(\"domain=\" + this.domain);\n    }\n    if (this.path) {\n      str.push(\"path=\" + this.path);\n    }\n    if (this.secure) {\n      str.push(\"secure\");\n    }\n    if (this.noscript) {\n      str.push(\"httponly\");\n    }\n    return str.join(\"; \");\n  };\n  Cookie.prototype.toValueString = function toValueString() {\n    return this.name + \"=\" + this.value;\n  };\n  var cookie_str_splitter = /[:](?=\\s*[a-zA-Z0-9_\\-]+\\s*[=])/g;\n  Cookie.prototype.parse = function parse(str, request_domain, request_path) {\n    if (this instanceof Cookie) {\n      var parts = str.split(\";\").filter(function (value) {\n        return !!value;\n      });\n      var i;\n      var pair = parts[0].match(/([^=]+)=([\\s\\S]*)/);\n      if (!pair) {\n        console.warn(\"Invalid cookie header encountered. Header: '\" + str + \"'\");\n        return;\n      }\n      var key = pair[1];\n      var value = pair[2];\n      if (typeof key !== 'string' || key.length === 0 || typeof value !== 'string') {\n        console.warn(\"Unable to extract values from cookie header. Cookie: '\" + str + \"'\");\n        return;\n      }\n      this.name = key;\n      this.value = value;\n      for (i = 1; i < parts.length; i += 1) {\n        pair = parts[i].match(/([^=]+)(?:=([\\s\\S]*))?/);\n        key = pair[1].trim().toLowerCase();\n        value = pair[2];\n        switch (key) {\n          case \"httponly\":\n            this.noscript = true;\n            break;\n          case \"expires\":\n            this.expiration_date = value ? Number(Date.parse(value)) : Infinity;\n            break;\n          case \"path\":\n            this.path = value ? value.trim() : \"\";\n            this.explicit_path = true;\n            break;\n          case \"domain\":\n            this.domain = value ? value.trim() : \"\";\n            this.explicit_domain = !!this.domain;\n            break;\n          case \"secure\":\n            this.secure = true;\n            break;\n        }\n      }\n      if (!this.explicit_path) {\n        this.path = request_path || \"/\";\n      }\n      if (!this.explicit_domain) {\n        this.domain = request_domain;\n      }\n      return this;\n    }\n    return new Cookie().parse(str, request_domain, request_path);\n  };\n  Cookie.prototype.matches = function matches(access_info) {\n    if (access_info === CookieAccessInfo.All) {\n      return true;\n    }\n    if (this.noscript && access_info.script || this.secure && !access_info.secure || !this.collidesWith(access_info)) {\n      return false;\n    }\n    return true;\n  };\n  Cookie.prototype.collidesWith = function collidesWith(access_info) {\n    if (this.path && !access_info.path || this.domain && !access_info.domain) {\n      return false;\n    }\n    if (this.path && access_info.path.indexOf(this.path) !== 0) {\n      return false;\n    }\n    if (this.explicit_path && access_info.path.indexOf(this.path) !== 0) {\n      return false;\n    }\n    var access_domain = access_info.domain && access_info.domain.replace(/^[\\.]/, '');\n    var cookie_domain = this.domain && this.domain.replace(/^[\\.]/, '');\n    if (cookie_domain === access_domain) {\n      return true;\n    }\n    if (cookie_domain) {\n      if (!this.explicit_domain) {\n        return false; // we already checked if the domains were exactly the same\n      }\n\n      var wildcard = access_domain.indexOf(cookie_domain);\n      if (wildcard === -1 || wildcard !== access_domain.length - cookie_domain.length) {\n        return false;\n      }\n      return true;\n    }\n    return true;\n  };\n  function CookieJar() {\n    var cookies, cookies_list, collidable_cookie;\n    if (this instanceof CookieJar) {\n      cookies = Object.create(null); //name: [Cookie]\n\n      this.setCookie = function setCookie(cookie, request_domain, request_path) {\n        var remove, i;\n        cookie = new Cookie(cookie, request_domain, request_path);\n        //Delete the cookie if the set is past the current time\n        remove = cookie.expiration_date <= Date.now();\n        if (cookies[cookie.name] !== undefined) {\n          cookies_list = cookies[cookie.name];\n          for (i = 0; i < cookies_list.length; i += 1) {\n            collidable_cookie = cookies_list[i];\n            if (collidable_cookie.collidesWith(cookie)) {\n              if (remove) {\n                cookies_list.splice(i, 1);\n                if (cookies_list.length === 0) {\n                  delete cookies[cookie.name];\n                }\n                return false;\n              }\n              cookies_list[i] = cookie;\n              return cookie;\n            }\n          }\n          if (remove) {\n            return false;\n          }\n          cookies_list.push(cookie);\n          return cookie;\n        }\n        if (remove) {\n          return false;\n        }\n        cookies[cookie.name] = [cookie];\n        return cookies[cookie.name];\n      };\n      //returns a cookie\n      this.getCookie = function getCookie(cookie_name, access_info) {\n        var cookie, i;\n        cookies_list = cookies[cookie_name];\n        if (!cookies_list) {\n          return;\n        }\n        for (i = 0; i < cookies_list.length; i += 1) {\n          cookie = cookies_list[i];\n          if (cookie.expiration_date <= Date.now()) {\n            if (cookies_list.length === 0) {\n              delete cookies[cookie.name];\n            }\n            continue;\n          }\n          if (cookie.matches(access_info)) {\n            return cookie;\n          }\n        }\n      };\n      //returns a list of cookies\n      this.getCookies = function getCookies(access_info) {\n        var matches = [],\n          cookie_name,\n          cookie;\n        for (cookie_name in cookies) {\n          cookie = this.getCookie(cookie_name, access_info);\n          if (cookie) {\n            matches.push(cookie);\n          }\n        }\n        matches.toString = function toString() {\n          return matches.join(\":\");\n        };\n        matches.toValueString = function toValueString() {\n          return matches.map(function (c) {\n            return c.toValueString();\n          }).join('; ');\n        };\n        return matches;\n      };\n      return this;\n    }\n    return new CookieJar();\n  }\n  exports.CookieJar = CookieJar;\n\n  //returns list of cookies that were set correctly. Cookies that are expired and removed are not returned.\n  CookieJar.prototype.setCookies = function setCookies(cookies, request_domain, request_path) {\n    cookies = Array.isArray(cookies) ? cookies : cookies.split(cookie_str_splitter);\n    var successful = [],\n      i,\n      cookie;\n    cookies = cookies.map(function (item) {\n      return new Cookie(item, request_domain, request_path);\n    });\n    for (i = 0; i < cookies.length; i += 1) {\n      cookie = cookies[i];\n      if (this.setCookie(cookie, request_domain, request_path)) {\n        successful.push(cookie);\n      }\n    }\n    return successful;\n  };\n})();","map":{"version":3,"names":["CookieAccessInfo","domain","path","secure","script","undefined","All","Object","freeze","create","exports","Cookie","cookiestr","request_domain","request_path","name","value","expiration_date","Infinity","String","explicit_path","explicit_domain","noscript","parse","prototype","toString","str","push","Date","toGMTString","join","toValueString","cookie_str_splitter","parts","split","filter","i","pair","match","console","warn","key","length","trim","toLowerCase","Number","matches","access_info","collidesWith","indexOf","access_domain","replace","cookie_domain","wildcard","CookieJar","cookies","cookies_list","collidable_cookie","setCookie","cookie","remove","now","splice","getCookie","cookie_name","getCookies","map","c","setCookies","Array","isArray","successful","item"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/cookiejar/cookiejar.js"],"sourcesContent":["/* jshint node: true */\n(function () {\n    \"use strict\";\n\n    function CookieAccessInfo(domain, path, secure, script) {\n        if (this instanceof CookieAccessInfo) {\n            this.domain = domain || undefined;\n            this.path = path || \"/\";\n            this.secure = !!secure;\n            this.script = !!script;\n            return this;\n        }\n        return new CookieAccessInfo(domain, path, secure, script);\n    }\n    CookieAccessInfo.All = Object.freeze(Object.create(null));\n    exports.CookieAccessInfo = CookieAccessInfo;\n\n    function Cookie(cookiestr, request_domain, request_path) {\n        if (cookiestr instanceof Cookie) {\n            return cookiestr;\n        }\n        if (this instanceof Cookie) {\n            this.name = null;\n            this.value = null;\n            this.expiration_date = Infinity;\n            this.path = String(request_path || \"/\");\n            this.explicit_path = false;\n            this.domain = request_domain || null;\n            this.explicit_domain = false;\n            this.secure = false; //how to define default?\n            this.noscript = false; //httponly\n            if (cookiestr) {\n                this.parse(cookiestr, request_domain, request_path);\n            }\n            return this;\n        }\n        return new Cookie(cookiestr, request_domain, request_path);\n    }\n    exports.Cookie = Cookie;\n\n    Cookie.prototype.toString = function toString() {\n        var str = [this.name + \"=\" + this.value];\n        if (this.expiration_date !== Infinity) {\n            str.push(\"expires=\" + (new Date(this.expiration_date)).toGMTString());\n        }\n        if (this.domain) {\n            str.push(\"domain=\" + this.domain);\n        }\n        if (this.path) {\n            str.push(\"path=\" + this.path);\n        }\n        if (this.secure) {\n            str.push(\"secure\");\n        }\n        if (this.noscript) {\n            str.push(\"httponly\");\n        }\n        return str.join(\"; \");\n    };\n\n    Cookie.prototype.toValueString = function toValueString() {\n        return this.name + \"=\" + this.value;\n    };\n\n    var cookie_str_splitter = /[:](?=\\s*[a-zA-Z0-9_\\-]+\\s*[=])/g;\n    Cookie.prototype.parse = function parse(str, request_domain, request_path) {\n        if (this instanceof Cookie) {\n            var parts = str.split(\";\").filter(function (value) {\n                    return !!value;\n                });\n            var i;\n\n            var pair = parts[0].match(/([^=]+)=([\\s\\S]*)/);\n            if (!pair) {\n                console.warn(\"Invalid cookie header encountered. Header: '\"+str+\"'\");\n                return;\n            }\n\n            var key = pair[1];\n            var value = pair[2];\n            if ( typeof key !== 'string' || key.length === 0 || typeof value !== 'string' ) {\n                console.warn(\"Unable to extract values from cookie header. Cookie: '\"+str+\"'\");\n                return;\n            }\n\n            this.name = key;\n            this.value = value;\n\n            for (i = 1; i < parts.length; i += 1) {\n                pair = parts[i].match(/([^=]+)(?:=([\\s\\S]*))?/);\n                key = pair[1].trim().toLowerCase();\n                value = pair[2];\n                switch (key) {\n                case \"httponly\":\n                    this.noscript = true;\n                    break;\n                case \"expires\":\n                    this.expiration_date = value ?\n                            Number(Date.parse(value)) :\n                            Infinity;\n                    break;\n                case \"path\":\n                    this.path = value ?\n                            value.trim() :\n                            \"\";\n                    this.explicit_path = true;\n                    break;\n                case \"domain\":\n                    this.domain = value ?\n                            value.trim() :\n                            \"\";\n                    this.explicit_domain = !!this.domain;\n                    break;\n                case \"secure\":\n                    this.secure = true;\n                    break;\n                }\n            }\n\n            if (!this.explicit_path) {\n               this.path = request_path || \"/\";\n            }\n            if (!this.explicit_domain) {\n               this.domain = request_domain;\n            }\n\n            return this;\n        }\n        return new Cookie().parse(str, request_domain, request_path);\n    };\n\n    Cookie.prototype.matches = function matches(access_info) {\n        if (access_info === CookieAccessInfo.All) {\n          return true;\n        }\n        if (this.noscript && access_info.script ||\n                this.secure && !access_info.secure ||\n                !this.collidesWith(access_info)) {\n            return false;\n        }\n        return true;\n    };\n\n    Cookie.prototype.collidesWith = function collidesWith(access_info) {\n        if ((this.path && !access_info.path) || (this.domain && !access_info.domain)) {\n            return false;\n        }\n        if (this.path && access_info.path.indexOf(this.path) !== 0) {\n            return false;\n        }\n        if (this.explicit_path && access_info.path.indexOf( this.path ) !== 0) {\n           return false;\n        }\n        var access_domain = access_info.domain && access_info.domain.replace(/^[\\.]/,'');\n        var cookie_domain = this.domain && this.domain.replace(/^[\\.]/,'');\n        if (cookie_domain === access_domain) {\n            return true;\n        }\n        if (cookie_domain) {\n            if (!this.explicit_domain) {\n                return false; // we already checked if the domains were exactly the same\n            }\n            var wildcard = access_domain.indexOf(cookie_domain);\n            if (wildcard === -1 || wildcard !== access_domain.length - cookie_domain.length) {\n                return false;\n            }\n            return true;\n        }\n        return true;\n    };\n\n    function CookieJar() {\n        var cookies, cookies_list, collidable_cookie;\n        if (this instanceof CookieJar) {\n            cookies = Object.create(null); //name: [Cookie]\n\n            this.setCookie = function setCookie(cookie, request_domain, request_path) {\n                var remove, i;\n                cookie = new Cookie(cookie, request_domain, request_path);\n                //Delete the cookie if the set is past the current time\n                remove = cookie.expiration_date <= Date.now();\n                if (cookies[cookie.name] !== undefined) {\n                    cookies_list = cookies[cookie.name];\n                    for (i = 0; i < cookies_list.length; i += 1) {\n                        collidable_cookie = cookies_list[i];\n                        if (collidable_cookie.collidesWith(cookie)) {\n                            if (remove) {\n                                cookies_list.splice(i, 1);\n                                if (cookies_list.length === 0) {\n                                    delete cookies[cookie.name];\n                                }\n                                return false;\n                            }\n                            cookies_list[i] = cookie;\n                            return cookie;\n                        }\n                    }\n                    if (remove) {\n                        return false;\n                    }\n                    cookies_list.push(cookie);\n                    return cookie;\n                }\n                if (remove) {\n                    return false;\n                }\n                cookies[cookie.name] = [cookie];\n                return cookies[cookie.name];\n            };\n            //returns a cookie\n            this.getCookie = function getCookie(cookie_name, access_info) {\n                var cookie, i;\n                cookies_list = cookies[cookie_name];\n                if (!cookies_list) {\n                    return;\n                }\n                for (i = 0; i < cookies_list.length; i += 1) {\n                    cookie = cookies_list[i];\n                    if (cookie.expiration_date <= Date.now()) {\n                        if (cookies_list.length === 0) {\n                            delete cookies[cookie.name];\n                        }\n                        continue;\n                    }\n\n                    if (cookie.matches(access_info)) {\n                        return cookie;\n                    }\n                }\n            };\n            //returns a list of cookies\n            this.getCookies = function getCookies(access_info) {\n                var matches = [], cookie_name, cookie;\n                for (cookie_name in cookies) {\n                    cookie = this.getCookie(cookie_name, access_info);\n                    if (cookie) {\n                        matches.push(cookie);\n                    }\n                }\n                matches.toString = function toString() {\n                    return matches.join(\":\");\n                };\n                matches.toValueString = function toValueString() {\n                    return matches.map(function (c) {\n                        return c.toValueString();\n                    }).join('; ');\n                };\n                return matches;\n            };\n\n            return this;\n        }\n        return new CookieJar();\n    }\n    exports.CookieJar = CookieJar;\n\n    //returns list of cookies that were set correctly. Cookies that are expired and removed are not returned.\n    CookieJar.prototype.setCookies = function setCookies(cookies, request_domain, request_path) {\n        cookies = Array.isArray(cookies) ?\n                cookies :\n                cookies.split(cookie_str_splitter);\n        var successful = [],\n            i,\n            cookie;\n        cookies = cookies.map(function(item){\n            return new Cookie(item, request_domain, request_path);\n        });\n        for (i = 0; i < cookies.length; i += 1) {\n            cookie = cookies[i];\n            if (this.setCookie(cookie, request_domain, request_path)) {\n                successful.push(cookie);\n            }\n        }\n        return successful;\n    };\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}