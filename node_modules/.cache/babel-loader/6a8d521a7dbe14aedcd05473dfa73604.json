{"ast":null,"code":"const createPayload = require('../util/create-payload.js');\nmodule.exports = SubProvider;\n\n// this is the base class for a subprovider -- mostly helpers\n\nfunction SubProvider() {}\nSubProvider.prototype.setEngine = function (engine) {\n  const self = this;\n  if (self.engine) return;\n  self.engine = engine;\n  engine.on('block', function (block) {\n    self.currentBlock = block;\n  });\n  engine.on('start', function () {\n    self.start();\n  });\n  engine.on('stop', function () {\n    self.stop();\n  });\n};\nSubProvider.prototype.handleRequest = function (payload, next, end) {\n  throw new Error('Subproviders should override `handleRequest`.');\n};\nSubProvider.prototype.emitPayload = function (payload, cb) {\n  const self = this;\n  self.engine.sendAsync(createPayload(payload), cb);\n};\n\n// dummies for overriding\n\nSubProvider.prototype.stop = function () {};\nSubProvider.prototype.start = function () {};","map":{"version":3,"names":["createPayload","require","module","exports","SubProvider","prototype","setEngine","engine","self","on","block","currentBlock","start","stop","handleRequest","payload","next","end","Error","emitPayload","cb","sendAsync"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/web3-provider-engine/subproviders/subprovider.js"],"sourcesContent":["const createPayload = require('../util/create-payload.js')\n\nmodule.exports = SubProvider\n\n// this is the base class for a subprovider -- mostly helpers\n\n\nfunction SubProvider() {\n\n}\n\nSubProvider.prototype.setEngine = function(engine) {\n  const self = this\n  if (self.engine) return\n  self.engine = engine\n  engine.on('block', function(block) {\n    self.currentBlock = block\n  })\n\n  engine.on('start', function () {\n    self.start()\n  })\n\n  engine.on('stop', function () {\n    self.stop()\n  })\n}\n\nSubProvider.prototype.handleRequest = function(payload, next, end) {\n  throw new Error('Subproviders should override `handleRequest`.')\n}\n\nSubProvider.prototype.emitPayload = function(payload, cb){\n  const self = this\n  self.engine.sendAsync(createPayload(payload), cb)\n}\n\n// dummies for overriding\n\nSubProvider.prototype.stop = function () {}\n\nSubProvider.prototype.start = function () {}\n"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAE1DC,MAAM,CAACC,OAAO,GAAGC,WAAW;;AAE5B;;AAGA,SAASA,WAAW,GAAG,CAEvB;AAEAA,WAAW,CAACC,SAAS,CAACC,SAAS,GAAG,UAASC,MAAM,EAAE;EACjD,MAAMC,IAAI,GAAG,IAAI;EACjB,IAAIA,IAAI,CAACD,MAAM,EAAE;EACjBC,IAAI,CAACD,MAAM,GAAGA,MAAM;EACpBA,MAAM,CAACE,EAAE,CAAC,OAAO,EAAE,UAASC,KAAK,EAAE;IACjCF,IAAI,CAACG,YAAY,GAAGD,KAAK;EAC3B,CAAC,CAAC;EAEFH,MAAM,CAACE,EAAE,CAAC,OAAO,EAAE,YAAY;IAC7BD,IAAI,CAACI,KAAK,EAAE;EACd,CAAC,CAAC;EAEFL,MAAM,CAACE,EAAE,CAAC,MAAM,EAAE,YAAY;IAC5BD,IAAI,CAACK,IAAI,EAAE;EACb,CAAC,CAAC;AACJ,CAAC;AAEDT,WAAW,CAACC,SAAS,CAACS,aAAa,GAAG,UAASC,OAAO,EAAEC,IAAI,EAAEC,GAAG,EAAE;EACjE,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;AAClE,CAAC;AAEDd,WAAW,CAACC,SAAS,CAACc,WAAW,GAAG,UAASJ,OAAO,EAAEK,EAAE,EAAC;EACvD,MAAMZ,IAAI,GAAG,IAAI;EACjBA,IAAI,CAACD,MAAM,CAACc,SAAS,CAACrB,aAAa,CAACe,OAAO,CAAC,EAAEK,EAAE,CAAC;AACnD,CAAC;;AAED;;AAEAhB,WAAW,CAACC,SAAS,CAACQ,IAAI,GAAG,YAAY,CAAC,CAAC;AAE3CT,WAAW,CAACC,SAAS,CAACO,KAAK,GAAG,YAAY,CAAC,CAAC"},"metadata":{},"sourceType":"script"}