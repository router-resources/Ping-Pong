{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nvar Capability;\n(function (Capability) {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n  /**\n   * Tx supports EIP-1559 gas fee market mechansim\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability = exports.Capability || (exports.Capability = {}));\nfunction isAccessListBuffer(input) {\n  if (input.length === 0) {\n    return true;\n  }\n  var firstItem = input[0];\n  if (Array.isArray(firstItem)) {\n    return true;\n  }\n  return false;\n}\nexports.isAccessListBuffer = isAccessListBuffer;\nfunction isAccessList(input) {\n  return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\n\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);","map":{"version":3,"mappings":";;;;;;AAAA;AAMA;;;;AAIA,IAAYA,UAwBX;AAxBD,WAAYA,UAAU;EACpB;;;;EAIAA,iFAA4B;EAE5B;;;;EAIAA,sEAAuB;EAEvB;;;;EAIAA,oFAA8B;EAE9B;;;;EAIAA,0EAAyB;AAC3B,CAAC,EAxBWA,UAAU,GAAVC,kBAAU,KAAVA,kBAAU;AAuEtB,SAAgBC,kBAAkB,CAChCC,KAAoC;EAEpC,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO,IAAI;;EAEb,IAAMC,SAAS,GAAGF,KAAK,CAAC,CAAC,CAAC;EAC1B,IAAIG,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,EAAE;IAC5B,OAAO,IAAI;;EAEb,OAAO,KAAK;AACd;AAXAJ;AAaA,SAAgBO,YAAY,CAACL,KAAoC;EAC/D,OAAO,CAACD,kBAAkB,CAACC,KAAK,CAAC,EAAC;AACpC;;AAFAF;AA4KA;;;AAGaA,eAAO,GAAG,IAAIQ,oBAAE,CAC3B,kEAAkE,EAClE,EAAE,CACH","names":["Capability","exports","isAccessListBuffer","input","length","firstItem","Array","isArray","isAccessList","ethereumjs_util_1"],"sourceRoot":"","sources":["../src/types.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}