{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nvar Semaphore = /** @class */function () {\n  function Semaphore(_maxConcurrency) {\n    this._maxConcurrency = _maxConcurrency;\n    this._queue = [];\n    if (_maxConcurrency <= 0) {\n      throw new Error('semaphore must be initialized to a positive value');\n    }\n    this._value = _maxConcurrency;\n  }\n  Semaphore.prototype.acquire = function () {\n    var _this = this;\n    var locked = this.isLocked();\n    var ticket = new Promise(function (r) {\n      return _this._queue.push(r);\n    });\n    if (!locked) this._dispatch();\n    return ticket;\n  };\n  Semaphore.prototype.runExclusive = function (callback) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, value, release;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this.acquire()];\n          case 1:\n            _a = _b.sent(), value = _a[0], release = _a[1];\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2,, 4, 5]);\n            return [4 /*yield*/, callback(value)];\n          case 3:\n            return [2 /*return*/, _b.sent()];\n          case 4:\n            release();\n            return [7 /*endfinally*/];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Semaphore.prototype.isLocked = function () {\n    return this._value <= 0;\n  };\n  Semaphore.prototype.release = function () {\n    if (this._maxConcurrency > 1) {\n      throw new Error('this method is unavailabel on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\n    }\n    if (this._currentReleaser) {\n      var releaser = this._currentReleaser;\n      this._currentReleaser = undefined;\n      releaser();\n    }\n  };\n  Semaphore.prototype._dispatch = function () {\n    var _this = this;\n    var nextConsumer = this._queue.shift();\n    if (!nextConsumer) return;\n    var released = false;\n    this._currentReleaser = function () {\n      if (released) return;\n      released = true;\n      _this._value++;\n      _this._dispatch();\n    };\n    nextConsumer([this._value--, this._currentReleaser]);\n  };\n  return Semaphore;\n}();\nexport default Semaphore;","map":{"version":3,"names":["__awaiter","__generator","Semaphore","_maxConcurrency","_queue","Error","_value","prototype","acquire","_this","locked","isLocked","ticket","Promise","r","push","_dispatch","runExclusive","callback","_a","value","release","_b","label","sent","trys","_currentReleaser","releaser","undefined","nextConsumer","shift","released"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/eth-json-rpc-filters/node_modules/async-mutex/es6/Semaphore.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nvar Semaphore = /** @class */ (function () {\n    function Semaphore(_maxConcurrency) {\n        this._maxConcurrency = _maxConcurrency;\n        this._queue = [];\n        if (_maxConcurrency <= 0) {\n            throw new Error('semaphore must be initialized to a positive value');\n        }\n        this._value = _maxConcurrency;\n    }\n    Semaphore.prototype.acquire = function () {\n        var _this = this;\n        var locked = this.isLocked();\n        var ticket = new Promise(function (r) { return _this._queue.push(r); });\n        if (!locked)\n            this._dispatch();\n        return ticket;\n    };\n    Semaphore.prototype.runExclusive = function (callback) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, value, release;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.acquire()];\n                    case 1:\n                        _a = _b.sent(), value = _a[0], release = _a[1];\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, , 4, 5]);\n                        return [4 /*yield*/, callback(value)];\n                    case 3: return [2 /*return*/, _b.sent()];\n                    case 4:\n                        release();\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Semaphore.prototype.isLocked = function () {\n        return this._value <= 0;\n    };\n    Semaphore.prototype.release = function () {\n        if (this._maxConcurrency > 1) {\n            throw new Error('this method is unavailabel on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\n        }\n        if (this._currentReleaser) {\n            var releaser = this._currentReleaser;\n            this._currentReleaser = undefined;\n            releaser();\n        }\n    };\n    Semaphore.prototype._dispatch = function () {\n        var _this = this;\n        var nextConsumer = this._queue.shift();\n        if (!nextConsumer)\n            return;\n        var released = false;\n        this._currentReleaser = function () {\n            if (released)\n                return;\n            released = true;\n            _this._value++;\n            _this._dispatch();\n        };\n        nextConsumer([this._value--, this._currentReleaser]);\n    };\n    return Semaphore;\n}());\nexport default Semaphore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}