{"ast":null,"code":"var at,\n  // The index of the current character\n  ch,\n  // The current character\n  escapee = {\n    '\"': '\"',\n    '\\\\': '\\\\',\n    '/': '/',\n    b: '\\b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t'\n  },\n  text,\n  error = function (m) {\n    // Call error when something is wrong.\n    throw {\n      name: 'SyntaxError',\n      message: m,\n      at: at,\n      text: text\n    };\n  },\n  next = function (c) {\n    // If a c parameter is provided, verify that it matches the current character.\n    if (c && c !== ch) {\n      error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n    }\n\n    // Get the next character. When there are no more characters,\n    // return the empty string.\n\n    ch = text.charAt(at);\n    at += 1;\n    return ch;\n  },\n  number = function () {\n    // Parse a number value.\n    var number,\n      string = '';\n    if (ch === '-') {\n      string = '-';\n      next('-');\n    }\n    while (ch >= '0' && ch <= '9') {\n      string += ch;\n      next();\n    }\n    if (ch === '.') {\n      string += '.';\n      while (next() && ch >= '0' && ch <= '9') {\n        string += ch;\n      }\n    }\n    if (ch === 'e' || ch === 'E') {\n      string += ch;\n      next();\n      if (ch === '-' || ch === '+') {\n        string += ch;\n        next();\n      }\n      while (ch >= '0' && ch <= '9') {\n        string += ch;\n        next();\n      }\n    }\n    number = +string;\n    if (!isFinite(number)) {\n      error(\"Bad number\");\n    } else {\n      return number;\n    }\n  },\n  string = function () {\n    // Parse a string value.\n    var hex,\n      i,\n      string = '',\n      uffff;\n\n    // When parsing for string values, we must look for \" and \\ characters.\n    if (ch === '\"') {\n      while (next()) {\n        if (ch === '\"') {\n          next();\n          return string;\n        } else if (ch === '\\\\') {\n          next();\n          if (ch === 'u') {\n            uffff = 0;\n            for (i = 0; i < 4; i += 1) {\n              hex = parseInt(next(), 16);\n              if (!isFinite(hex)) {\n                break;\n              }\n              uffff = uffff * 16 + hex;\n            }\n            string += String.fromCharCode(uffff);\n          } else if (typeof escapee[ch] === 'string') {\n            string += escapee[ch];\n          } else {\n            break;\n          }\n        } else {\n          string += ch;\n        }\n      }\n    }\n    error(\"Bad string\");\n  },\n  white = function () {\n    // Skip whitespace.\n\n    while (ch && ch <= ' ') {\n      next();\n    }\n  },\n  word = function () {\n    // true, false, or null.\n\n    switch (ch) {\n      case 't':\n        next('t');\n        next('r');\n        next('u');\n        next('e');\n        return true;\n      case 'f':\n        next('f');\n        next('a');\n        next('l');\n        next('s');\n        next('e');\n        return false;\n      case 'n':\n        next('n');\n        next('u');\n        next('l');\n        next('l');\n        return null;\n    }\n    error(\"Unexpected '\" + ch + \"'\");\n  },\n  value,\n  // Place holder for the value function.\n\n  array = function () {\n    // Parse an array value.\n\n    var array = [];\n    if (ch === '[') {\n      next('[');\n      white();\n      if (ch === ']') {\n        next(']');\n        return array; // empty array\n      }\n\n      while (ch) {\n        array.push(value());\n        white();\n        if (ch === ']') {\n          next(']');\n          return array;\n        }\n        next(',');\n        white();\n      }\n    }\n    error(\"Bad array\");\n  },\n  object = function () {\n    // Parse an object value.\n\n    var key,\n      object = {};\n    if (ch === '{') {\n      next('{');\n      white();\n      if (ch === '}') {\n        next('}');\n        return object; // empty object\n      }\n\n      while (ch) {\n        key = string();\n        white();\n        next(':');\n        if (Object.hasOwnProperty.call(object, key)) {\n          error('Duplicate key \"' + key + '\"');\n        }\n        object[key] = value();\n        white();\n        if (ch === '}') {\n          next('}');\n          return object;\n        }\n        next(',');\n        white();\n      }\n    }\n    error(\"Bad object\");\n  };\nvalue = function () {\n  // Parse a JSON value. It could be an object, an array, a string, a number,\n  // or a word.\n\n  white();\n  switch (ch) {\n    case '{':\n      return object();\n    case '[':\n      return array();\n    case '\"':\n      return string();\n    case '-':\n      return number();\n    default:\n      return ch >= '0' && ch <= '9' ? number() : word();\n  }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n  var result;\n  text = source;\n  at = 0;\n  ch = ' ';\n  result = value();\n  white();\n  if (ch) {\n    error(\"Syntax error\");\n  }\n\n  // If there is a reviver function, we recursively walk the new structure,\n  // passing each name/value pair to the reviver function for possible\n  // transformation, starting with a temporary root object that holds the result\n  // in an empty key. If there is not a reviver function, we simply return the\n  // result.\n\n  return typeof reviver === 'function' ? function walk(holder, key) {\n    var k,\n      v,\n      value = holder[key];\n    if (value && typeof value === 'object') {\n      for (k in value) {\n        if (Object.prototype.hasOwnProperty.call(value, k)) {\n          v = walk(value, k);\n          if (v !== undefined) {\n            value[k] = v;\n          } else {\n            delete value[k];\n          }\n        }\n      }\n    }\n    return reviver.call(holder, key, value);\n  }({\n    '': result\n  }, '') : result;\n};","map":{"version":3,"names":["at","ch","escapee","b","f","n","r","t","text","error","m","name","message","next","c","charAt","number","string","isFinite","hex","i","uffff","parseInt","String","fromCharCode","white","word","value","array","push","object","key","Object","hasOwnProperty","call","module","exports","source","reviver","result","walk","holder","k","v","prototype","undefined"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/jsonify/lib/parse.js"],"sourcesContent":["var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}