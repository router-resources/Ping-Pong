{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2016\n */\n\"use strict\";\n\nvar EventEmitter = require('eventemitter3');\n/**\n * This function generates a defer promise and adds eventEmitter functionality to it\n *\n * @method eventifiedPromise\n */\nvar PromiEvent = function PromiEvent(justPromise) {\n  var resolve,\n    reject,\n    eventEmitter = new Promise(function () {\n      resolve = arguments[0];\n      reject = arguments[1];\n    });\n  if (justPromise) {\n    return {\n      resolve: resolve,\n      reject: reject,\n      eventEmitter: eventEmitter\n    };\n  }\n  // get eventEmitter\n  var emitter = new EventEmitter();\n  // add eventEmitter to the promise\n  eventEmitter._events = emitter._events;\n  eventEmitter.emit = emitter.emit;\n  eventEmitter.on = emitter.on;\n  eventEmitter.once = emitter.once;\n  eventEmitter.off = emitter.off;\n  eventEmitter.listeners = emitter.listeners;\n  eventEmitter.addListener = emitter.addListener;\n  eventEmitter.removeListener = emitter.removeListener;\n  eventEmitter.removeAllListeners = emitter.removeAllListeners;\n  return {\n    resolve: resolve,\n    reject: reject,\n    eventEmitter: eventEmitter\n  };\n};\nPromiEvent.resolve = function (value) {\n  var promise = PromiEvent(true);\n  promise.resolve(value);\n  return promise.eventEmitter;\n};\nmodule.exports = PromiEvent;","map":{"version":3,"names":["EventEmitter","require","PromiEvent","justPromise","resolve","reject","eventEmitter","Promise","arguments","emitter","_events","emit","on","once","off","listeners","addListener","removeListener","removeAllListeners","value","promise","module","exports"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/web3-core-promievent/lib/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2016\n */\n\"use strict\";\nvar EventEmitter = require('eventemitter3');\n/**\n * This function generates a defer promise and adds eventEmitter functionality to it\n *\n * @method eventifiedPromise\n */\nvar PromiEvent = function PromiEvent(justPromise) {\n    var resolve, reject, eventEmitter = new Promise(function () {\n        resolve = arguments[0];\n        reject = arguments[1];\n    });\n    if (justPromise) {\n        return {\n            resolve: resolve,\n            reject: reject,\n            eventEmitter: eventEmitter\n        };\n    }\n    // get eventEmitter\n    var emitter = new EventEmitter();\n    // add eventEmitter to the promise\n    eventEmitter._events = emitter._events;\n    eventEmitter.emit = emitter.emit;\n    eventEmitter.on = emitter.on;\n    eventEmitter.once = emitter.once;\n    eventEmitter.off = emitter.off;\n    eventEmitter.listeners = emitter.listeners;\n    eventEmitter.addListener = emitter.addListener;\n    eventEmitter.removeListener = emitter.removeListener;\n    eventEmitter.removeAllListeners = emitter.removeAllListeners;\n    return {\n        resolve: resolve,\n        reject: reject,\n        eventEmitter: eventEmitter\n    };\n};\nPromiEvent.resolve = function (value) {\n    var promise = PromiEvent(true);\n    promise.resolve(value);\n    return promise.eventEmitter;\n};\nmodule.exports = PromiEvent;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AACZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAU,GAAG,SAASA,UAAU,CAACC,WAAW,EAAE;EAC9C,IAAIC,OAAO;IAAEC,MAAM;IAAEC,YAAY,GAAG,IAAIC,OAAO,CAAC,YAAY;MACxDH,OAAO,GAAGI,SAAS,CAAC,CAAC,CAAC;MACtBH,MAAM,GAAGG,SAAS,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC;EACF,IAAIL,WAAW,EAAE;IACb,OAAO;MACHC,OAAO,EAAEA,OAAO;MAChBC,MAAM,EAAEA,MAAM;MACdC,YAAY,EAAEA;IAClB,CAAC;EACL;EACA;EACA,IAAIG,OAAO,GAAG,IAAIT,YAAY,EAAE;EAChC;EACAM,YAAY,CAACI,OAAO,GAAGD,OAAO,CAACC,OAAO;EACtCJ,YAAY,CAACK,IAAI,GAAGF,OAAO,CAACE,IAAI;EAChCL,YAAY,CAACM,EAAE,GAAGH,OAAO,CAACG,EAAE;EAC5BN,YAAY,CAACO,IAAI,GAAGJ,OAAO,CAACI,IAAI;EAChCP,YAAY,CAACQ,GAAG,GAAGL,OAAO,CAACK,GAAG;EAC9BR,YAAY,CAACS,SAAS,GAAGN,OAAO,CAACM,SAAS;EAC1CT,YAAY,CAACU,WAAW,GAAGP,OAAO,CAACO,WAAW;EAC9CV,YAAY,CAACW,cAAc,GAAGR,OAAO,CAACQ,cAAc;EACpDX,YAAY,CAACY,kBAAkB,GAAGT,OAAO,CAACS,kBAAkB;EAC5D,OAAO;IACHd,OAAO,EAAEA,OAAO;IAChBC,MAAM,EAAEA,MAAM;IACdC,YAAY,EAAEA;EAClB,CAAC;AACL,CAAC;AACDJ,UAAU,CAACE,OAAO,GAAG,UAAUe,KAAK,EAAE;EAClC,IAAIC,OAAO,GAAGlB,UAAU,CAAC,IAAI,CAAC;EAC9BkB,OAAO,CAAChB,OAAO,CAACe,KAAK,CAAC;EACtB,OAAOC,OAAO,CAACd,YAAY;AAC/B,CAAC;AACDe,MAAM,CAACC,OAAO,GAAGpB,UAAU"},"metadata":{},"sourceType":"script"}