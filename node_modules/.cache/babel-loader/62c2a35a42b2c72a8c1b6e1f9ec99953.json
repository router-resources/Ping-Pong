{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.beLeader = beLeader;\nexports.createLeaderElection = createLeaderElection;\nvar _util = require(\"./util.js\");\nvar _unload = require(\"unload\");\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this.hasLeader = false;\n  this.isDead = false;\n  this.token = (0, _util.randomToken)();\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n\n  this._aplQ = _util.PROMISE_RESOLVED_VOID; // amount of unfinished applyOnce() calls\n\n  this._aplQC = 0; // things to clean up\n\n  this._unl = []; // _unloads\n\n  this._lstns = []; // _listeners\n\n  this._dpL = function () {}; // onduplicate listener\n\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this.hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this.hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return (0, _util.sleep)(0, true);\n    }\n    if (this.isDead) {\n      return (0, _util.sleep)(0, false);\n    }\n    /**\n     * Already applying more then once,\n     * -> wait for the apply queue to be finished.\n     */\n\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n    /**\n     * Add a new apply-run\n     */\n\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return _util.PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var recieved = [];\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          recieved.push(msg);\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2.hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other intances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      var applyPromise = _sendMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([(0, _util.sleep)(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      }) // send again in case another instance was just created\n      .then(function () {\n        return _sendMessage(_this2, 'apply');\n      }) // let others time to respond\n      .then(function () {\n        return Promise.race([(0, _util.sleep)(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n      return applyPromise;\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if ( /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return _sendMessage(this, 'death');\n  }\n};\n/**\n * @param leaderElector {LeaderElector}\n */\n\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return _util.PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    } // try once now\n\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n\n    var tryOnFallBack = function tryOnFallBack() {\n      return (0, _util.sleep)(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    tryOnFallBack(); // try when other leader dies\n\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector.hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\n/**\n * sends and internal message over the broadcast-channel\n */\n\nfunction _sendMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nfunction beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector.hasLeader = true;\n  var unloadFn = (0, _unload.add)(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      _sendMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n\n      _sendMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return _sendMessage(leaderElector, 'tell');\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nfunction createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","beLeader","createLeaderElection","_util","require","_unload","LeaderElection","broadcastChannel","options","_this","_options","isLeader","hasLeader","isDead","token","randomToken","_aplQ","PROMISE_RESOLVED_VOID","_aplQC","_unl","_lstns","_dpL","_dpLC","hasLeaderListener","msg","context","action","addEventListener","push","prototype","applyOnce","isFromFallbackInterval","_this2","sleep","applyRun","PROMISE_RESOLVED_TRUE","stopCriteria","stopCriteriaPromiseResolve","stopCriteriaPromise","Promise","res","recieved","handleMessage","waitForAnswerTime","responseTime","applyPromise","_sendMessage","then","race","reject","Error","removeEventListener","awaitLeadership","_aLP","_awaitLeadershipOnce","onduplicate","fn","die","_this3","forEach","listener","uFn","remove","leaderElector","resolved","finish","whenDeathListener","tryOnFallBack","fallbackInterval","msgJson","postInternal","unloadFn","add","isLeaderListener","fillOptionsWithDefaults","channel","JSON","parse","stringify","method","averageResponseTime","_leaderElector","elector","_befC"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/broadcast-channel/dist/lib/leader-election.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.beLeader = beLeader;\nexports.createLeaderElection = createLeaderElection;\n\nvar _util = require(\"./util.js\");\n\nvar _unload = require(\"unload\");\n\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this.hasLeader = false;\n  this.isDead = false;\n  this.token = (0, _util.randomToken)();\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n\n  this._aplQ = _util.PROMISE_RESOLVED_VOID; // amount of unfinished applyOnce() calls\n\n  this._aplQC = 0; // things to clean up\n\n  this._unl = []; // _unloads\n\n  this._lstns = []; // _listeners\n\n  this._dpL = function () {}; // onduplicate listener\n\n\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this.hasLeader = false;\n      }\n\n      if (msg.action === 'tell') {\n        _this.hasLeader = true;\n      }\n    }\n  };\n\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n\n  this._lstns.push(hasLeaderListener);\n};\n\nLeaderElection.prototype = {\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce( // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n\n    if (this.isLeader) {\n      return (0, _util.sleep)(0, true);\n    }\n\n    if (this.isDead) {\n      return (0, _util.sleep)(0, false);\n    }\n    /**\n     * Already applying more then once,\n     * -> wait for the apply queue to be finished.\n     */\n\n\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n    /**\n     * Add a new apply-run\n     */\n\n\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return _util.PROMISE_RESOLVED_TRUE;\n      }\n\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var recieved = [];\n\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          recieved.push(msg);\n\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2.hasLeader = true;\n          }\n        }\n      };\n\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other intances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n\n\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n\n      var applyPromise = _sendMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([(0, _util.sleep)(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      }) // send again in case another instance was just created\n      .then(function () {\n        return _sendMessage(_this2, 'apply');\n      }) // let others time to respond\n      .then(function () {\n        return Promise.race([(0, _util.sleep)(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n\n      return applyPromise;\n    };\n\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if (\n    /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n\n    return this._aLP;\n  },\n\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n\n  die: function die() {\n    var _this3 = this;\n\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n\n    this._lstns = [];\n\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n\n    this._unl = [];\n\n    if (this.isLeader) {\n      this.hasLeader = false;\n      this.isLeader = false;\n    }\n\n    this.isDead = true;\n    return _sendMessage(this, 'death');\n  }\n};\n/**\n * @param leaderElector {LeaderElector}\n */\n\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return _util.PROMISE_RESOLVED_VOID;\n  }\n\n  return new Promise(function (res) {\n    var resolved = false;\n\n    function finish() {\n      if (resolved) {\n        return;\n      }\n\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    } // try once now\n\n\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n\n    var tryOnFallBack = function tryOnFallBack() {\n      return (0, _util.sleep)(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n\n    tryOnFallBack(); // try when other leader dies\n\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector.hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\n/**\n * sends and internal message over the broadcast-channel\n */\n\n\nfunction _sendMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\n\nfunction beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector.hasLeader = true;\n  var unloadFn = (0, _unload.add)(function () {\n    return leaderElector.die();\n  });\n\n  leaderElector._unl.push(unloadFn);\n\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      _sendMessage(leaderElector, 'tell');\n    }\n\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n\n\n      _sendMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n\n  leaderElector._lstns.push(isLeaderListener);\n\n  return _sendMessage(leaderElector, 'tell');\n}\n\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n\n  return options;\n}\n\nfunction createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = new LeaderElection(channel, options);\n\n  channel._befC.push(function () {\n    return elector.die();\n  });\n\n  channel._leaderElector = elector;\n  return elector;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}