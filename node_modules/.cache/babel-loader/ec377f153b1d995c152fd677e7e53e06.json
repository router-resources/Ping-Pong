{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { BaseAdapter, WALLET_ADAPTERS, ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, ADAPTER_EVENTS, getChainConfig, WalletInitializationError, Web3AuthError, WalletLoginError } from '@web3auth/base';\nimport { PhantomInjectedProvider } from '@web3auth/solana-provider';\nimport log from 'loglevel';\nfunction poll(callback, interval, count) {\n  return new Promise((resolve, reject) => {\n    if (count > 0) {\n      setTimeout(async () => {\n        const done = await callback();\n        if (done) resolve(done);\n        if (!done) poll(callback, interval, count - 1).then(res => {\n          resolve(res);\n          return res;\n        }).catch(err => reject(err));\n      }, interval);\n    } else {\n      resolve(false);\n    }\n  });\n}\nconst detectProvider = async function () {\n  var _window$solana;\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    interval: 1000,\n    count: 3\n  };\n  const isPhantomAvailable = typeof window !== \"undefined\" && !!((_window$solana = window.solana) !== null && _window$solana !== void 0 && _window$solana.isPhantom);\n  if (isPhantomAvailable) {\n    return window.solana;\n  }\n  const isAvailable = await poll(() => {\n    var _window$solana2;\n    return (_window$solana2 = window.solana) === null || _window$solana2 === void 0 ? void 0 : _window$solana2.isPhantom;\n  }, options.interval, options.count);\n  if (isAvailable) return window.solana;\n  return null;\n};\nclass PhantomAdapter extends BaseAdapter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    _defineProperty(this, \"name\", WALLET_ADAPTERS.PHANTOM);\n    _defineProperty(this, \"adapterNamespace\", ADAPTER_NAMESPACES.SOLANA);\n    _defineProperty(this, \"currentChainNamespace\", CHAIN_NAMESPACES.SOLANA);\n    _defineProperty(this, \"type\", ADAPTER_CATEGORY.EXTERNAL);\n    _defineProperty(this, \"status\", ADAPTER_STATUS.NOT_READY);\n    _defineProperty(this, \"_wallet\", null);\n    _defineProperty(this, \"phantomProvider\", null);\n    _defineProperty(this, \"rehydrated\", false);\n    _defineProperty(this, \"_onDisconnect\", () => {\n      if (this._wallet) {\n        this._wallet.off(\"disconnect\", this._onDisconnect);\n        this.rehydrated = false; // ready to be connected again only if it was previously connected and not cleaned up\n\n        this.status = this.status === ADAPTER_STATUS.CONNECTED ? ADAPTER_STATUS.READY : ADAPTER_STATUS.NOT_READY;\n        this.emit(ADAPTER_EVENTS.DISCONNECTED);\n      }\n    });\n    this.chainConfig = options.chainConfig || null;\n  }\n  get isWalletConnected() {\n    var _this$_wallet;\n    return !!((_this$_wallet = this._wallet) !== null && _this$_wallet !== void 0 && _this$_wallet.isConnected && this.status === ADAPTER_STATUS.CONNECTED);\n  }\n  get provider() {\n    var _this$phantomProvider;\n    return ((_this$phantomProvider = this.phantomProvider) === null || _this$phantomProvider === void 0 ? void 0 : _this$phantomProvider.provider) || null;\n  }\n  set provider(_) {\n    throw new Error(\"Not implemented\");\n  }\n  setAdapterSettings(_) {}\n  async init(options) {\n    super.checkInitializationRequirements(); // set chainConfig for mainnet by default if not set\n\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n    }\n    this._wallet = await detectProvider({\n      interval: 500,\n      count: 3\n    });\n    if (!this._wallet) throw WalletInitializationError.notInstalled();\n    this.phantomProvider = new PhantomInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig\n      }\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.PHANTOM);\n    try {\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached phantom provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n  async connect() {\n    var _this = this;\n    try {\n      super.checkConnectionRequirements();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, {\n        adapter: WALLET_ADAPTERS.PHANTOM\n      });\n      if (!this._wallet) throw WalletInitializationError.notInstalled();\n      if (!this._wallet.isConnected) {\n        const handleDisconnect = this._wallet._handleDisconnect;\n        try {\n          await new Promise((resolve, reject) => {\n            const connect = async () => {\n              await this.connectWithProvider(this._wallet);\n              resolve(this.provider);\n            };\n            if (!this._wallet) return reject(WalletInitializationError.notInstalled());\n            this._wallet.once(\"connect\", connect); // Raise an issue on phantom that if window is closed, disconnect event is not fired\n\n            this._wallet._handleDisconnect = function () {\n              reject(WalletInitializationError.windowClosed());\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return handleDisconnect.apply(_this._wallet, args);\n            };\n            this._wallet.connect().catch(reason => {\n              reject(reason);\n            });\n          });\n        } catch (error) {\n          if (error instanceof Web3AuthError) throw error;\n          throw WalletLoginError.connectionError(error === null || error === void 0 ? void 0 : error.message);\n        } finally {\n          this._wallet._handleDisconnect = handleDisconnect;\n        }\n      } else {\n        await this.connectWithProvider(this._wallet);\n      }\n      if (!this._wallet.publicKey) throw WalletLoginError.connectionError();\n      this._wallet.on(\"disconnect\", this._onDisconnect);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    try {\n      var _this$_wallet2;\n      await ((_this$_wallet2 = this._wallet) === null || _this$_wallet2 === void 0 ? void 0 : _this$_wallet2.disconnect());\n      if (options.cleanup) {\n        this.status = ADAPTER_STATUS.NOT_READY;\n        this.phantomProvider = null;\n        this._wallet = null;\n      }\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    } catch (error) {\n      this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.disconnectionError(error === null || error === void 0 ? void 0 : error.message));\n    }\n  }\n  async getUserInfo() {\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n  async connectWithProvider(injectedProvider) {\n    if (!this.phantomProvider) throw WalletLoginError.connectionError(\"No phantom provider\");\n    await this.phantomProvider.setupProvider(injectedProvider);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, {\n      adapter: WALLET_ADAPTERS.PHANTOM,\n      reconnected: this.rehydrated\n    });\n    return this.provider;\n  }\n}\nexport { PhantomAdapter };","map":{"version":3,"mappings":"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","names":["poll","callback","interval","count","Promise","resolve","reject","setTimeout","done","then","res","catch","err","detectProvider","options","isPhantomAvailable","window","solana","_window$solana","isPhantom","isAvailable","_window$solana2","PhantomAdapter","BaseAdapter","constructor","WALLET_ADAPTERS","PHANTOM","ADAPTER_NAMESPACES","SOLANA","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","ADAPTER_STATUS","NOT_READY","_wallet","off","_onDisconnect","rehydrated","status","CONNECTED","READY","emit","ADAPTER_EVENTS","DISCONNECTED","chainConfig","isWalletConnected","isConnected","provider","phantomProvider","_","Error","setAdapterSettings","init","checkInitializationRequirements","getChainConfig","WalletInitializationError","notInstalled","PhantomInjectedProvider","config","autoConnect","connect","error","log","checkConnectionRequirements","CONNECTING","adapter","handleDisconnect","_handleDisconnect","connectWithProvider","once","windowClosed","args","apply","_this","reason","Web3AuthError","WalletLoginError","connectionError","message","publicKey","on","ERRORED","disconnect","cleanup","notConnectedError","_this$_wallet2","disconnectionError","getUserInfo","injectedProvider","setupProvider","reconnected"],"sources":["../src/utils.ts","../src/phantomAdapter.ts"],"sourcesContent":[null,null]},"metadata":{},"sourceType":"module"}