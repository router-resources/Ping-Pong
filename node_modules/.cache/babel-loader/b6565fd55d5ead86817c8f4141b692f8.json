{"ast":null,"code":"const stringify = require('json-stable-stringify');\nmodule.exports = {\n  cacheIdentifierForPayload: cacheIdentifierForPayload,\n  canCache: canCache,\n  blockTagForPayload: blockTagForPayload,\n  paramsWithoutBlockTag: paramsWithoutBlockTag,\n  blockTagParamIndex: blockTagParamIndex,\n  cacheTypeForPayload: cacheTypeForPayload\n};\nfunction cacheIdentifierForPayload(payload, skipBlockRef) {\n  const simpleParams = skipBlockRef ? paramsWithoutBlockTag(payload) : payload.params;\n  if (canCache(payload)) {\n    return payload.method + ':' + stringify(simpleParams);\n  } else {\n    return null;\n  }\n}\nfunction canCache(payload) {\n  return cacheTypeForPayload(payload) !== 'never';\n}\nfunction blockTagForPayload(payload) {\n  let index = blockTagParamIndex(payload);\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return null;\n  }\n  return payload.params[index];\n}\nfunction paramsWithoutBlockTag(payload) {\n  const index = blockTagParamIndex(payload);\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return payload.params;\n  }\n\n  // eth_getBlockByNumber has the block tag first, then the optional includeTx? param\n  if (payload.method === 'eth_getBlockByNumber') {\n    return payload.params.slice(1);\n  }\n  return payload.params.slice(0, index);\n}\nfunction blockTagParamIndex(payload) {\n  switch (payload.method) {\n    // blockTag is at index 2\n    case 'eth_getStorageAt':\n      return 2;\n    // blockTag is at index 1\n    case 'eth_getBalance':\n    case 'eth_getCode':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n      return 1;\n    // blockTag is at index 0\n    case 'eth_getBlockByNumber':\n      return 0;\n    // there is no blockTag\n    default:\n      return undefined;\n  }\n}\nfunction cacheTypeForPayload(payload) {\n  switch (payload.method) {\n    // cache permanently\n    case 'web3_clientVersion':\n    case 'web3_sha3':\n    case 'eth_protocolVersion':\n    case 'eth_getBlockTransactionCountByHash':\n    case 'eth_getUncleCountByBlockHash':\n    case 'eth_getCode':\n    case 'eth_getBlockByHash':\n    case 'eth_getTransactionByHash':\n    case 'eth_getTransactionByBlockHashAndIndex':\n    case 'eth_getTransactionReceipt':\n    case 'eth_getUncleByBlockHashAndIndex':\n    case 'eth_getCompilers':\n    case 'eth_compileLLL':\n    case 'eth_compileSolidity':\n    case 'eth_compileSerpent':\n    case 'shh_version':\n    case 'test_permaCache':\n      return 'perma';\n\n    // cache until fork\n    case 'eth_getBlockByNumber':\n    case 'eth_getBlockTransactionCountByNumber':\n    case 'eth_getUncleCountByBlockNumber':\n    case 'eth_getTransactionByBlockNumberAndIndex':\n    case 'eth_getUncleByBlockNumberAndIndex':\n    case 'test_forkCache':\n      return 'fork';\n\n    // cache for block\n    case 'eth_gasPrice':\n    case 'eth_blockNumber':\n    case 'eth_getBalance':\n    case 'eth_getStorageAt':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n    case 'eth_getFilterLogs':\n    case 'eth_getLogs':\n    case 'test_blockCache':\n      return 'block';\n\n    // never cache\n    case 'net_version':\n    case 'net_peerCount':\n    case 'net_listening':\n    case 'eth_syncing':\n    case 'eth_sign':\n    case 'eth_coinbase':\n    case 'eth_mining':\n    case 'eth_hashrate':\n    case 'eth_accounts':\n    case 'eth_sendTransaction':\n    case 'eth_sendRawTransaction':\n    case 'eth_newFilter':\n    case 'eth_newBlockFilter':\n    case 'eth_newPendingTransactionFilter':\n    case 'eth_uninstallFilter':\n    case 'eth_getFilterChanges':\n    case 'eth_getWork':\n    case 'eth_submitWork':\n    case 'eth_submitHashrate':\n    case 'db_putString':\n    case 'db_getString':\n    case 'db_putHex':\n    case 'db_getHex':\n    case 'shh_post':\n    case 'shh_newIdentity':\n    case 'shh_hasIdentity':\n    case 'shh_newGroup':\n    case 'shh_addToGroup':\n    case 'shh_newFilter':\n    case 'shh_uninstallFilter':\n    case 'shh_getFilterChanges':\n    case 'shh_getMessages':\n    case 'test_neverCache':\n      return 'never';\n  }\n}","map":{"version":3,"names":["stringify","require","module","exports","cacheIdentifierForPayload","canCache","blockTagForPayload","paramsWithoutBlockTag","blockTagParamIndex","cacheTypeForPayload","payload","skipBlockRef","simpleParams","params","method","index","length","slice","undefined"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/eth-json-rpc-middleware/cache-utils.js"],"sourcesContent":["const stringify = require('json-stable-stringify')\n\nmodule.exports = {\n  cacheIdentifierForPayload: cacheIdentifierForPayload,\n  canCache: canCache,\n  blockTagForPayload: blockTagForPayload,\n  paramsWithoutBlockTag: paramsWithoutBlockTag,\n  blockTagParamIndex: blockTagParamIndex,\n  cacheTypeForPayload: cacheTypeForPayload\n}\n\nfunction cacheIdentifierForPayload (payload, skipBlockRef) {\n  const simpleParams = skipBlockRef ? paramsWithoutBlockTag(payload) : payload.params\n  if (canCache(payload)) {\n    return payload.method + ':' + stringify(simpleParams)\n  } else {\n    return null\n  }\n}\n\nfunction canCache (payload) {\n  return cacheTypeForPayload(payload) !== 'never'\n}\n\nfunction blockTagForPayload (payload) {\n  let index = blockTagParamIndex(payload)\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return null\n  }\n\n  return payload.params[index]\n}\n\nfunction paramsWithoutBlockTag (payload) {\n  const index = blockTagParamIndex(payload)\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return payload.params\n  }\n\n  // eth_getBlockByNumber has the block tag first, then the optional includeTx? param\n  if (payload.method === 'eth_getBlockByNumber') {\n    return payload.params.slice(1)\n  }\n\n  return payload.params.slice(0, index)\n}\n\nfunction blockTagParamIndex (payload) {\n  switch (payload.method) {\n    // blockTag is at index 2\n    case 'eth_getStorageAt':\n      return 2\n    // blockTag is at index 1\n    case 'eth_getBalance':\n    case 'eth_getCode':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n      return 1\n    // blockTag is at index 0\n    case 'eth_getBlockByNumber':\n      return 0\n    // there is no blockTag\n    default:\n      return undefined\n  }\n}\n\nfunction cacheTypeForPayload (payload) {\n  switch (payload.method) {\n    // cache permanently\n    case 'web3_clientVersion':\n    case 'web3_sha3':\n    case 'eth_protocolVersion':\n    case 'eth_getBlockTransactionCountByHash':\n    case 'eth_getUncleCountByBlockHash':\n    case 'eth_getCode':\n    case 'eth_getBlockByHash':\n    case 'eth_getTransactionByHash':\n    case 'eth_getTransactionByBlockHashAndIndex':\n    case 'eth_getTransactionReceipt':\n    case 'eth_getUncleByBlockHashAndIndex':\n    case 'eth_getCompilers':\n    case 'eth_compileLLL':\n    case 'eth_compileSolidity':\n    case 'eth_compileSerpent':\n    case 'shh_version':\n    case 'test_permaCache':\n      return 'perma'\n\n    // cache until fork\n    case 'eth_getBlockByNumber':\n    case 'eth_getBlockTransactionCountByNumber':\n    case 'eth_getUncleCountByBlockNumber':\n    case 'eth_getTransactionByBlockNumberAndIndex':\n    case 'eth_getUncleByBlockNumberAndIndex':\n    case 'test_forkCache':\n      return 'fork'\n\n    // cache for block\n    case 'eth_gasPrice':\n    case 'eth_blockNumber':\n    case 'eth_getBalance':\n    case 'eth_getStorageAt':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n    case 'eth_getFilterLogs':\n    case 'eth_getLogs':\n    case 'test_blockCache':\n      return 'block'\n\n    // never cache\n    case 'net_version':\n    case 'net_peerCount':\n    case 'net_listening':\n    case 'eth_syncing':\n    case 'eth_sign':\n    case 'eth_coinbase':\n    case 'eth_mining':\n    case 'eth_hashrate':\n    case 'eth_accounts':\n    case 'eth_sendTransaction':\n    case 'eth_sendRawTransaction':\n    case 'eth_newFilter':\n    case 'eth_newBlockFilter':\n    case 'eth_newPendingTransactionFilter':\n    case 'eth_uninstallFilter':\n    case 'eth_getFilterChanges':\n    case 'eth_getWork':\n    case 'eth_submitWork':\n    case 'eth_submitHashrate':\n    case 'db_putString':\n    case 'db_getString':\n    case 'db_putHex':\n    case 'db_getHex':\n    case 'shh_post':\n    case 'shh_newIdentity':\n    case 'shh_hasIdentity':\n    case 'shh_newGroup':\n    case 'shh_addToGroup':\n    case 'shh_newFilter':\n    case 'shh_uninstallFilter':\n    case 'shh_getFilterChanges':\n    case 'shh_getMessages':\n    case 'test_neverCache':\n      return 'never'\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}