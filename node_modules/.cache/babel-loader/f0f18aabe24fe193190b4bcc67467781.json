{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\nvar _util = require(\"../util\");\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'simulate';\nexports.type = type;\nvar SIMULATE_CHANNELS = new Set();\nfunction create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nfunction close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nfunction canBeUsed() {\n  return true;\n}\nfunction averageResponseTime() {\n  return 5;\n}\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","averageResponseTime","canBeUsed","close","create","microSeconds","onMessage","postMessage","type","_util","require","SIMULATE_CHANNELS","Set","channelName","state","name","messagesCallback","add","channelState","messageJson","Promise","res","setTimeout","channelArray","Array","from","filter","channel","forEach","fn","_default"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/broadcast-channel/dist/lib/methods/simulate.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'simulate';\nexports.type = type;\nvar SIMULATE_CHANNELS = new Set();\n\nfunction create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\n\nfunction close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  return true;\n}\n\nfunction averageResponseTime() {\n  return 5;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB;AACjDF,OAAO,CAACG,SAAS,GAAGA,SAAS;AAC7BH,OAAO,CAACI,KAAK,GAAGA,KAAK;AACrBJ,OAAO,CAACK,MAAM,GAAGA,MAAM;AACvBL,OAAO,CAACM,YAAY,GAAGN,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AAClDA,OAAO,CAACO,SAAS,GAAGA,SAAS;AAC7BP,OAAO,CAACQ,WAAW,GAAGA,WAAW;AACjCR,OAAO,CAACS,IAAI,GAAG,KAAK,CAAC;AAErB,IAAIC,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE9B,IAAIL,YAAY,GAAGI,KAAK,CAACJ,YAAY;AACrCN,OAAO,CAACM,YAAY,GAAGA,YAAY;AACnC,IAAIG,IAAI,GAAG,UAAU;AACrBT,OAAO,CAACS,IAAI,GAAGA,IAAI;AACnB,IAAIG,iBAAiB,GAAG,IAAIC,GAAG,EAAE;AAEjC,SAASR,MAAM,CAACS,WAAW,EAAE;EAC3B,IAAIC,KAAK,GAAG;IACVC,IAAI,EAAEF,WAAW;IACjBG,gBAAgB,EAAE;EACpB,CAAC;EACDL,iBAAiB,CAACM,GAAG,CAACH,KAAK,CAAC;EAC5B,OAAOA,KAAK;AACd;AAEA,SAASX,KAAK,CAACe,YAAY,EAAE;EAC3BP,iBAAiB,CAAC,QAAQ,CAAC,CAACO,YAAY,CAAC;AAC3C;AAEA,SAASX,WAAW,CAACW,YAAY,EAAEC,WAAW,EAAE;EAC9C,OAAO,IAAIC,OAAO,CAAC,UAAUC,GAAG,EAAE;IAChC,OAAOC,UAAU,CAAC,YAAY;MAC5B,IAAIC,YAAY,GAAGC,KAAK,CAACC,IAAI,CAACd,iBAAiB,CAAC;MAChDY,YAAY,CAACG,MAAM,CAAC,UAAUC,OAAO,EAAE;QACrC,OAAOA,OAAO,CAACZ,IAAI,KAAKG,YAAY,CAACH,IAAI;MAC3C,CAAC,CAAC,CAACW,MAAM,CAAC,UAAUC,OAAO,EAAE;QAC3B,OAAOA,OAAO,KAAKT,YAAY;MACjC,CAAC,CAAC,CAACQ,MAAM,CAAC,UAAUC,OAAO,EAAE;QAC3B,OAAO,CAAC,CAACA,OAAO,CAACX,gBAAgB;MACnC,CAAC,CAAC,CAACY,OAAO,CAAC,UAAUD,OAAO,EAAE;QAC5B,OAAOA,OAAO,CAACX,gBAAgB,CAACG,WAAW,CAAC;MAC9C,CAAC,CAAC;MACFE,GAAG,EAAE;IACP,CAAC,EAAE,CAAC,CAAC;EACP,CAAC,CAAC;AACJ;AAEA,SAASf,SAAS,CAACY,YAAY,EAAEW,EAAE,EAAE;EACnCX,YAAY,CAACF,gBAAgB,GAAGa,EAAE;AACpC;AAEA,SAAS3B,SAAS,GAAG;EACnB,OAAO,IAAI;AACb;AAEA,SAASD,mBAAmB,GAAG;EAC7B,OAAO,CAAC;AACV;AAEA,IAAI6B,QAAQ,GAAG;EACb1B,MAAM,EAAEA,MAAM;EACdD,KAAK,EAAEA,KAAK;EACZG,SAAS,EAAEA,SAAS;EACpBC,WAAW,EAAEA,WAAW;EACxBL,SAAS,EAAEA,SAAS;EACpBM,IAAI,EAAEA,IAAI;EACVP,mBAAmB,EAAEA,mBAAmB;EACxCI,YAAY,EAAEA;AAChB,CAAC;AACDN,OAAO,CAAC,SAAS,CAAC,GAAG+B,QAAQ"},"metadata":{},"sourceType":"script"}