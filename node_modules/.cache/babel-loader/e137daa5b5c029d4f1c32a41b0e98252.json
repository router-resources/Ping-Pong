{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nvar internal_1 = require(\"./internal\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nvar assertIsHexString = function (input) {\n  if (!(0, internal_1.isHexString)(input)) {\n    var msg = \"This method only supports 0x-prefixed hex strings but input was: \".concat(input);\n    throw new Error(msg);\n  }\n};\nexports.assertIsHexString = assertIsHexString;\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nvar assertIsBuffer = function (input) {\n  if (!Buffer.isBuffer(input)) {\n    var msg = \"This method only supports Buffer but input was: \".concat(input);\n    throw new Error(msg);\n  }\n};\nexports.assertIsBuffer = assertIsBuffer;\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nvar assertIsArray = function (input) {\n  if (!Array.isArray(input)) {\n    var msg = \"This method only supports number arrays but input was: \".concat(input);\n    throw new Error(msg);\n  }\n};\nexports.assertIsArray = assertIsArray;\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nvar assertIsString = function (input) {\n  if (typeof input !== 'string') {\n    var msg = \"This method only supports strings but input was: \".concat(input);\n    throw new Error(msg);\n  }\n};\nexports.assertIsString = assertIsString;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA;;;;AAIO,IAAMA,iBAAiB,GAAG,UAAUC,KAAa;EACtD,IAAI,CAAC,0BAAW,EAACA,KAAK,CAAC,EAAE;IACvB,IAAMC,GAAG,GAAG,2EAAoED,KAAK,CAAE;IACvF,MAAM,IAAIE,KAAK,CAACD,GAAG,CAAC;;AAExB,CAAC;AALYE,yBAAiB;AAO9B;;;;AAIO,IAAMC,cAAc,GAAG,UAAUJ,KAAa;EACnD,IAAI,CAACK,MAAM,CAACC,QAAQ,CAACN,KAAK,CAAC,EAAE;IAC3B,IAAMC,GAAG,GAAG,0DAAmDD,KAAK,CAAE;IACtE,MAAM,IAAIE,KAAK,CAACD,GAAG,CAAC;;AAExB,CAAC;AALYE,sBAAc;AAO3B;;;;AAIO,IAAMI,aAAa,GAAG,UAAUP,KAAe;EACpD,IAAI,CAACQ,KAAK,CAACC,OAAO,CAACT,KAAK,CAAC,EAAE;IACzB,IAAMC,GAAG,GAAG,iEAA0DD,KAAK,CAAE;IAC7E,MAAM,IAAIE,KAAK,CAACD,GAAG,CAAC;;AAExB,CAAC;AALYE,qBAAa;AAO1B;;;;AAIO,IAAMO,cAAc,GAAG,UAAUV,KAAa;EACnD,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,IAAMC,GAAG,GAAG,2DAAoDD,KAAK,CAAE;IACvE,MAAM,IAAIE,KAAK,CAACD,GAAG,CAAC;;AAExB,CAAC;AALYE,sBAAc","names":["assertIsHexString","input","msg","Error","exports","assertIsBuffer","Buffer","isBuffer","assertIsArray","Array","isArray","assertIsString"],"sourceRoot":"","sources":["../src/helpers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}