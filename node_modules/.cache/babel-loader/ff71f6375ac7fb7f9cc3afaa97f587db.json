{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport WalletConnect from '@walletconnect/client';\nimport { BaseAdapter, WALLET_ADAPTERS, ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, getChainConfig, ADAPTER_EVENTS, WalletInitializationError, Web3AuthError, WalletLoginError, isHexStrict } from '@web3auth/base';\nimport { WalletConnectProvider } from '@web3auth/ethereum-provider';\nimport log from 'loglevel';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nclass WalletConnectV1Adapter extends BaseAdapter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    _defineProperty(this, \"name\", WALLET_ADAPTERS.WALLET_CONNECT_V1);\n    _defineProperty(this, \"adapterNamespace\", ADAPTER_NAMESPACES.EIP155);\n    _defineProperty(this, \"currentChainNamespace\", CHAIN_NAMESPACES.EIP155);\n    _defineProperty(this, \"type\", ADAPTER_CATEGORY.EXTERNAL);\n    _defineProperty(this, \"adapterOptions\", void 0);\n    _defineProperty(this, \"status\", ADAPTER_STATUS.NOT_READY);\n    _defineProperty(this, \"adapterData\", {\n      uri: \"\"\n    });\n    _defineProperty(this, \"connector\", null);\n    _defineProperty(this, \"wcProvider\", null);\n    _defineProperty(this, \"rehydrated\", false);\n    this.adapterOptions = _objectSpread({}, options);\n    this.chainConfig = options.chainConfig || null;\n  }\n  get connected() {\n    var _this$connector;\n    return !!((_this$connector = this.connector) !== null && _this$connector !== void 0 && _this$connector.connected);\n  }\n  get provider() {\n    var _this$wcProvider;\n    return ((_this$wcProvider = this.wcProvider) === null || _this$wcProvider === void 0 ? void 0 : _this$wcProvider.provider) || null;\n  }\n  set provider(_) {\n    throw new Error(\"Not implemented\");\n  }\n  async init() {\n    super.checkInitializationRequirements();\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n    } // Create a connector\n\n    this.connector = this.getWalletConnectInstance();\n    this.wcProvider = new WalletConnectProvider({\n      config: {\n        chainConfig: this.chainConfig\n      }\n    });\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V1);\n    this.status = ADAPTER_STATUS.READY;\n    if (this.connector.connected) {\n      this.rehydrated = true;\n      await this.onConnectHandler({\n        accounts: this.connector.accounts,\n        chainId: this.connector.chainId.toString()\n      });\n    }\n  }\n  async connect() {\n    super.checkConnectionRequirements();\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (this.connected) {\n      await this.onConnectHandler({\n        accounts: this.connector.accounts,\n        chainId: this.connector.chainId.toString()\n      });\n      return this.provider;\n    }\n    if (this.status !== ADAPTER_STATUS.CONNECTING) {\n      var _this$adapterOptions$;\n\n      // for wallet connect qr code modal we have to create a new connector, coz wallet connect internally does not open\n      // modal again on existing instance if connection is pending.\n      if ((_this$adapterOptions$ = this.adapterOptions.adapterSettings) !== null && _this$adapterOptions$ !== void 0 && _this$adapterOptions$.qrcodeModal) {\n        this.connector = this.getWalletConnectInstance();\n      }\n      await this.createNewSession();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, {\n        adapter: WALLET_ADAPTERS.WALLET_CONNECT_V1\n      });\n    }\n    return new Promise((resolve, reject) => {\n      if (!this.connector) return reject(WalletInitializationError.notReady(\"Wallet adapter is not ready yet\")); // for wallet connect default modal.\n\n      this.connector.on(\"modal_closed\", async () => {\n        this.status = ADAPTER_STATUS.READY;\n        this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V1);\n        return reject(new Error(\"User closed modal\"));\n      });\n      try {\n        // Subscribe to session connection\n        this.connector.on(\"connect\", async (error, payload) => {\n          if (error) {\n            this.emit(ADAPTER_EVENTS.ERRORED, error);\n          }\n          await this.onConnectHandler(payload.params[0]);\n          return resolve(this.provider);\n        });\n      } catch (error) {\n        log.error(\"Wallet connect v1 adapter error while connecting\", error); // ready again to be connected\n\n        this.status = ADAPTER_STATUS.READY;\n        this.rehydrated = true;\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n        reject(error instanceof Web3AuthError ? error : WalletLoginError.connectionError(\"Failed to login with wallet connect: \".concat((error === null || error === void 0 ? void 0 : error.message) || \"\")));\n      }\n    });\n  }\n  async getUserInfo() {\n    if (!this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    const {\n      cleanup\n    } = options;\n    if (!this.connector || !this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    await this.connector.killSession();\n    this.rehydrated = false;\n    if (cleanup) {\n      this.connector = null;\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.wcProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n  async createNewSession() {\n    var _this$adapterOptions, _this$adapterOptions$2;\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      forceNewSession: false\n    };\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (opts.forceNewSession && this.connector.pending) {\n      await this.connector.killSession();\n    } // for wallet connect qr modal\n\n    if ((_this$adapterOptions = this.adapterOptions) !== null && _this$adapterOptions !== void 0 && (_this$adapterOptions$2 = _this$adapterOptions.adapterSettings) !== null && _this$adapterOptions$2 !== void 0 && _this$adapterOptions$2.qrcodeModal) {\n      var _this$chainConfig;\n      await this.connector.createSession({\n        chainId: parseInt(((_this$chainConfig = this.chainConfig) === null || _this$chainConfig === void 0 ? void 0 : _this$chainConfig.chainId) || \"0x1\", 16)\n      });\n      return;\n    } // for web3auth qr code modal\n\n    return new Promise((resolve, reject) => {\n      var _this$chainConfig2;\n      if (!this.connector) return reject(WalletInitializationError.notReady(\"Wallet adapter is not ready yet\"));\n      log.debug(\"creating new session for web3auth wallet connect\");\n      this.connector.on(\"display_uri\", async (err, payload) => {\n        var _this$connector2;\n        if (err) {\n          this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.connectionError(\"Failed to display wallet connect qr code\"));\n          return reject(err);\n        }\n        const uri = payload.params[0];\n        this.updateAdapterData({\n          uri\n        });\n        (_this$connector2 = this.connector) === null || _this$connector2 === void 0 ? void 0 : _this$connector2.off(\"display_uri\");\n        return resolve();\n      });\n      this.connector.createSession({\n        chainId: parseInt(((_this$chainConfig2 = this.chainConfig) === null || _this$chainConfig2 === void 0 ? void 0 : _this$chainConfig2.chainId) || \"0x1\", 16)\n      }).catch(error => {\n        log.error(\"error while creating new wallet connect session\", error);\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n        return reject(error);\n      });\n    });\n  }\n  async onConnectHandler(params) {\n    if (!this.connector || !this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"Chain config is not set\");\n    const {\n      chainId\n    } = params;\n    log.debug(\"connected chainId\", chainId);\n    const connectedChainId = parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n    if (connectedChainId !== parseInt(this.chainConfig.chainId, 16)) {\n      // we need to create a new session since old session is already used and\n      // user needs to login again with correct chain with new qr code.\n      await this.createNewSession({\n        forceNewSession: true\n      });\n      this.emit(ADAPTER_EVENTS.ERRORED, WalletInitializationError.fromCode(5000, \"Not connected to correct chainId. Expected: \".concat(this.chainConfig.chainId, \", Current: \").concat(connectedChainId, \", Please switch to correct chain from wallet\")));\n      return;\n    }\n    await this.wcProvider.setupProvider(this.connector);\n    this.subscribeEvents(this.connector);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, {\n      adapter: WALLET_ADAPTERS.WALLET_CONNECT_V1,\n      reconnected: this.rehydrated\n    });\n  }\n  subscribeEvents(connector) {\n    connector.on(\"session_update\", async error => {\n      if (error) {\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n      }\n    });\n  }\n  getWalletConnectInstance() {\n    const walletConnectOptions = this.adapterOptions.adapterSettings || {};\n    walletConnectOptions.bridge = walletConnectOptions.bridge || \"https://bridge.walletconnect.org\"; // Create a connector\n\n    return new WalletConnect(walletConnectOptions);\n  }\n}\nexport { WalletConnectV1Adapter };","map":{"version":3,"mappings":"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","names":["WalletConnectV1Adapter","BaseAdapter","constructor","options","WALLET_ADAPTERS","WALLET_CONNECT_V1","ADAPTER_NAMESPACES","EIP155","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","ADAPTER_STATUS","NOT_READY","uri","adapterOptions","chainConfig","connected","connector","_this$connector","provider","wcProvider","_","Error","init","checkInitializationRequirements","getChainConfig","getWalletConnectInstance","WalletConnectProvider","config","emit","ADAPTER_EVENTS","READY","status","rehydrated","onConnectHandler","accounts","chainId","toString","connect","checkConnectionRequirements","WalletInitializationError","notReady","CONNECTING","adapterSettings","_this$adapterOptions$","qrcodeModal","createNewSession","adapter","Promise","resolve","reject","on","error","payload","ERRORED","params","log","Web3AuthError","WalletLoginError","connectionError","message","getUserInfo","notConnectedError","disconnect","cleanup","killSession","DISCONNECTED","opts","forceNewSession","pending","_this$adapterOptions","_this$adapterOptions$2","createSession","parseInt","debug","err","updateAdapterData","off","catch","invalidParams","connectedChainId","isHexStrict","fromCode","setupProvider","subscribeEvents","CONNECTED","reconnected","walletConnectOptions","bridge","WalletConnect"],"sources":["../src/walletConnectV1adapter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}