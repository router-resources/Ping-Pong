{"ast":null,"code":"const pify = require('pify');\nconst BaseBlockTracker = require('./base');\nconst sec = 1000;\nclass PollingBlockTracker extends BaseBlockTracker {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // parse + validate args\n    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.');\n    const pollingInterval = opts.pollingInterval || 20 * sec;\n    const retryTimeout = opts.retryTimeout || pollingInterval / 10;\n    const keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true;\n    const setSkipCacheFlag = opts.setSkipCacheFlag || false;\n    // BaseBlockTracker constructor\n    super(Object.assign({\n      blockResetDuration: pollingInterval\n    }, opts));\n    // config\n    this._provider = opts.provider;\n    this._pollingInterval = pollingInterval;\n    this._retryTimeout = retryTimeout;\n    this._keepEventLoopActive = keepEventLoopActive;\n    this._setSkipCacheFlag = setSkipCacheFlag;\n  }\n\n  //\n  // public\n  //\n\n  // trigger block polling\n  async checkForLatestBlock() {\n    await this._updateLatestBlock();\n    return await this.getLatestBlock();\n  }\n\n  //\n  // private\n  //\n\n  _start() {\n    this._performSync().catch(err => this.emit('error', err));\n  }\n  async _performSync() {\n    while (this._isRunning) {\n      try {\n        await this._updateLatestBlock();\n        await timeout(this._pollingInterval, !this._keepEventLoopActive);\n      } catch (err) {\n        const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\\n${err.stack}`);\n        try {\n          this.emit('error', newErr);\n        } catch (emitErr) {\n          console.error(newErr);\n        }\n        await timeout(this._retryTimeout, !this._keepEventLoopActive);\n      }\n    }\n  }\n  async _updateLatestBlock() {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock();\n    this._newPotentialLatest(latestBlock);\n  }\n  async _fetchLatestBlock() {\n    const req = {\n      jsonrpc: \"2.0\",\n      id: 1,\n      method: 'eth_blockNumber',\n      params: []\n    };\n    if (this._setSkipCacheFlag) req.skipCache = true;\n    const res = await pify(cb => this._provider.sendAsync(req, cb))();\n    if (res.error) throw new Error(`PollingBlockTracker - encountered error fetching block:\\n${res.error}`);\n    return res.result;\n  }\n}\nmodule.exports = PollingBlockTracker;\nfunction timeout(duration, unref) {\n  return new Promise(resolve => {\n    const timoutRef = setTimeout(resolve, duration);\n    // don't keep process open\n    if (timoutRef.unref && unref) {\n      timoutRef.unref();\n    }\n  });\n}","map":{"version":3,"names":["pify","require","BaseBlockTracker","sec","PollingBlockTracker","constructor","opts","provider","Error","pollingInterval","retryTimeout","keepEventLoopActive","undefined","setSkipCacheFlag","Object","assign","blockResetDuration","_provider","_pollingInterval","_retryTimeout","_keepEventLoopActive","_setSkipCacheFlag","checkForLatestBlock","_updateLatestBlock","getLatestBlock","_start","_performSync","catch","err","emit","_isRunning","timeout","newErr","stack","emitErr","console","error","latestBlock","_fetchLatestBlock","_newPotentialLatest","req","jsonrpc","id","method","params","skipCache","res","cb","sendAsync","result","module","exports","duration","unref","Promise","resolve","timoutRef","setTimeout"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/eth-block-tracker/src/polling.js"],"sourcesContent":["const pify = require('pify')\nconst BaseBlockTracker = require('./base')\n\nconst sec = 1000\n\nclass PollingBlockTracker extends BaseBlockTracker {\n\n  constructor (opts = {}) {\n    // parse + validate args\n    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.')\n    const pollingInterval = opts.pollingInterval || 20 * sec\n    const retryTimeout = opts.retryTimeout || pollingInterval / 10\n    const keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true\n    const setSkipCacheFlag = opts.setSkipCacheFlag || false\n    // BaseBlockTracker constructor\n    super(Object.assign({\n      blockResetDuration: pollingInterval,\n    }, opts))\n    // config\n    this._provider = opts.provider\n    this._pollingInterval = pollingInterval\n    this._retryTimeout = retryTimeout\n    this._keepEventLoopActive = keepEventLoopActive\n    this._setSkipCacheFlag = setSkipCacheFlag\n  }\n\n  //\n  // public\n  //\n\n  // trigger block polling\n  async checkForLatestBlock () {\n    await this._updateLatestBlock()\n    return await this.getLatestBlock()\n  }\n\n  //\n  // private\n  //\n\n  _start () {\n    this._performSync().catch(err => this.emit('error', err))\n  }\n\n  async _performSync () {\n    while (this._isRunning) {\n      try {\n        await this._updateLatestBlock()\n        await timeout(this._pollingInterval, !this._keepEventLoopActive)\n      } catch (err) {\n        const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\\n${err.stack}`)\n        try {\n          this.emit('error', newErr)\n        } catch (emitErr) {\n          console.error(newErr)\n        }\n        await timeout(this._retryTimeout, !this._keepEventLoopActive)\n      }\n    }\n  }\n\n  async _updateLatestBlock () {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock()\n    this._newPotentialLatest(latestBlock)\n  }\n\n  async _fetchLatestBlock () {\n    const req = { jsonrpc: \"2.0\", id: 1, method: 'eth_blockNumber', params: [] }\n    if (this._setSkipCacheFlag) req.skipCache = true\n    const res = await pify((cb) => this._provider.sendAsync(req, cb))()\n    if (res.error) throw new Error(`PollingBlockTracker - encountered error fetching block:\\n${res.error}`)\n    return res.result\n  }\n\n}\n\nmodule.exports = PollingBlockTracker\n\nfunction timeout (duration, unref) {\n  return new Promise(resolve => {\n    const timoutRef = setTimeout(resolve, duration)\n    // don't keep process open\n    if (timoutRef.unref && unref) {\n      timoutRef.unref()\n    }\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}