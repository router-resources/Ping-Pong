{"ast":null,"code":"\"use strict\";\n\nvar _sliceInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\nvar _Array$isArray2 = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (_Array$isArray2(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context5;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = _sliceInstanceProperty2(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\n/* eslint-disable no-loop-func */\n\nvar equalObjects = require('./equals').default;\nvar decode = require('./decode').default;\nvar ParseError = require('./ParseError').default;\nvar ParsePolygon = require('./ParsePolygon').default;\nvar ParseGeoPoint = require('./ParseGeoPoint').default;\n/**\n * contains -- Determines if an object is contained in a list with special handling for Parse pointers.\n *\n * @param haystack\n * @param needle\n * @private\n * @returns {boolean}\n */\n\nfunction contains(haystack, needle) {\n  if (needle && needle.__type && (needle.__type === 'Pointer' || needle.__type === 'Object')) {\n    for (var i in haystack) {\n      var ptr = haystack[i];\n      if (typeof ptr === 'string' && ptr === needle.objectId) {\n        return true;\n      }\n      if (ptr.className === needle.className && ptr.objectId === needle.objectId) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return (0, _indexOf.default)(haystack).call(haystack, needle) > -1;\n}\nfunction transformObject(object) {\n  if (object._toFullJSON) {\n    return object._toFullJSON();\n  }\n  return object;\n}\n/**\n * matchesQuery -- Determines if an object would be returned by a Parse Query\n * It's a lightweight, where-clause only implementation of a full query engine.\n * Since we find queries that match objects, rather than objects that match\n * queries, we can avoid building a full-blown query tool.\n *\n * @param className\n * @param object\n * @param objects\n * @param query\n * @private\n * @returns {boolean}\n */\n\nfunction matchesQuery(className, object, objects, query) {\n  if (object.className !== className) {\n    return false;\n  }\n  var obj = object;\n  var q = query;\n  if (object.toJSON) {\n    obj = object.toJSON();\n  }\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n  obj.className = className;\n  for (var field in q) {\n    if (!matchesKeyConstraints(className, obj, objects, field, q[field])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equalObjectsGeneric(obj, compareTo, eqlFn) {\n  if ((0, _isArray.default)(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      if (eqlFn(obj[i], compareTo)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return eqlFn(obj, compareTo);\n}\n/**\n * Determines whether an object matches a single key's constraints\n *\n * @param className\n * @param object\n * @param objects\n * @param key\n * @param constraints\n * @private\n * @returns {boolean}\n */\n\nfunction matchesKeyConstraints(className, object, objects, key, constraints) {\n  if (constraints === null) {\n    return false;\n  }\n  if ((0, _indexOf.default)(key).call(key, '.') >= 0) {\n    // Key references a subobject\n    var keyComponents = key.split('.');\n    var subObjectKey = keyComponents[0];\n    var keyRemainder = (0, _slice.default)(keyComponents).call(keyComponents, 1).join('.');\n    return matchesKeyConstraints(className, object[subObjectKey] || {}, objects, keyRemainder, constraints);\n  }\n  var i;\n  if (key === '$or') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (key === '$and') {\n    for (i = 0; i < constraints.length; i++) {\n      if (!matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (key === '$nor') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (key === '$relatedTo') {\n    // Bail! We can't handle relational queries locally\n    return false;\n  }\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(key)) {\n    throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid Key: \".concat(key));\n  } // Equality (or Array contains) cases\n\n  if ((0, _typeof2.default)(constraints) !== 'object') {\n    if ((0, _isArray.default)(object[key])) {\n      var _context;\n      return (0, _indexOf.default)(_context = object[key]).call(_context, constraints) > -1;\n    }\n    return object[key] === constraints;\n  }\n  var compareTo;\n  if (constraints.__type) {\n    if (constraints.__type === 'Pointer') {\n      return equalObjectsGeneric(object[key], constraints, function (obj, ptr) {\n        return typeof obj !== 'undefined' && ptr.className === obj.className && ptr.objectId === obj.objectId;\n      });\n    }\n    return equalObjectsGeneric(decode(object[key]), decode(constraints), equalObjects);\n  } // More complex cases\n\n  for (var condition in constraints) {\n    compareTo = constraints[condition];\n    if (compareTo.__type) {\n      compareTo = decode(compareTo);\n    } // Compare Date Object or Date String\n\n    if (toString.call(compareTo) === '[object Date]' || typeof compareTo === 'string' && new Date(compareTo) !== 'Invalid Date' && !isNaN(new Date(compareTo))) {\n      object[key] = new Date(object[key].iso ? object[key].iso : object[key]);\n    }\n    switch (condition) {\n      case '$lt':\n        if (object[key] >= compareTo) {\n          return false;\n        }\n        break;\n      case '$lte':\n        if (object[key] > compareTo) {\n          return false;\n        }\n        break;\n      case '$gt':\n        if (object[key] <= compareTo) {\n          return false;\n        }\n        break;\n      case '$gte':\n        if (object[key] < compareTo) {\n          return false;\n        }\n        break;\n      case '$ne':\n        if (equalObjects(object[key], compareTo)) {\n          return false;\n        }\n        break;\n      case '$in':\n        if (!contains(compareTo, object[key])) {\n          return false;\n        }\n        break;\n      case '$nin':\n        if (contains(compareTo, object[key])) {\n          return false;\n        }\n        break;\n      case '$all':\n        for (i = 0; i < compareTo.length; i++) {\n          var _context2;\n          if ((0, _indexOf.default)(_context2 = object[key]).call(_context2, compareTo[i]) < 0) {\n            return false;\n          }\n        }\n        break;\n      case '$exists':\n        {\n          var propertyExists = typeof object[key] !== 'undefined';\n          var existenceIsRequired = constraints.$exists;\n          if (typeof constraints.$exists !== 'boolean') {\n            // The SDK will never submit a non-boolean for $exists, but if someone\n            // tries to submit a non-boolean for $exits outside the SDKs, just ignore it.\n            break;\n          }\n          if (!propertyExists && existenceIsRequired || propertyExists && !existenceIsRequired) {\n            return false;\n          }\n          break;\n        }\n      case '$regex':\n        {\n          if ((0, _typeof2.default)(compareTo) === 'object') {\n            return compareTo.test(object[key]);\n          } // JS doesn't support perl-style escaping\n\n          var expString = '';\n          var escapeEnd = -2;\n          var escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q');\n          while (escapeStart > -1) {\n            // Add the unescaped portion\n            expString += compareTo.substring(escapeEnd + 2, escapeStart);\n            escapeEnd = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\E', escapeStart);\n            if (escapeEnd > -1) {\n              expString += compareTo.substring(escapeStart + 2, escapeEnd).replace(/\\\\\\\\\\\\\\\\E/g, '\\\\E').replace(/\\W/g, '\\\\$&');\n            }\n            escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q', escapeEnd);\n          }\n          expString += compareTo.substring(Math.max(escapeStart, escapeEnd + 2));\n          var modifiers = constraints.$options || '';\n          modifiers = modifiers.replace('x', '').replace('s', ''); // Parse Server / Mongo support x and s modifiers but JS RegExp doesn't\n\n          var exp = new RegExp(expString, modifiers);\n          if (!exp.test(object[key])) {\n            return false;\n          }\n          break;\n        }\n      case '$nearSphere':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n          var distance = compareTo.radiansTo(object[key]);\n          var max = constraints.$maxDistance || Infinity;\n          return distance <= max;\n        }\n      case '$within':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n          var southWest = compareTo.$box[0];\n          var northEast = compareTo.$box[1];\n          if (southWest.latitude > northEast.latitude || southWest.longitude > northEast.longitude) {\n            // Invalid box, crosses the date line\n            return false;\n          }\n          return object[key].latitude > southWest.latitude && object[key].latitude < northEast.latitude && object[key].longitude > southWest.longitude && object[key].longitude < northEast.longitude;\n        }\n      case '$options':\n        // Not a query type, but a way to add options to $regex. Ignore and\n        // avoid the default\n        break;\n      case '$maxDistance':\n        // Not a query type, but a way to add a cap to $nearSphere. Ignore and\n        // avoid the default\n        break;\n      case '$select':\n        {\n          var subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n          for (var _i = 0; _i < subQueryObjects.length; _i += 1) {\n            var subObject = transformObject(subQueryObjects[_i]);\n            return equalObjects(object[key], subObject[compareTo.key]);\n          }\n          return false;\n        }\n      case '$dontSelect':\n        {\n          var _subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n          for (var _i2 = 0; _i2 < _subQueryObjects.length; _i2 += 1) {\n            var _subObject = transformObject(_subQueryObjects[_i2]);\n            return !equalObjects(object[key], _subObject[compareTo.key]);\n          }\n          return false;\n        }\n      case '$inQuery':\n        {\n          var _subQueryObjects2 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n          for (var _i3 = 0; _i3 < _subQueryObjects2.length; _i3 += 1) {\n            var _subObject2 = transformObject(_subQueryObjects2[_i3]);\n            if (object[key].className === _subObject2.className && object[key].objectId === _subObject2.objectId) {\n              return true;\n            }\n          }\n          return false;\n        }\n      case '$notInQuery':\n        {\n          var _subQueryObjects3 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n          for (var _i4 = 0; _i4 < _subQueryObjects3.length; _i4 += 1) {\n            var _subObject3 = transformObject(_subQueryObjects3[_i4]);\n            if (object[key].className === _subObject3.className && object[key].objectId === _subObject3.objectId) {\n              return false;\n            }\n          }\n          return true;\n        }\n      case '$containedBy':\n        {\n          var _iterator = _createForOfIteratorHelper(object[key]),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var value = _step.value;\n              if (!contains(compareTo, value)) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          return true;\n        }\n      case '$geoWithin':\n        {\n          var _context3;\n          var points = (0, _map.default)(_context3 = compareTo.$polygon).call(_context3, function (geoPoint) {\n            return [geoPoint.latitude, geoPoint.longitude];\n          });\n          var polygon = new ParsePolygon(points);\n          return polygon.containsPoint(object[key]);\n        }\n      case '$geoIntersects':\n        {\n          var _polygon = new ParsePolygon(object[key].coordinates);\n          var point = new ParseGeoPoint(compareTo.$point);\n          return _polygon.containsPoint(point);\n        }\n      default:\n        return false;\n    }\n  }\n  return true;\n}\nfunction validateQuery(query\n/*: any*/) {\n  var _context4;\n  var q = query;\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n  var specialQuerykeys = ['$and', '$or', '$nor', '_rperm', '_wperm', '_perishable_token', '_email_verify_token', '_email_verify_token_expires_at', '_account_lockout_expires_at', '_failed_login_count'];\n  (0, _forEach.default)(_context4 = (0, _keys.default)(q)).call(_context4, function (key) {\n    if (q && q[key] && q[key].$regex) {\n      if (typeof q[key].$options === 'string') {\n        if (!q[key].$options.match(/^[imxs]+$/)) {\n          throw new ParseError(ParseError.INVALID_QUERY, \"Bad $options value for query: \".concat(q[key].$options));\n        }\n      }\n    }\n    if ((0, _indexOf.default)(specialQuerykeys).call(specialQuerykeys, key) < 0 && !key.match(/^[a-zA-Z][a-zA-Z0-9_.]*$/)) {\n      throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid key name: \".concat(key));\n    }\n  });\n}\nvar OfflineQuery = {\n  matchesQuery: matchesQuery,\n  validateQuery: validateQuery\n};\nmodule.exports = OfflineQuery;","map":{"version":3,"names":["_sliceInstanceProperty2","require","_Array$from","_Symbol","_getIteratorMethod","_Array$isArray2","_interopRequireDefault","_typeof2","_indexOf","_isArray","_slice","_filter","_map","_forEach","_keys","_createForOfIteratorHelper","o","allowArrayLike","it","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_context5","_arrayLikeToArray","Object","prototype","toString","constructor","name","test","arr","len","arr2","Array","equalObjects","default","decode","ParseError","ParsePolygon","ParseGeoPoint","contains","haystack","needle","__type","ptr","objectId","className","transformObject","object","_toFullJSON","matchesQuery","objects","query","obj","q","toJSON","where","field","matchesKeyConstraints","equalObjectsGeneric","compareTo","eqlFn","key","constraints","keyComponents","split","subObjectKey","keyRemainder","join","INVALID_KEY_NAME","concat","_context","condition","Date","isNaN","iso","_context2","propertyExists","existenceIsRequired","$exists","expString","escapeEnd","escapeStart","substring","replace","Math","max","modifiers","$options","exp","RegExp","distance","radiansTo","$maxDistance","Infinity","southWest","$box","northEast","latitude","longitude","subQueryObjects","index","_i","subObject","_subQueryObjects","_i2","_subObject","_subQueryObjects2","_i3","_subObject2","_subQueryObjects3","_i4","_subObject3","_iterator","_step","_context3","points","$polygon","geoPoint","polygon","containsPoint","_polygon","coordinates","point","$point","validateQuery","_context4","specialQuerykeys","$regex","match","INVALID_QUERY","OfflineQuery","module","exports"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/moralis/lib/browser/OfflineQuery.js"],"sourcesContent":["\"use strict\";\n\nvar _sliceInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Array$isArray2 = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n\n  if (!it) {\n    if (_Array$isArray2(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context5;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\n  var n = _sliceInstanceProperty2(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1);\n\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/* eslint-disable no-loop-func */\n\n\nvar equalObjects = require('./equals').default;\n\nvar decode = require('./decode').default;\n\nvar ParseError = require('./ParseError').default;\n\nvar ParsePolygon = require('./ParsePolygon').default;\n\nvar ParseGeoPoint = require('./ParseGeoPoint').default;\n/**\n * contains -- Determines if an object is contained in a list with special handling for Parse pointers.\n *\n * @param haystack\n * @param needle\n * @private\n * @returns {boolean}\n */\n\n\nfunction contains(haystack, needle) {\n  if (needle && needle.__type && (needle.__type === 'Pointer' || needle.__type === 'Object')) {\n    for (var i in haystack) {\n      var ptr = haystack[i];\n\n      if (typeof ptr === 'string' && ptr === needle.objectId) {\n        return true;\n      }\n\n      if (ptr.className === needle.className && ptr.objectId === needle.objectId) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return (0, _indexOf.default)(haystack).call(haystack, needle) > -1;\n}\n\nfunction transformObject(object) {\n  if (object._toFullJSON) {\n    return object._toFullJSON();\n  }\n\n  return object;\n}\n/**\n * matchesQuery -- Determines if an object would be returned by a Parse Query\n * It's a lightweight, where-clause only implementation of a full query engine.\n * Since we find queries that match objects, rather than objects that match\n * queries, we can avoid building a full-blown query tool.\n *\n * @param className\n * @param object\n * @param objects\n * @param query\n * @private\n * @returns {boolean}\n */\n\n\nfunction matchesQuery(className, object, objects, query) {\n  if (object.className !== className) {\n    return false;\n  }\n\n  var obj = object;\n  var q = query;\n\n  if (object.toJSON) {\n    obj = object.toJSON();\n  }\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  obj.className = className;\n\n  for (var field in q) {\n    if (!matchesKeyConstraints(className, obj, objects, field, q[field])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction equalObjectsGeneric(obj, compareTo, eqlFn) {\n  if ((0, _isArray.default)(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      if (eqlFn(obj[i], compareTo)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return eqlFn(obj, compareTo);\n}\n/**\n * Determines whether an object matches a single key's constraints\n *\n * @param className\n * @param object\n * @param objects\n * @param key\n * @param constraints\n * @private\n * @returns {boolean}\n */\n\n\nfunction matchesKeyConstraints(className, object, objects, key, constraints) {\n  if (constraints === null) {\n    return false;\n  }\n\n  if ((0, _indexOf.default)(key).call(key, '.') >= 0) {\n    // Key references a subobject\n    var keyComponents = key.split('.');\n    var subObjectKey = keyComponents[0];\n    var keyRemainder = (0, _slice.default)(keyComponents).call(keyComponents, 1).join('.');\n    return matchesKeyConstraints(className, object[subObjectKey] || {}, objects, keyRemainder, constraints);\n  }\n\n  var i;\n\n  if (key === '$or') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (key === '$and') {\n    for (i = 0; i < constraints.length; i++) {\n      if (!matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$nor') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$relatedTo') {\n    // Bail! We can't handle relational queries locally\n    return false;\n  }\n\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(key)) {\n    throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid Key: \".concat(key));\n  } // Equality (or Array contains) cases\n\n\n  if ((0, _typeof2.default)(constraints) !== 'object') {\n    if ((0, _isArray.default)(object[key])) {\n      var _context;\n\n      return (0, _indexOf.default)(_context = object[key]).call(_context, constraints) > -1;\n    }\n\n    return object[key] === constraints;\n  }\n\n  var compareTo;\n\n  if (constraints.__type) {\n    if (constraints.__type === 'Pointer') {\n      return equalObjectsGeneric(object[key], constraints, function (obj, ptr) {\n        return typeof obj !== 'undefined' && ptr.className === obj.className && ptr.objectId === obj.objectId;\n      });\n    }\n\n    return equalObjectsGeneric(decode(object[key]), decode(constraints), equalObjects);\n  } // More complex cases\n\n\n  for (var condition in constraints) {\n    compareTo = constraints[condition];\n\n    if (compareTo.__type) {\n      compareTo = decode(compareTo);\n    } // Compare Date Object or Date String\n\n\n    if (toString.call(compareTo) === '[object Date]' || typeof compareTo === 'string' && new Date(compareTo) !== 'Invalid Date' && !isNaN(new Date(compareTo))) {\n      object[key] = new Date(object[key].iso ? object[key].iso : object[key]);\n    }\n\n    switch (condition) {\n      case '$lt':\n        if (object[key] >= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$lte':\n        if (object[key] > compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gt':\n        if (object[key] <= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gte':\n        if (object[key] < compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$ne':\n        if (equalObjects(object[key], compareTo)) {\n          return false;\n        }\n\n        break;\n\n      case '$in':\n        if (!contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$nin':\n        if (contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$all':\n        for (i = 0; i < compareTo.length; i++) {\n          var _context2;\n\n          if ((0, _indexOf.default)(_context2 = object[key]).call(_context2, compareTo[i]) < 0) {\n            return false;\n          }\n        }\n\n        break;\n\n      case '$exists':\n        {\n          var propertyExists = typeof object[key] !== 'undefined';\n          var existenceIsRequired = constraints.$exists;\n\n          if (typeof constraints.$exists !== 'boolean') {\n            // The SDK will never submit a non-boolean for $exists, but if someone\n            // tries to submit a non-boolean for $exits outside the SDKs, just ignore it.\n            break;\n          }\n\n          if (!propertyExists && existenceIsRequired || propertyExists && !existenceIsRequired) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$regex':\n        {\n          if ((0, _typeof2.default)(compareTo) === 'object') {\n            return compareTo.test(object[key]);\n          } // JS doesn't support perl-style escaping\n\n\n          var expString = '';\n          var escapeEnd = -2;\n          var escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q');\n\n          while (escapeStart > -1) {\n            // Add the unescaped portion\n            expString += compareTo.substring(escapeEnd + 2, escapeStart);\n            escapeEnd = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\E', escapeStart);\n\n            if (escapeEnd > -1) {\n              expString += compareTo.substring(escapeStart + 2, escapeEnd).replace(/\\\\\\\\\\\\\\\\E/g, '\\\\E').replace(/\\W/g, '\\\\$&');\n            }\n\n            escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q', escapeEnd);\n          }\n\n          expString += compareTo.substring(Math.max(escapeStart, escapeEnd + 2));\n          var modifiers = constraints.$options || '';\n          modifiers = modifiers.replace('x', '').replace('s', ''); // Parse Server / Mongo support x and s modifiers but JS RegExp doesn't\n\n          var exp = new RegExp(expString, modifiers);\n\n          if (!exp.test(object[key])) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$nearSphere':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var distance = compareTo.radiansTo(object[key]);\n          var max = constraints.$maxDistance || Infinity;\n          return distance <= max;\n        }\n\n      case '$within':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var southWest = compareTo.$box[0];\n          var northEast = compareTo.$box[1];\n\n          if (southWest.latitude > northEast.latitude || southWest.longitude > northEast.longitude) {\n            // Invalid box, crosses the date line\n            return false;\n          }\n\n          return object[key].latitude > southWest.latitude && object[key].latitude < northEast.latitude && object[key].longitude > southWest.longitude && object[key].longitude < northEast.longitude;\n        }\n\n      case '$options':\n        // Not a query type, but a way to add options to $regex. Ignore and\n        // avoid the default\n        break;\n\n      case '$maxDistance':\n        // Not a query type, but a way to add a cap to $nearSphere. Ignore and\n        // avoid the default\n        break;\n\n      case '$select':\n        {\n          var subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i = 0; _i < subQueryObjects.length; _i += 1) {\n            var subObject = transformObject(subQueryObjects[_i]);\n            return equalObjects(object[key], subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$dontSelect':\n        {\n          var _subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i2 = 0; _i2 < _subQueryObjects.length; _i2 += 1) {\n            var _subObject = transformObject(_subQueryObjects[_i2]);\n\n            return !equalObjects(object[key], _subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$inQuery':\n        {\n          var _subQueryObjects2 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i3 = 0; _i3 < _subQueryObjects2.length; _i3 += 1) {\n            var _subObject2 = transformObject(_subQueryObjects2[_i3]);\n\n            if (object[key].className === _subObject2.className && object[key].objectId === _subObject2.objectId) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n      case '$notInQuery':\n        {\n          var _subQueryObjects3 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i4 = 0; _i4 < _subQueryObjects3.length; _i4 += 1) {\n            var _subObject3 = transformObject(_subQueryObjects3[_i4]);\n\n            if (object[key].className === _subObject3.className && object[key].objectId === _subObject3.objectId) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n      case '$containedBy':\n        {\n          var _iterator = _createForOfIteratorHelper(object[key]),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var value = _step.value;\n\n              if (!contains(compareTo, value)) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return true;\n        }\n\n      case '$geoWithin':\n        {\n          var _context3;\n\n          var points = (0, _map.default)(_context3 = compareTo.$polygon).call(_context3, function (geoPoint) {\n            return [geoPoint.latitude, geoPoint.longitude];\n          });\n          var polygon = new ParsePolygon(points);\n          return polygon.containsPoint(object[key]);\n        }\n\n      case '$geoIntersects':\n        {\n          var _polygon = new ParsePolygon(object[key].coordinates);\n\n          var point = new ParseGeoPoint(compareTo.$point);\n          return _polygon.containsPoint(point);\n        }\n\n      default:\n        return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateQuery(query\n/*: any*/\n) {\n  var _context4;\n\n  var q = query;\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  var specialQuerykeys = ['$and', '$or', '$nor', '_rperm', '_wperm', '_perishable_token', '_email_verify_token', '_email_verify_token_expires_at', '_account_lockout_expires_at', '_failed_login_count'];\n  (0, _forEach.default)(_context4 = (0, _keys.default)(q)).call(_context4, function (key) {\n    if (q && q[key] && q[key].$regex) {\n      if (typeof q[key].$options === 'string') {\n        if (!q[key].$options.match(/^[imxs]+$/)) {\n          throw new ParseError(ParseError.INVALID_QUERY, \"Bad $options value for query: \".concat(q[key].$options));\n        }\n      }\n    }\n\n    if ((0, _indexOf.default)(specialQuerykeys).call(specialQuerykeys, key) < 0 && !key.match(/^[a-zA-Z][a-zA-Z0-9_.]*$/)) {\n      throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid key name: \".concat(key));\n    }\n  });\n}\n\nvar OfflineQuery = {\n  matchesQuery: matchesQuery,\n  validateQuery: validateQuery\n};\nmodule.exports = OfflineQuery;"],"mappings":"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"},"metadata":{},"sourceType":"script"}