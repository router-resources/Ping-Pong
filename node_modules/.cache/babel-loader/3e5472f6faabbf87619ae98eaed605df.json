{"ast":null,"code":"import WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport HttpConnection from \"@walletconnect/http-connection\";\nimport { payloadId, signingMethods, parsePersonalSign, getRpcUrl } from \"@walletconnect/utils\";\nconst ProviderEngine = require(\"web3-provider-engine\");\nconst CacheSubprovider = require(\"web3-provider-engine/subproviders/cache\");\nconst FixtureSubprovider = require(\"web3-provider-engine/subproviders/fixture\");\nconst FilterSubprovider = require(\"web3-provider-engine/subproviders/filters\");\nconst HookedWalletSubprovider = require(\"web3-provider-engine/subproviders/hooked-wallet\");\nconst NonceSubprovider = require(\"web3-provider-engine/subproviders/nonce-tracker\");\nconst SubscriptionsSubprovider = require(\"web3-provider-engine/subproviders/subscriptions\");\nclass WalletConnectProvider extends ProviderEngine {\n  constructor(opts) {\n    super({\n      pollingInterval: opts.pollingInterval || 8000\n    });\n    this.bridge = \"https://bridge.walletconnect.org\";\n    this.qrcode = true;\n    this.qrcodeModal = QRCodeModal;\n    this.qrcodeModalOptions = undefined;\n    this.rpc = null;\n    this.infuraId = \"\";\n    this.http = null;\n    this.isConnecting = false;\n    this.connected = false;\n    this.connectCallbacks = [];\n    this.accounts = [];\n    this.chainId = 1;\n    this.rpcUrl = \"\";\n    this.enable = async () => {\n      const wc = await this.getWalletConnector();\n      if (wc) {\n        this.start();\n        this.subscribeWalletConnector();\n        return wc.accounts;\n      } else {\n        throw new Error(\"Failed to connect to WalleConnect\");\n      }\n    };\n    this.request = async payload => {\n      return this.send(payload);\n    };\n    this.send = async (payload, callback) => {\n      if (typeof payload === \"string\") {\n        const method = payload;\n        let params = callback;\n        if (method === \"personal_sign\") {\n          params = parsePersonalSign(params);\n        }\n        return this.sendAsyncPromise(method, params);\n      }\n      payload = Object.assign({\n        id: payloadId(),\n        jsonrpc: \"2.0\"\n      }, payload);\n      if (payload.method === \"personal_sign\") {\n        payload.params = parsePersonalSign(payload.params);\n      }\n      if (callback) {\n        this.sendAsync(payload, callback);\n        return;\n      }\n      return this.sendAsyncPromise(payload.method, payload.params);\n    };\n    this.onConnect = callback => {\n      this.connectCallbacks.push(callback);\n    };\n    this.triggerConnect = result => {\n      if (this.connectCallbacks && this.connectCallbacks.length) {\n        this.connectCallbacks.forEach(callback => callback(result));\n      }\n    };\n    this.bridge = opts.connector ? opts.connector.bridge : opts.bridge || \"https://bridge.walletconnect.org\";\n    this.qrcode = typeof opts.qrcode === \"undefined\" || opts.qrcode !== false;\n    this.qrcodeModal = opts.qrcodeModal || this.qrcodeModal;\n    this.qrcodeModalOptions = opts.qrcodeModalOptions;\n    this.wc = opts.connector || new WalletConnect({\n      bridge: this.bridge,\n      qrcodeModal: this.qrcode ? this.qrcodeModal : undefined,\n      qrcodeModalOptions: this.qrcodeModalOptions,\n      storageId: opts === null || opts === void 0 ? void 0 : opts.storageId,\n      signingMethods: opts === null || opts === void 0 ? void 0 : opts.signingMethods,\n      clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta\n    });\n    this.rpc = opts.rpc || null;\n    if (!this.rpc && (!opts.infuraId || typeof opts.infuraId !== \"string\" || !opts.infuraId.trim())) {\n      throw new Error(\"Missing one of the required parameters: rpc or infuraId\");\n    }\n    this.infuraId = opts.infuraId || \"\";\n    this.chainId = (opts === null || opts === void 0 ? void 0 : opts.chainId) || this.chainId;\n    this.initialize();\n  }\n  get isWalletConnect() {\n    return true;\n  }\n  get connector() {\n    return this.wc;\n  }\n  get walletMeta() {\n    return this.wc.peerMeta;\n  }\n  async disconnect() {\n    this.close();\n  }\n  async close() {\n    const wc = await this.getWalletConnector({\n      disableSessionCreation: true\n    });\n    await wc.killSession();\n    await this.onDisconnect();\n  }\n  async handleRequest(payload) {\n    try {\n      let response;\n      let result = null;\n      const wc = await this.getWalletConnector();\n      switch (payload.method) {\n        case \"wc_killSession\":\n          await this.close();\n          result = null;\n          break;\n        case \"eth_accounts\":\n          result = wc.accounts;\n          break;\n        case \"eth_coinbase\":\n          result = wc.accounts[0];\n          break;\n        case \"eth_chainId\":\n          result = wc.chainId;\n          break;\n        case \"net_version\":\n          result = wc.chainId;\n          break;\n        case \"eth_uninstallFilter\":\n          this.sendAsync(payload, _ => _);\n          result = true;\n          break;\n        default:\n          response = await this.handleOtherRequests(payload);\n      }\n      if (response) {\n        return response;\n      }\n      return this.formatResponse(payload, result);\n    } catch (error) {\n      this.emit(\"error\", error);\n      throw error;\n    }\n  }\n  async handleOtherRequests(payload) {\n    if (!signingMethods.includes(payload.method) && payload.method.startsWith(\"eth_\")) {\n      return this.handleReadRequests(payload);\n    }\n    const wc = await this.getWalletConnector();\n    const result = await wc.sendCustomRequest(payload);\n    return this.formatResponse(payload, result);\n  }\n  async handleReadRequests(payload) {\n    if (!this.http) {\n      const error = new Error(\"HTTP Connection not available\");\n      this.emit(\"error\", error);\n      throw error;\n    }\n    return this.http.send(payload);\n  }\n  formatResponse(payload, result) {\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result: result\n    };\n  }\n  getWalletConnector() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      disableSessionCreation = false\n    } = opts;\n    return new Promise((resolve, reject) => {\n      const wc = this.wc;\n      if (this.isConnecting) {\n        this.onConnect(x => resolve(x));\n      } else if (!wc.connected && !disableSessionCreation) {\n        this.isConnecting = true;\n        wc.on(\"modal_closed\", () => {\n          reject(new Error(\"User closed modal\"));\n        });\n        wc.createSession({\n          chainId: this.chainId\n        }).then(() => {\n          wc.on(\"connect\", (error, payload) => {\n            if (error) {\n              this.isConnecting = false;\n              return reject(error);\n            }\n            this.isConnecting = false;\n            this.connected = true;\n            if (payload) {\n              this.updateState(payload.params[0]);\n            }\n            this.emit(\"connect\");\n            this.triggerConnect(wc);\n            resolve(wc);\n          });\n        }).catch(error => {\n          this.isConnecting = false;\n          reject(error);\n        });\n      } else {\n        if (!this.connected) {\n          this.connected = true;\n          this.updateState(wc.session);\n        }\n        resolve(wc);\n      }\n    });\n  }\n  async subscribeWalletConnector() {\n    const wc = await this.getWalletConnector();\n    wc.on(\"disconnect\", error => {\n      if (error) {\n        this.emit(\"error\", error);\n        return;\n      }\n      this.onDisconnect();\n    });\n    wc.on(\"session_update\", (error, payload) => {\n      if (error) {\n        this.emit(\"error\", error);\n        return;\n      }\n      this.updateState(payload.params[0]);\n    });\n  }\n  async onDisconnect() {\n    await this.stop();\n    this.emit(\"close\", 1000, \"Connection closed\");\n    this.emit(\"disconnect\", 1000, \"Connection disconnected\");\n    this.connected = false;\n  }\n  async updateState(sessionParams) {\n    const {\n      accounts,\n      chainId,\n      networkId,\n      rpcUrl\n    } = sessionParams;\n    if (!this.accounts || accounts && this.accounts !== accounts) {\n      this.accounts = accounts;\n      this.emit(\"accountsChanged\", accounts);\n    }\n    if (!this.chainId || chainId && this.chainId !== chainId) {\n      this.chainId = chainId;\n      this.emit(\"chainChanged\", chainId);\n    }\n    if (!this.networkId || networkId && this.networkId !== networkId) {\n      this.networkId = networkId;\n      this.emit(\"networkChanged\", networkId);\n    }\n    this.updateRpcUrl(this.chainId, rpcUrl || \"\");\n  }\n  updateRpcUrl(chainId) {\n    let rpcUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    const rpc = {\n      infuraId: this.infuraId,\n      custom: this.rpc || undefined\n    };\n    rpcUrl = rpcUrl || getRpcUrl(chainId, rpc);\n    if (rpcUrl) {\n      this.rpcUrl = rpcUrl;\n      this.updateHttpConnection();\n    } else {\n      this.emit(\"error\", new Error(`No RPC Url available for chainId: ${chainId}`));\n    }\n  }\n  updateHttpConnection() {\n    if (this.rpcUrl) {\n      this.http = new HttpConnection(this.rpcUrl);\n      this.http.on(\"payload\", payload => this.emit(\"payload\", payload));\n      this.http.on(\"error\", error => this.emit(\"error\", error));\n    }\n  }\n  sendAsyncPromise(method, params) {\n    return new Promise((resolve, reject) => {\n      this.sendAsync({\n        id: payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params: params || []\n      }, (error, response) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(response.result);\n      });\n    });\n  }\n  initialize() {\n    this.updateRpcUrl(this.chainId);\n    this.addProvider(new FixtureSubprovider({\n      eth_hashrate: \"0x00\",\n      eth_mining: false,\n      eth_syncing: true,\n      net_listening: true,\n      web3_clientVersion: `WalletConnect/v1.x.x/javascript`\n    }));\n    this.addProvider(new CacheSubprovider());\n    this.addProvider(new SubscriptionsSubprovider());\n    this.addProvider(new FilterSubprovider());\n    this.addProvider(new NonceSubprovider());\n    this.addProvider(new HookedWalletSubprovider(this.configWallet()));\n    this.addProvider({\n      handleRequest: async (payload, next, end) => {\n        try {\n          const {\n            error,\n            result\n          } = await this.handleRequest(payload);\n          end(error, result);\n        } catch (error) {\n          end(error);\n        }\n      },\n      setEngine: _ => _\n    });\n  }\n  configWallet() {\n    return {\n      getAccounts: async cb => {\n        try {\n          const wc = await this.getWalletConnector();\n          const accounts = wc.accounts;\n          if (accounts && accounts.length) {\n            cb(null, accounts);\n          } else {\n            cb(new Error(\"Failed to get accounts\"));\n          }\n        } catch (error) {\n          cb(error);\n        }\n      },\n      processMessage: async (msgParams, cb) => {\n        try {\n          const wc = await this.getWalletConnector();\n          const result = await wc.signMessage([msgParams.from, msgParams.data]);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      },\n      processPersonalMessage: async (msgParams, cb) => {\n        try {\n          const wc = await this.getWalletConnector();\n          const result = await wc.signPersonalMessage([msgParams.data, msgParams.from]);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      },\n      processSignTransaction: async (txParams, cb) => {\n        try {\n          const wc = await this.getWalletConnector();\n          const result = await wc.signTransaction(txParams);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      },\n      processTransaction: async (txParams, cb) => {\n        try {\n          const wc = await this.getWalletConnector();\n          const result = await wc.sendTransaction(txParams);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      },\n      processTypedMessage: async (msgParams, cb) => {\n        try {\n          const wc = await this.getWalletConnector();\n          const result = await wc.signTypedData([msgParams.from, msgParams.data]);\n          cb(null, result);\n        } catch (error) {\n          cb(error);\n        }\n      }\n    };\n  }\n}\nexport default WalletConnectProvider;","map":{"version":3,"mappings":"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","names":["WalletConnect","QRCodeModal","HttpConnection","payloadId","signingMethods","parsePersonalSign","getRpcUrl","ProviderEngine","require","CacheSubprovider","FixtureSubprovider","FilterSubprovider","HookedWalletSubprovider","NonceSubprovider","SubscriptionsSubprovider","WalletConnectProvider","constructor","opts","pollingInterval","undefined","wc","getWalletConnector","start","subscribeWalletConnector","accounts","Error","payload","send","callback","method","params","sendAsyncPromise","id","jsonrpc","sendAsync","connectCallbacks","push","result","length","forEach","bridge","connector","qrcode","qrcodeModal","qrcodeModalOptions","storageId","clientMeta","rpc","infuraId","trim","chainId","initialize","isWalletConnect","walletMeta","peerMeta","disconnect","close","disableSessionCreation","killSession","onDisconnect","handleRequest","response","_","handleOtherRequests","formatResponse","error","emit","includes","startsWith","handleReadRequests","sendCustomRequest","http","Promise","resolve","reject","isConnecting","onConnect","x","connected","on","createSession","then","updateState","triggerConnect","catch","session","stop","sessionParams","networkId","rpcUrl","updateRpcUrl","custom","updateHttpConnection","addProvider","eth_hashrate","eth_mining","eth_syncing","net_listening","web3_clientVersion","configWallet","next","end","setEngine","getAccounts","cb","processMessage","msgParams","signMessage","from","data","processPersonalMessage","signPersonalMessage","processSignTransaction","txParams","signTransaction","processTransaction","sendTransaction","processTypedMessage","signTypedData"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}