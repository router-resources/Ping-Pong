{"ast":null,"code":"\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n  try {\n    const missing = [];\n    // Make sure all forms of normalization are supported\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(form => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n  return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n  // Not Implemented\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n  // Unsupported Operation\n  //   - operation\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n  // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n  // Some sort of bad response from the server\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n  // Timeout\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n  ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n  // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n  ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n  // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n  // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n  // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n  ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n  // Insufficient funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n  // Nonce has already been used\n  //   - transaction: the transaction attempted\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n  // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n  // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n  // The transaction was replaced by one with a higher gas price\n  //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n  //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n  //   - hash: original transaction hash\n  //   - replacement: the full TransactionsResponse for the replacement\n  //   - receipt: the receipt of the replacement\n  ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n  constructor(version) {\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n  _log(logLevel, args) {\n    const level = logLevel.toLowerCase();\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n    console.log.apply(console, args);\n  }\n  debug() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this._log(Logger.levels.DEBUG, args);\n  }\n  info() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this._log(Logger.levels.INFO, args);\n  }\n  warn() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this._log(Logger.levels.WARNING, args);\n  }\n  makeError(message, code, params) {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n    if (!params) {\n      params = {};\n    }\n    const messageDetails = [];\n    Object.keys(params).forEach(key => {\n      const value = params[key];\n      try {\n        if (value instanceof Uint8Array) {\n          let hex = \"\";\n          for (let i = 0; i < value.length; i++) {\n            hex += HEX[value[i] >> 4];\n            hex += HEX[value[i] & 0x0f];\n          }\n          messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n        } else {\n          messageDetails.push(key + \"=\" + JSON.stringify(value));\n        }\n      } catch (error) {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n      }\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`version=${this.version}`);\n    const reason = message;\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    }\n    // @TODO: Any??\n    const error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n      error[key] = params[key];\n    });\n    return error;\n  }\n  throwError(message, code, params) {\n    throw this.makeError(message, code, params);\n  }\n  throwArgumentError(message, name, value) {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value: value\n    });\n  }\n  assert(condition, message, code, params) {\n    if (!!condition) {\n      return;\n    }\n    this.throwError(message, code, params);\n  }\n  assertArgument(condition, message, name, value) {\n    if (!!condition) {\n      return;\n    }\n    this.throwArgumentError(message, name, value);\n  }\n  checkNormalize(message) {\n    if (message == null) {\n      message = \"platform missing String.prototype.normalize\";\n    }\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError\n      });\n    }\n  }\n  checkSafeUint53(value, message) {\n    if (typeof value !== \"number\") {\n      return;\n    }\n    if (message == null) {\n      message = \"value not safe\";\n    }\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value: value\n      });\n    }\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value: value\n      });\n    }\n  }\n  checkArgumentCount(count, expectedCount, message) {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n  }\n  checkNew(target, kind) {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n  checkAbstract(target, kind) {\n    if (target === kind) {\n      this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n        name: target.name,\n        operation: \"new\"\n      });\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n  static globalLogger() {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n    return _globalLogger;\n  }\n  static setCensorship(censorship, permanent) {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n  static setLogLevel(logLevel) {\n    const level = LogLevels[logLevel.toLowerCase()];\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n    _logLevel = level;\n  }\n  static from(version) {\n    return new Logger(version);\n  }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;","map":{"version":3,"mappings":"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","names":["_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","version","_globalLogger","_checkNormalize","missing","forEach","form","normalize","Error","push","length","join","String","fromCharCode","message","_normalizeError","LogLevel","ErrorCode","HEX","Logger","constructor","Object","defineProperty","enumerable","value","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","key","Uint8Array","hex","i","JSON","stringify","toString","reason","throwError","name","INVALID_ARGUMENT","argument","assert","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","MISSING_NEW","checkAbstract","globalLogger","setCensorship","censorship","permanent","setLogLevel","from"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}