{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Transaction } from '@solana/web3.js';\nimport { createLoggerMiddleware, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from '@toruslabs/base-controllers';\nimport { setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback, BasePostMessageStream } from '@toruslabs/openlogin-jrpc';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport { isDuplexStream } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport dequal from 'fast-deep-equal';\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: maxEventListeners => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \"}\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {}\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: \"torus-\".concat(window.location.hostname)\n};\nvar log = loglevel.getLogger(\"solana-embed\");\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n    next(done => {\n      const {\n        error\n      } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(\"Torus - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"Torus: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getWindowId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async buildEnv => {\n  let torusUrl;\n  let logLevel; // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = \"https://solana.tor.us\";\n      logLevel = \"error\";\n      break;\n  }\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nconst FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nconst FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nconst FEATURES_CONFIRM_WINDOW = {\n  height: 600,\n  width: 400\n};\nfunction storageAvailable(type) {\n  let storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && (\n    // everything except Firefox\n    e.code === 22 ||\n    // Firefox\n    e.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" ||\n    // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n/**\n * popup handler utils\n */\n\nfunction getPopupFeatures(_ref) {\n  let {\n    width: w,\n    height: h\n  } = _ref;\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\nconst getNetworkConfig = label => {\n  switch (label) {\n    case \"mainnet-beta\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x1\",\n        displayName: \"Solana Mainnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.mainnet-beta.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n    case \"testnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x2\",\n        displayName: \"Solana Testnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.testnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n    case \"devnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x3\",\n        displayName: \"Solana Devnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.devnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n    default:\n      return undefined;\n  }\n};\nclass BaseProvider extends SafeEventEmitter {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super();\n    _defineProperty(this, \"isTorus\", void 0);\n    _defineProperty(this, \"_rpcEngine\", void 0);\n    _defineProperty(this, \"jsonRpcConnectionEvents\", void 0);\n    _defineProperty(this, \"_state\", void 0);\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"Torus\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({\n      origin: location.origin\n    }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n  send(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n  sendAsync(payload) {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n}\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nclass PopupHandler extends SafeEventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    var _this$window;\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nclass TorusCommunicationProvider extends BaseProvider {\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"dappStorageKey\", void 0);\n    _defineProperty(this, \"windowRefs\", void 0);\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    this._state = _objectSpread$2({}, TorusCommunicationProvider._defaultState); // public state\n\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {}; // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n    const notificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const {\n          isFullScreen,\n          rid\n        } = params;\n        this._displayIframe({\n          isFull: isFullScreen,\n          rid: rid\n        });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const {\n          windowId,\n          url\n        } = params;\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const {\n          currentLoginProvider\n        } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n        this._displayIframe();\n      }\n    };\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n  get isLoggedIn() {\n    return this._state.isLoggedIn;\n  }\n  get isIFrameFullScreen() {\n    return this._state.isIFrameFullScreen;\n  }\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n  async _initializeState(params) {\n    try {\n      const {\n        torusUrl,\n        dappStorageKey,\n        torusAlertContainer,\n        torusIframe\n      } = params;\n      this.torusUrl = torusUrl;\n      this.dappStorageKey = dappStorageKey;\n      this.torusAlertContainer = torusAlertContainer;\n      this.torusIframe = torusIframe;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const {\n        currentLoginProvider,\n        isLoggedIn\n      } = await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  _handleWindow(windowId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?windowId=\").concat(windowId));\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    }\n    const handledWindow = new PopupHandler({\n      url: finalUrl,\n      target,\n      features\n    });\n    handledWindow.open();\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n      return;\n    } // Add to collection only if window is opened\n\n    this.windowRefs[windowId] = handledWindow; // We tell the iframe that the window has been successfully opened\n\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: {\n        windowId\n      }\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: {\n          windowId\n        }\n      });\n    });\n  }\n  _displayIframe() {\n    let {\n      isFull = false,\n      rid = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const style = {}; // set phase\n\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: {\n        isIFrameFullScreen: isFull,\n        rid\n      }\n    });\n  }\n  hideTorusButton() {\n    this._state.torusWidgetVisibility = false;\n    this._displayIframe();\n  }\n  showTorusButton() {\n    this._state.torusWidgetVisibility = true;\n    this._displayIframe();\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n  _rpcRequest(payload, callback) {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n\n  _handleConnect(currentLoginProvider, isLoggedIn) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        currentLoginProvider,\n        isLoggedIn\n      });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  } // Called if the iframe wants to close the window cause it is done processing the request\n\n  _handleCloseWindow(params) {\n    const {\n      windowId\n    } = params;\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n  async _createPopupBlockAlert(windowId, url) {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n  getLogoUrl() {\n    const logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n    return logoUrl;\n  }\n}\n_defineProperty(TorusCommunicationProvider, \"_defaultState\", {\n  buttonPosition: \"bottom-left\",\n  currentLoginProvider: null,\n  isIFrameFullScreen: false,\n  hasEmittedConnection: false,\n  torusWidgetVisibility: false,\n  initialized: false,\n  isLoggedIn: false,\n  isPermanentlyDisconnected: false,\n  isConnected: false\n});\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nclass TorusInPageProvider extends BaseProvider {\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"chainId\", void 0);\n    _defineProperty(this, \"selectedAddress\", void 0);\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n    this._state = _objectSpread$1({}, TorusInPageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.chainId = null;\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n    const jsonRpcNotificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params);\n      }\n    }; // json rpc notification listener\n\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n  isConnected() {\n    return this._state.isConnected;\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked\n      } = await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n      this._handleChainChanged({\n        chainId\n      });\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n  _handleChainChanged() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", {\n        chainId\n      });\n      return;\n    }\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n_defineProperty(TorusInPageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\n/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\nasync function getSiteIcon(window) {\n  try {\n    const {\n      document\n    } = window; // Use the site's favicon if it exists\n\n    let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    } // Search through available icons in no particular order\n\n    icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/frame\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\nclass Torus {\n  constructor() {\n    let {\n      modalZIndex = 99999\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"isInitialized\", void 0);\n    _defineProperty(this, \"torusAlert\", void 0);\n    _defineProperty(this, \"modalZIndex\", void 0);\n    _defineProperty(this, \"alertZIndex\", void 0);\n    _defineProperty(this, \"requestedLoginProvider\", void 0);\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"communicationProvider\", void 0);\n    _defineProperty(this, \"dappStorageKey\", void 0);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    _defineProperty(this, \"styleLink\", void 0);\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n  get isLoggedIn() {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      network,\n      showTorusButton = false,\n      useLocalStorage = false,\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      apiKey = \"torus-default\",\n      extraParams = {}\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";else torusIframeUrl.pathname += \"/frame\";\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n    torusIframeUrl.hash = hashParams.toString(); // Iframe code\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\".concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement(\"<div id=\\\"torusAlertContainer\\\" style=\\\"display:none; z-index: \".concat(this.alertZIndex.toString(), \"\\\"></div>\"));\n    this.styleLink = htmlToElement(\"<link href=\\\"\".concat(torusUrl, \"/css/widget.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\"));\n    const handleSetup = async () => {\n      return new Promise((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata(); // send init params here\n\n            this.torusIframe.contentWindow.postMessage({\n              buttonPosition,\n              apiKey,\n              network: typeof network === \"string\" ? getNetworkConfig(network) : network,\n              dappMetadata,\n              extraParams\n            }, torusIframeUrl.origin);\n            await this._setupWeb3({\n              torusUrl\n            });\n            if (showTorusButton) this.showTorusButton();else this.hideTorusButton();\n            this.isInitialized = true;\n            window.torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n    await documentReady();\n    await handleSetup();\n  }\n  async login() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({\n          isFull: true\n        });\n      } // If user is already logged in, we assume they have given access to the website\n\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest({\n          method: \"solana_requestAccounts\",\n          params: [this.requestedLoginProvider, params.login_hint]\n        }, getRpcPromiseCallback(resolve, reject));\n      });\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      } // This would never happen, but just in case\n\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n  async logout() {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: []\n    });\n    this.requestedLoginProvider = null;\n  }\n  async cleanUp() {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n  hideTorusButton() {\n    this.communicationProvider.hideTorusButton();\n  }\n  showTorusButton() {\n    this.communicationProvider.showTorusButton();\n  }\n  async setProvider(params) {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: _objectSpread({}, params)\n    });\n  }\n  async showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const instanceId = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: []\n    });\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach(x => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n    if (this.dappStorageKey) {\n      finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    } // No need to track this window state. Hence, no _handleWindow call.\n\n    const walletWindow = new PopupHandler({\n      url: finalUrl,\n      features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW)\n    });\n    walletWindow.open();\n  }\n  async getUserInfo() {\n    const userInfoResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: []\n    });\n    return userInfoResponse;\n  }\n  async initiateTopup(provider, params) {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n    this.communicationProvider._handleWindow(windowId);\n    const topupResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: {\n        provider,\n        params,\n        windowId\n      }\n    });\n    return topupResponse;\n  } // Solana specific API\n\n  async sendTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"send_transaction\",\n      // params: { message: transaction.serializeMessage().toString(\"hex\") },\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    return response;\n  }\n  async signTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"sign_transaction\",\n      // params: { message: transaction.serializeMessage().toString(\"hex\") },\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    const buf = Buffer.from(response, \"hex\");\n    const sendTx = Transaction.from(buf);\n    return sendTx;\n  }\n  async signAllTransactions(transactions) {\n    const encodedTransactions = transactions.map(x => x.serialize({\n      requireAllSignatures: false\n    }).toString(\"hex\"));\n    const response = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: {\n        message: encodedTransactions\n      }\n    });\n    const allSignedTransaction = response.map(msg => Transaction.from(Buffer.from(msg, \"hex\")));\n    return allSignedTransaction;\n  }\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data\n      }\n    });\n    return response;\n  }\n  async getGaslessPublicKey() {\n    const response = await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: []\n    });\n    return response;\n  } // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n  handleDappStorageKey(useLocalStorage) {\n    let dappStorageKey = \"\";\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = \"torus-app-\".concat(getWindowId());\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n  async _setupWeb3(providerParams) {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // compose the inPage provider\n\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n    inPageProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        }); // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n\n        _payload.windowId = windowId;\n      }\n      inPageProvider._rpcEngine.handle(_payload, cb);\n    };\n    communicationProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW) // todo: are these features generic for all\n        }); // for communication methods sending window id in jrpc req params\n\n        _payload.params.windowId = windowId;\n      }\n      communicationProvider._rpcEngine.handle(_payload, cb);\n    }; // detect solana_requestAccounts and pipe to enable for now\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inPageProvider[m]; // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n      const self = this;\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const {\n          method,\n          params = []\n        } = request;\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({\n            loginProvider: params[0]\n          });\n          self.login({\n            loginProvider: params[0]\n          }) // eslint-disable-next-line promise/no-callback-in-promise\n          .then(res => cb(null, res)) // eslint-disable-next-line promise/no-callback-in-promise\n          .catch(err => cb(err));\n        }\n        return originalMethod.apply(this, [request, cb]);\n      };\n    }; // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n    await Promise.all([inPageProvider._initializeState(), communicationProvider._initializeState(_objectSpread(_objectSpread({}, providerParams), {}, {\n      dappStorageKey: this.dappStorageKey,\n      torusAlertContainer: this.torusAlertContainer,\n      torusIframe: this.torusIframe\n    }))]);\n    log.debug(\"Torus - injected provider\");\n  }\n}\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInPageProvider, Torus as default };","map":{"version":3,"mappings":"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","names":["errors","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","api","prodTorusUrl","localStorageKey","window","location","hostname","loglevel","getLogger","createErrorMiddleware","req","res","next","error","ethErrors","rpc","invalidRequest","message","data","done","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getWindowId","Math","random","toString","slice","getTorusUrl","buildEnv","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","Object","prototype","hasOwnProperty","call","config","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","type","storage","x","setItem","removeItem","e","code","name","length","getPopupFeatures","w","h","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","left","abs","top","features","getNetworkConfig","label","blockExplorerUrl","displayName","logo","rpcTarget","ticker","tickerName","BaseProvider","SafeEventEmitter","constructor","connectionStream","jsonRpcStreamName","isDuplexStream","Error","messages","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","ObjectMultiplex","pump","ignoreStream","jsonRpcConnection","createStreamMiddleware","stream","createStream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","createLoggerMiddleware","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","Array","isArray","params","Promise","resolve","reject","getRpcPromiseCallback","send","payload","callback","streamName","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","addEventListener","documentReady","readyState","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","_this$window","focus","close","redirect","locationReplaceOnRedirect","replace","TorusCommunicationProvider","_state","_defaultState","dappStorageKey","languageTranslations","configuration","embedTranslations","windowRefs","on","isConnected","notificationHandler","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","COMMUNICATION_JRPC_METHODS","GET_PROVIDER_STATE","initialized","_handleWindow","finalUrl","URL","hash","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","display","torusWidgetVisibility","buttonPosition","right","bottom","assign","hideTorusButton","showTorusButton","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","bindOnLoad","remove","children","attachOnLoad","hasEmittedConnection","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","jsonRpcNotificationHandler","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","accounts","isUnlocked","PROVIDER_JRPC_METHODS","isInternal","err","result","isEthAccounts","finalAccounts","account","dequal","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","init","enableLogging","network","useLocalStorage","apiKey","extraParams","setAPIKey","setDefaultLevel","enableAll","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","handleSetup","body","dappMetadata","contentWindow","postMessage","_setupWeb3","torus","login","loginProvider","provider","login_hint","logout","LOGOUT","cleanUp","clearInit","isElement","element","Element","Document","contains","setProvider","showWallet","path","instanceId","WALLET_INSTANCE_ID","finalPath","searchParams","keys","forEach","walletWindow","getUserInfo","userInfoResponse","USER_INFO","initiateTopup","topupResponse","TOPUP","sendTransaction","transaction","response","serialize","requireAllSignatures","signTransaction","buf","Buffer","sendTx","Transaction","signAllTransactions","transactions","encodedTransactions","map","allSignedTransaction","msg","signMessage","getGaslessPublicKey","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","BasePostMessageStream","targetWindow","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","providerFunc","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all"],"sources":["../src/messages.ts","../src/interfaces.ts","../src/config.ts","../src/loglevel.ts","../src/utils.ts","../src/baseProvider.ts","../src/embedUtils.ts","../src/PopupHandler.ts","../src/communicationProvider.ts","../src/inPageProvider.ts","../src/siteMetadata.ts","../src/embed.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module"}