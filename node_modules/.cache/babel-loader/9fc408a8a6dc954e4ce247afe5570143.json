{"ast":null,"code":"var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n  escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n  gap,\n  indent,\n  meta = {\n    // table of character substitutions\n    '\\b': '\\\\b',\n    '\\t': '\\\\t',\n    '\\n': '\\\\n',\n    '\\f': '\\\\f',\n    '\\r': '\\\\r',\n    '\"': '\\\\\"',\n    '\\\\': '\\\\\\\\'\n  },\n  rep;\nfunction quote(string) {\n  // If the string contains no control characters, no quote characters, and no\n  // backslash characters, then we can safely slap some quotes around it.\n  // Otherwise we must also replace the offending characters with safe escape\n  // sequences.\n\n  escapable.lastIndex = 0;\n  return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n    var c = meta[a];\n    return typeof c === 'string' ? c : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n  }) + '\"' : '\"' + string + '\"';\n}\nfunction str(key, holder) {\n  // Produce a string from holder[key].\n  var i,\n    // The loop counter.\n    k,\n    // The member key.\n    v,\n    // The member value.\n    length,\n    mind = gap,\n    partial,\n    value = holder[key];\n\n  // If the value has a toJSON method, call it to obtain a replacement value.\n  if (value && typeof value === 'object' && typeof value.toJSON === 'function') {\n    value = value.toJSON(key);\n  }\n\n  // If we were called with a replacer function, then call the replacer to\n  // obtain a replacement value.\n  if (typeof rep === 'function') {\n    value = rep.call(holder, key, value);\n  }\n\n  // What happens next depends on the value's type.\n  switch (typeof value) {\n    case 'string':\n      return quote(value);\n    case 'number':\n      // JSON numbers must be finite. Encode non-finite numbers as null.\n      return isFinite(value) ? String(value) : 'null';\n    case 'boolean':\n    case 'null':\n      // If the value is a boolean or null, convert it to a string. Note:\n      // typeof null does not produce 'null'. The case is included here in\n      // the remote chance that this gets fixed someday.\n      return String(value);\n    case 'object':\n      if (!value) return 'null';\n      gap += indent;\n      partial = [];\n\n      // Array.isArray\n      if (Object.prototype.toString.apply(value) === '[object Array]') {\n        length = value.length;\n        for (i = 0; i < length; i += 1) {\n          partial[i] = str(i, value) || 'null';\n        }\n\n        // Join all of the elements together, separated with commas, and\n        // wrap them in brackets.\n        v = partial.length === 0 ? '[]' : gap ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' : '[' + partial.join(',') + ']';\n        gap = mind;\n        return v;\n      }\n\n      // If the replacer is an array, use it to select the members to be\n      // stringified.\n      if (rep && typeof rep === 'object') {\n        length = rep.length;\n        for (i = 0; i < length; i += 1) {\n          k = rep[i];\n          if (typeof k === 'string') {\n            v = str(k, value);\n            if (v) {\n              partial.push(quote(k) + (gap ? ': ' : ':') + v);\n            }\n          }\n        }\n      } else {\n        // Otherwise, iterate through all of the keys in the object.\n        for (k in value) {\n          if (Object.prototype.hasOwnProperty.call(value, k)) {\n            v = str(k, value);\n            if (v) {\n              partial.push(quote(k) + (gap ? ': ' : ':') + v);\n            }\n          }\n        }\n      }\n\n      // Join all of the member texts together, separated with commas,\n      // and wrap them in braces.\n\n      v = partial.length === 0 ? '{}' : gap ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' : '{' + partial.join(',') + '}';\n      gap = mind;\n      return v;\n  }\n}\nmodule.exports = function (value, replacer, space) {\n  var i;\n  gap = '';\n  indent = '';\n\n  // If the space parameter is a number, make an indent string containing that\n  // many spaces.\n  if (typeof space === 'number') {\n    for (i = 0; i < space; i += 1) {\n      indent += ' ';\n    }\n  }\n  // If the space parameter is a string, it will be used as the indent string.\n  else if (typeof space === 'string') {\n    indent = space;\n  }\n\n  // If there is a replacer, it must be a function or an array.\n  // Otherwise, throw an error.\n  rep = replacer;\n  if (replacer && typeof replacer !== 'function' && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n    throw new Error('JSON.stringify');\n  }\n\n  // Make a fake root object containing our value under the key of ''.\n  // Return the result of stringifying the value.\n  return str('', {\n    '': value\n  });\n};","map":{"version":3,"names":["cx","escapable","gap","indent","meta","rep","quote","string","lastIndex","test","replace","a","c","charCodeAt","toString","slice","str","key","holder","i","k","v","length","mind","partial","value","toJSON","call","isFinite","String","Object","prototype","apply","join","push","hasOwnProperty","module","exports","replacer","space","Error"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/jsonify/lib/stringify.js"],"sourcesContent":["var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}