{"ast":null,"code":"/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nvar ObliviousSet = /** @class */function () {\n  function ObliviousSet(ttl) {\n    this.ttl = ttl;\n    this.set = new Set();\n    this.timeMap = new Map();\n  }\n  ObliviousSet.prototype.has = function (value) {\n    return this.set.has(value);\n  };\n  ObliviousSet.prototype.add = function (value) {\n    var _this = this;\n    this.timeMap.set(value, now());\n    this.set.add(value);\n    /**\n     * When a new value is added,\n     * start the cleanup at the next tick\n     * to not block the cpu for more important stuff\n     * that might happen.\n     */\n    setTimeout(function () {\n      removeTooOldValues(_this);\n    }, 0);\n  };\n  ObliviousSet.prototype.clear = function () {\n    this.set.clear();\n    this.timeMap.clear();\n  };\n  return ObliviousSet;\n}();\nexport { ObliviousSet };\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(obliviousSet) {\n  var olderThen = now() - obliviousSet.ttl;\n  var iterator = obliviousSet.set[Symbol.iterator]();\n  /**\n   * Because we can assume the new values are added at the bottom,\n   * we start from the top and stop as soon as we reach a non-too-old value.\n   */\n  while (true) {\n    var value = iterator.next().value;\n    if (!value) {\n      return; // no more elements\n    }\n\n    var time = obliviousSet.timeMap.get(value);\n    if (time < olderThen) {\n      obliviousSet.timeMap.delete(value);\n      obliviousSet.set.delete(value);\n    } else {\n      // We reached a value that is not old enough\n      return;\n    }\n  }\n}\nexport function now() {\n  return new Date().getTime();\n}","map":{"version":3,"mappings":"AACA;;;;;AAKA;EAGI,sBACoBA,GAAW;IAAX,QAAG,GAAHA,GAAG;IAHP,QAAG,GAAG,IAAIC,GAAG,EAAE;IACf,YAAO,GAAG,IAAIC,GAAG,EAAE;EAG/B;EAEJC,0BAAG,GAAH,UAAIC,KAAQ;IACR,OAAO,IAAI,CAACC,GAAG,CAACC,GAAG,CAACF,KAAK,CAAC;EAC9B,CAAC;EAEDD,0BAAG,GAAH,UAAIC,KAAQ;IAAZ;IACI,IAAI,CAACG,OAAO,CAACF,GAAG,CAACD,KAAK,EAAEI,GAAG,EAAE,CAAC;IAC9B,IAAI,CAACH,GAAG,CAACI,GAAG,CAACL,KAAK,CAAC;IAEnB;;;;;;IAMAM,UAAU,CAAC;MACPC,kBAAkB,CAACC,KAAI,CAAC;IAC5B,CAAC,EAAE,CAAC,CAAC;EACT,CAAC;EAEDT,4BAAK,GAAL;IACI,IAAI,CAACE,GAAG,CAACQ,KAAK,EAAE;IAChB,IAAI,CAACN,OAAO,CAACM,KAAK,EAAE;EACxB,CAAC;EACL,mBAAC;AAAD,CAAC,EA9BD;;AAiCA;;;;AAIA,OAAM,SAAUF,kBAAkB,CAC9BG,YAA0B;EAE1B,IAAMC,SAAS,GAAGP,GAAG,EAAE,GAAGM,YAAY,CAACd,GAAG;EAC1C,IAAMgB,QAAQ,GAAGF,YAAY,CAACT,GAAG,CAACY,MAAM,CAACD,QAAQ,CAAC,EAAE;EAEpD;;;;EAIA,OAAO,IAAI,EAAE;IACT,IAAMZ,KAAK,GAAGY,QAAQ,CAACE,IAAI,EAAE,CAACd,KAAK;IACnC,IAAI,CAACA,KAAK,EAAE;MACR,OAAO,CAAC;;;IAEZ,IAAMe,IAAI,GAAGL,YAAY,CAACP,OAAO,CAACa,GAAG,CAAChB,KAAK,CAAC;IAC5C,IAAIe,IAAI,GAAGJ,SAAS,EAAE;MAClBD,YAAY,CAACP,OAAO,CAACc,MAAM,CAACjB,KAAK,CAAC;MAClCU,YAAY,CAACT,GAAG,CAACgB,MAAM,CAACjB,KAAK,CAAC;KACjC,MAAM;MACH;MACA;;;AAGZ;AAEA,OAAM,SAAUI,GAAG;EACf,OAAO,IAAIc,IAAI,EAAE,CAACC,OAAO,EAAE;AAC/B","names":["ttl","Set","Map","ObliviousSet","value","set","has","timeMap","now","add","setTimeout","removeTooOldValues","_this","clear","obliviousSet","olderThen","iterator","Symbol","next","time","get","delete","Date","getTime"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}