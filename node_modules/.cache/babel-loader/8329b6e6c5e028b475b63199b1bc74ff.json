{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar clearErrorStack = require('../internals/clear-error-stack');\nvar installErrorCause = require('../internals/install-error-cause');\nvar iterate = require('../internals/iterate');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar Error = global.Error;\nvar push = [].push;\nvar $AggregateError = function AggregateError(errors, message /* , options */) {\n  var options = arguments.length > 2 ? arguments[2] : undefined;\n  var isInstance = isPrototypeOf(AggregateErrorPrototype, this);\n  var that;\n  if (setPrototypeOf) {\n    that = setPrototypeOf(new Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);\n  } else {\n    that = isInstance ? this : create(AggregateErrorPrototype);\n    createNonEnumerableProperty(that, TO_STRING_TAG, 'Error');\n  }\n  if (message !== undefined) createNonEnumerableProperty(that, 'message', normalizeStringArgument(message));\n  if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(that, 'stack', clearErrorStack(that.stack, 1));\n  installErrorCause(that, options);\n  var errorsArray = [];\n  iterate(errors, push, {\n    that: errorsArray\n  });\n  createNonEnumerableProperty(that, 'errors', errorsArray);\n  return that;\n};\nif (setPrototypeOf) setPrototypeOf($AggregateError, Error);else copyConstructorProperties($AggregateError, Error, {\n  name: true\n});\nvar AggregateErrorPrototype = $AggregateError.prototype = create(Error.prototype, {\n  constructor: createPropertyDescriptor(1, $AggregateError),\n  message: createPropertyDescriptor(1, ''),\n  name: createPropertyDescriptor(1, 'AggregateError')\n});\n\n// `AggregateError` constructor\n// https://tc39.es/ecma262/#sec-aggregate-error-constructor\n$({\n  global: true\n}, {\n  AggregateError: $AggregateError\n});","map":{"version":3,"names":["$","require","global","isPrototypeOf","getPrototypeOf","setPrototypeOf","copyConstructorProperties","create","createNonEnumerableProperty","createPropertyDescriptor","clearErrorStack","installErrorCause","iterate","normalizeStringArgument","wellKnownSymbol","ERROR_STACK_INSTALLABLE","TO_STRING_TAG","Error","push","$AggregateError","AggregateError","errors","message","options","arguments","length","undefined","isInstance","AggregateErrorPrototype","that","stack","errorsArray","name","prototype","constructor"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/core-js-pure/modules/es.aggregate-error.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar clearErrorStack = require('../internals/clear-error-stack');\nvar installErrorCause = require('../internals/install-error-cause');\nvar iterate = require('../internals/iterate');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar Error = global.Error;\nvar push = [].push;\n\nvar $AggregateError = function AggregateError(errors, message /* , options */) {\n  var options = arguments.length > 2 ? arguments[2] : undefined;\n  var isInstance = isPrototypeOf(AggregateErrorPrototype, this);\n  var that;\n  if (setPrototypeOf) {\n    that = setPrototypeOf(new Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);\n  } else {\n    that = isInstance ? this : create(AggregateErrorPrototype);\n    createNonEnumerableProperty(that, TO_STRING_TAG, 'Error');\n  }\n  if (message !== undefined) createNonEnumerableProperty(that, 'message', normalizeStringArgument(message));\n  if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(that, 'stack', clearErrorStack(that.stack, 1));\n  installErrorCause(that, options);\n  var errorsArray = [];\n  iterate(errors, push, { that: errorsArray });\n  createNonEnumerableProperty(that, 'errors', errorsArray);\n  return that;\n};\n\nif (setPrototypeOf) setPrototypeOf($AggregateError, Error);\nelse copyConstructorProperties($AggregateError, Error, { name: true });\n\nvar AggregateErrorPrototype = $AggregateError.prototype = create(Error.prototype, {\n  constructor: createPropertyDescriptor(1, $AggregateError),\n  message: createPropertyDescriptor(1, ''),\n  name: createPropertyDescriptor(1, 'AggregateError')\n});\n\n// `AggregateError` constructor\n// https://tc39.es/ecma262/#sec-aggregate-error-constructor\n$({ global: true }, {\n  AggregateError: $AggregateError\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}