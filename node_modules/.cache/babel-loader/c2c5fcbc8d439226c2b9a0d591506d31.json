{"ast":null,"code":"const BaseFilter = require('./base-filter');\nconst getBlocksForRange = require('./getBlocksForRange');\nconst {\n  incrementHexInt\n} = require('./hexUtils');\nclass TxFilter extends BaseFilter {\n  constructor(_ref) {\n    let {\n      provider\n    } = _ref;\n    super();\n    this.type = 'tx';\n    this.provider = provider;\n  }\n  async update(_ref2) {\n    let {\n      oldBlock\n    } = _ref2;\n    const toBlock = oldBlock;\n    const fromBlock = incrementHexInt(oldBlock);\n    const blocks = await getBlocksForRange({\n      provider: this.provider,\n      fromBlock,\n      toBlock\n    });\n    const blockTxHashes = [];\n    for (const block of blocks) {\n      blockTxHashes.push(...block.transactions);\n    }\n    // add to results\n    this.addResults(blockTxHashes);\n  }\n}\nmodule.exports = TxFilter;","map":{"version":3,"names":["BaseFilter","require","getBlocksForRange","incrementHexInt","TxFilter","constructor","provider","type","update","oldBlock","toBlock","fromBlock","blocks","blockTxHashes","block","push","transactions","addResults","module","exports"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/eth-json-rpc-filters/tx-filter.js"],"sourcesContent":["const BaseFilter = require('./base-filter')\nconst getBlocksForRange = require('./getBlocksForRange')\nconst { incrementHexInt } = require('./hexUtils')\n\nclass TxFilter extends BaseFilter {\n\n  constructor ({ provider }) {\n    super()\n    this.type = 'tx'\n    this.provider = provider\n  }\n\n  async update ({ oldBlock }) {\n    const toBlock = oldBlock\n    const fromBlock = incrementHexInt(oldBlock)\n    const blocks = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock })\n    const blockTxHashes = []\n    for (const block of blocks) {\n      blockTxHashes.push(...block.transactions)\n    }\n    // add to results\n    this.addResults(blockTxHashes)\n  }\n\n}\n\nmodule.exports = TxFilter\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AACxD,MAAM;EAAEE;AAAgB,CAAC,GAAGF,OAAO,CAAC,YAAY,CAAC;AAEjD,MAAMG,QAAQ,SAASJ,UAAU,CAAC;EAEhCK,WAAW,OAAgB;IAAA,IAAd;MAAEC;IAAS,CAAC;IACvB,KAAK,EAAE;IACP,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACD,QAAQ,GAAGA,QAAQ;EAC1B;EAEA,MAAME,MAAM,QAAgB;IAAA,IAAd;MAAEC;IAAS,CAAC;IACxB,MAAMC,OAAO,GAAGD,QAAQ;IACxB,MAAME,SAAS,GAAGR,eAAe,CAACM,QAAQ,CAAC;IAC3C,MAAMG,MAAM,GAAG,MAAMV,iBAAiB,CAAC;MAAEI,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEK,SAAS;MAAED;IAAQ,CAAC,CAAC;IACvF,MAAMG,aAAa,GAAG,EAAE;IACxB,KAAK,MAAMC,KAAK,IAAIF,MAAM,EAAE;MAC1BC,aAAa,CAACE,IAAI,CAAC,GAAGD,KAAK,CAACE,YAAY,CAAC;IAC3C;IACA;IACA,IAAI,CAACC,UAAU,CAACJ,aAAa,CAAC;EAChC;AAEF;AAEAK,MAAM,CAACC,OAAO,GAAGf,QAAQ"},"metadata":{},"sourceType":"script"}