{"ast":null,"code":"'use strict';\n\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineProperties = require('../internals/object-define-properties').f;\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has-own-property');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar arraySlice = require('../internals/array-slice-simple');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar $toString = require('../internals/to-string');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar NativeURL = global.URL;\nvar TypeError = global.TypeError;\nvar parseInt = global.parseInt;\nvar floor = Math.floor;\nvar pow = Math.pow;\nvar charAt = uncurryThis(''.charAt);\nvar exec = uncurryThis(/./.exec);\nvar join = uncurryThis([].join);\nvar numberToString = uncurryThis(1.0.toString);\nvar pop = uncurryThis([].pop);\nvar push = uncurryThis([].push);\nvar replace = uncurryThis(''.replace);\nvar shift = uncurryThis([].shift);\nvar split = uncurryThis(''.split);\nvar stringSlice = uncurryThis(''.slice);\nvar toLowerCase = uncurryThis(''.toLowerCase);\nvar unshift = uncurryThis([].unshift);\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\nvar ALPHA = /[a-z]/i;\n// eslint-disable-next-line regexp/no-obscure-range -- safe\nvar ALPHANUMERIC = /[\\d+-.a-z]/i;\nvar DIGIT = /\\d/;\nvar HEX_START = /^0x/i;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\da-f]+$/i;\n/* eslint-disable regexp/no-control-character -- safe */\nvar FORBIDDEN_HOST_CODE_POINT = /[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/;\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\0\\t\\n\\r #/:<>?@[\\\\\\]^|]/;\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u0020]+|[\\u0000-\\u0020]+$/g;\nvar TAB_AND_NEW_LINE = /[\\t\\n\\r]/g;\n/* eslint-enable regexp/no-control-character -- safe */\nvar EOF;\n\n// https://url.spec.whatwg.org/#ipv4-number-parser\nvar parseIPv4 = function (input) {\n  var parts = split(input, '.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.length--;\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && charAt(part, 0) == '0') {\n      radix = exec(HEX_START, part) ? 16 : 8;\n      part = stringSlice(part, radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!exec(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part)) return input;\n      number = parseInt(part, radix);\n    }\n    push(numbers, number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = pop(numbers);\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// https://url.spec.whatwg.org/#concept-ipv6-parser\n// eslint-disable-next-line max-statements -- TODO\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n  var chr = function () {\n    return charAt(input, pointer);\n  };\n  if (chr() == ':') {\n    if (charAt(input, 1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (chr()) {\n    if (pieceIndex == 8) return;\n    if (chr() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && exec(HEX, chr())) {\n      value = value * 16 + parseInt(chr(), 16);\n      pointer++;\n      length++;\n    }\n    if (chr() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (chr()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (chr() == '.' && numbersSeen < 4) pointer++;else return;\n        }\n        if (!exec(DIGIT, chr())) return;\n        while (exec(DIGIT, chr())) {\n          number = parseInt(chr(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;else if (ipv4Piece == 0) return;else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (chr() == ':') {\n      pointer++;\n      if (!chr()) return;\n    } else if (chr()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\n// https://url.spec.whatwg.org/#host-serializing\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      unshift(result, host % 256);\n      host = floor(host / 256);\n    }\n    return join(result, '.');\n    // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += numberToString(host[index], 16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  }\n  return host;\n};\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1,\n  '\"': 1,\n  '<': 1,\n  '>': 1,\n  '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1,\n  '?': 1,\n  '{': 1,\n  '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1,\n  ':': 1,\n  ';': 1,\n  '=': 1,\n  '@': 1,\n  '[': 1,\n  '\\\\': 1,\n  ']': 1,\n  '^': 1,\n  '|': 1\n});\nvar percentEncode = function (chr, set) {\n  var code = codeAt(chr, 0);\n  return code > 0x20 && code < 0x7F && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);\n};\n\n// https://url.spec.whatwg.org/#special-scheme\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\n// https://url.spec.whatwg.org/#windows-drive-letter\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && exec(ALPHA, charAt(string, 0)) && ((second = charAt(string, 1)) == ':' || !normalized && second == '|');\n};\n\n// https://url.spec.whatwg.org/#start-with-a-windows-drive-letter\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (string.length == 2 || (third = charAt(string, 2)) === '/' || third === '\\\\' || third === '?' || third === '#');\n};\n\n// https://url.spec.whatwg.org/#single-dot-path-segment\nvar isSingleDot = function (segment) {\n  return segment === '.' || toLowerCase(segment) === '%2e';\n};\n\n// https://url.spec.whatwg.org/#double-dot-path-segment\nvar isDoubleDot = function (segment) {\n  segment = toLowerCase(segment);\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\nvar URLState = function (url, isBase, base) {\n  var urlString = $toString(url);\n  var baseState, failure, searchParams;\n  if (isBase) {\n    failure = this.parse(urlString);\n    if (failure) throw TypeError(failure);\n    this.searchParams = null;\n  } else {\n    if (base !== undefined) baseState = new URLState(base, true);\n    failure = this.parse(urlString, null, baseState);\n    if (failure) throw TypeError(failure);\n    searchParams = getInternalSearchParamsState(new URLSearchParams());\n    searchParams.bindURL(this);\n    this.searchParams = searchParams;\n  }\n};\nURLState.prototype = {\n  type: 'URL',\n  // https://url.spec.whatwg.org/#url-parsing\n  // eslint-disable-next-line max-statements -- TODO\n  parse: function (input, stateOverride, base) {\n    var url = this;\n    var state = stateOverride || SCHEME_START;\n    var pointer = 0;\n    var buffer = '';\n    var seenAt = false;\n    var seenBracket = false;\n    var seenPasswordToken = false;\n    var codePoints, chr, bufferCodePoints, failure;\n    input = $toString(input);\n    if (!stateOverride) {\n      url.scheme = '';\n      url.username = '';\n      url.password = '';\n      url.host = null;\n      url.port = null;\n      url.path = [];\n      url.query = null;\n      url.fragment = null;\n      url.cannotBeABaseURL = false;\n      input = replace(input, LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n    }\n    input = replace(input, TAB_AND_NEW_LINE, '');\n    codePoints = arrayFrom(input);\n    while (pointer <= codePoints.length) {\n      chr = codePoints[pointer];\n      switch (state) {\n        case SCHEME_START:\n          if (chr && exec(ALPHA, chr)) {\n            buffer += toLowerCase(chr);\n            state = SCHEME;\n          } else if (!stateOverride) {\n            state = NO_SCHEME;\n            continue;\n          } else return INVALID_SCHEME;\n          break;\n        case SCHEME:\n          if (chr && (exec(ALPHANUMERIC, chr) || chr == '+' || chr == '-' || chr == '.')) {\n            buffer += toLowerCase(chr);\n          } else if (chr == ':') {\n            if (stateOverride && (url.isSpecial() != hasOwn(specialSchemes, buffer) || buffer == 'file' && (url.includesCredentials() || url.port !== null) || url.scheme == 'file' && !url.host)) return;\n            url.scheme = buffer;\n            if (stateOverride) {\n              if (url.isSpecial() && specialSchemes[url.scheme] == url.port) url.port = null;\n              return;\n            }\n            buffer = '';\n            if (url.scheme == 'file') {\n              state = FILE;\n            } else if (url.isSpecial() && base && base.scheme == url.scheme) {\n              state = SPECIAL_RELATIVE_OR_AUTHORITY;\n            } else if (url.isSpecial()) {\n              state = SPECIAL_AUTHORITY_SLASHES;\n            } else if (codePoints[pointer + 1] == '/') {\n              state = PATH_OR_AUTHORITY;\n              pointer++;\n            } else {\n              url.cannotBeABaseURL = true;\n              push(url.path, '');\n              state = CANNOT_BE_A_BASE_URL_PATH;\n            }\n          } else if (!stateOverride) {\n            buffer = '';\n            state = NO_SCHEME;\n            pointer = 0;\n            continue;\n          } else return INVALID_SCHEME;\n          break;\n        case NO_SCHEME:\n          if (!base || base.cannotBeABaseURL && chr != '#') return INVALID_SCHEME;\n          if (base.cannotBeABaseURL && chr == '#') {\n            url.scheme = base.scheme;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n            url.fragment = '';\n            url.cannotBeABaseURL = true;\n            state = FRAGMENT;\n            break;\n          }\n          state = base.scheme == 'file' ? FILE : RELATIVE;\n          continue;\n        case SPECIAL_RELATIVE_OR_AUTHORITY:\n          if (chr == '/' && codePoints[pointer + 1] == '/') {\n            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n            pointer++;\n          } else {\n            state = RELATIVE;\n            continue;\n          }\n          break;\n        case PATH_OR_AUTHORITY:\n          if (chr == '/') {\n            state = AUTHORITY;\n            break;\n          } else {\n            state = PATH;\n            continue;\n          }\n        case RELATIVE:\n          url.scheme = base.scheme;\n          if (chr == EOF) {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n          } else if (chr == '/' || chr == '\\\\' && url.isSpecial()) {\n            state = RELATIVE_SLASH;\n          } else if (chr == '?') {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.path.length--;\n            state = PATH;\n            continue;\n          }\n          break;\n        case RELATIVE_SLASH:\n          if (url.isSpecial() && (chr == '/' || chr == '\\\\')) {\n            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          } else if (chr == '/') {\n            state = AUTHORITY;\n          } else {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            state = PATH;\n            continue;\n          }\n          break;\n        case SPECIAL_AUTHORITY_SLASHES:\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          if (chr != '/' || charAt(buffer, pointer + 1) != '/') continue;\n          pointer++;\n          break;\n        case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n          if (chr != '/' && chr != '\\\\') {\n            state = AUTHORITY;\n            continue;\n          }\n          break;\n        case AUTHORITY:\n          if (chr == '@') {\n            if (seenAt) buffer = '%40' + buffer;\n            seenAt = true;\n            bufferCodePoints = arrayFrom(buffer);\n            for (var i = 0; i < bufferCodePoints.length; i++) {\n              var codePoint = bufferCodePoints[i];\n              if (codePoint == ':' && !seenPasswordToken) {\n                seenPasswordToken = true;\n                continue;\n              }\n              var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n              if (seenPasswordToken) url.password += encodedCodePoints;else url.username += encodedCodePoints;\n            }\n            buffer = '';\n          } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\\\' && url.isSpecial()) {\n            if (seenAt && buffer == '') return INVALID_AUTHORITY;\n            pointer -= arrayFrom(buffer).length + 1;\n            buffer = '';\n            state = HOST;\n          } else buffer += chr;\n          break;\n        case HOST:\n        case HOSTNAME:\n          if (stateOverride && url.scheme == 'file') {\n            state = FILE_HOST;\n            continue;\n          } else if (chr == ':' && !seenBracket) {\n            if (buffer == '') return INVALID_HOST;\n            failure = url.parseHost(buffer);\n            if (failure) return failure;\n            buffer = '';\n            state = PORT;\n            if (stateOverride == HOSTNAME) return;\n          } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\\\' && url.isSpecial()) {\n            if (url.isSpecial() && buffer == '') return INVALID_HOST;\n            if (stateOverride && buffer == '' && (url.includesCredentials() || url.port !== null)) return;\n            failure = url.parseHost(buffer);\n            if (failure) return failure;\n            buffer = '';\n            state = PATH_START;\n            if (stateOverride) return;\n            continue;\n          } else {\n            if (chr == '[') seenBracket = true;else if (chr == ']') seenBracket = false;\n            buffer += chr;\n          }\n          break;\n        case PORT:\n          if (exec(DIGIT, chr)) {\n            buffer += chr;\n          } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\\\' && url.isSpecial() || stateOverride) {\n            if (buffer != '') {\n              var port = parseInt(buffer, 10);\n              if (port > 0xFFFF) return INVALID_PORT;\n              url.port = url.isSpecial() && port === specialSchemes[url.scheme] ? null : port;\n              buffer = '';\n            }\n            if (stateOverride) return;\n            state = PATH_START;\n            continue;\n          } else return INVALID_PORT;\n          break;\n        case FILE:\n          url.scheme = 'file';\n          if (chr == '/' || chr == '\\\\') state = FILE_SLASH;else if (base && base.scheme == 'file') {\n            if (chr == EOF) {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = base.query;\n            } else if (chr == '?') {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = '';\n              state = QUERY;\n            } else if (chr == '#') {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = base.query;\n              url.fragment = '';\n              state = FRAGMENT;\n            } else {\n              if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n                url.host = base.host;\n                url.path = arraySlice(base.path);\n                url.shortenPath();\n              }\n              state = PATH;\n              continue;\n            }\n          } else {\n            state = PATH;\n            continue;\n          }\n          break;\n        case FILE_SLASH:\n          if (chr == '/' || chr == '\\\\') {\n            state = FILE_HOST;\n            break;\n          }\n          if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n            if (isWindowsDriveLetter(base.path[0], true)) push(url.path, base.path[0]);else url.host = base.host;\n          }\n          state = PATH;\n          continue;\n        case FILE_HOST:\n          if (chr == EOF || chr == '/' || chr == '\\\\' || chr == '?' || chr == '#') {\n            if (!stateOverride && isWindowsDriveLetter(buffer)) {\n              state = PATH;\n            } else if (buffer == '') {\n              url.host = '';\n              if (stateOverride) return;\n              state = PATH_START;\n            } else {\n              failure = url.parseHost(buffer);\n              if (failure) return failure;\n              if (url.host == 'localhost') url.host = '';\n              if (stateOverride) return;\n              buffer = '';\n              state = PATH_START;\n            }\n            continue;\n          } else buffer += chr;\n          break;\n        case PATH_START:\n          if (url.isSpecial()) {\n            state = PATH;\n            if (chr != '/' && chr != '\\\\') continue;\n          } else if (!stateOverride && chr == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (!stateOverride && chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            state = PATH;\n            if (chr != '/') continue;\n          }\n          break;\n        case PATH:\n          if (chr == EOF || chr == '/' || chr == '\\\\' && url.isSpecial() || !stateOverride && (chr == '?' || chr == '#')) {\n            if (isDoubleDot(buffer)) {\n              url.shortenPath();\n              if (chr != '/' && !(chr == '\\\\' && url.isSpecial())) {\n                push(url.path, '');\n              }\n            } else if (isSingleDot(buffer)) {\n              if (chr != '/' && !(chr == '\\\\' && url.isSpecial())) {\n                push(url.path, '');\n              }\n            } else {\n              if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n                if (url.host) url.host = '';\n                buffer = charAt(buffer, 0) + ':'; // normalize windows drive letter\n              }\n\n              push(url.path, buffer);\n            }\n            buffer = '';\n            if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {\n              while (url.path.length > 1 && url.path[0] === '') {\n                shift(url.path);\n              }\n            }\n            if (chr == '?') {\n              url.query = '';\n              state = QUERY;\n            } else if (chr == '#') {\n              url.fragment = '';\n              state = FRAGMENT;\n            }\n          } else {\n            buffer += percentEncode(chr, pathPercentEncodeSet);\n          }\n          break;\n        case CANNOT_BE_A_BASE_URL_PATH:\n          if (chr == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);\n          }\n          break;\n        case QUERY:\n          if (!stateOverride && chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            if (chr == \"'\" && url.isSpecial()) url.query += '%27';else if (chr == '#') url.query += '%23';else url.query += percentEncode(chr, C0ControlPercentEncodeSet);\n          }\n          break;\n        case FRAGMENT:\n          if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);\n          break;\n      }\n      pointer++;\n    }\n  },\n  // https://url.spec.whatwg.org/#host-parsing\n  parseHost: function (input) {\n    var result, codePoints, index;\n    if (charAt(input, 0) == '[') {\n      if (charAt(input, input.length - 1) != ']') return INVALID_HOST;\n      result = parseIPv6(stringSlice(input, 1, -1));\n      if (!result) return INVALID_HOST;\n      this.host = result;\n      // opaque host\n    } else if (!this.isSpecial()) {\n      if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;\n      result = '';\n      codePoints = arrayFrom(input);\n      for (index = 0; index < codePoints.length; index++) {\n        result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n      }\n      this.host = result;\n    } else {\n      input = toASCII(input);\n      if (exec(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;\n      result = parseIPv4(input);\n      if (result === null) return INVALID_HOST;\n      this.host = result;\n    }\n  },\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\n  cannotHaveUsernamePasswordPort: function () {\n    return !this.host || this.cannotBeABaseURL || this.scheme == 'file';\n  },\n  // https://url.spec.whatwg.org/#include-credentials\n  includesCredentials: function () {\n    return this.username != '' || this.password != '';\n  },\n  // https://url.spec.whatwg.org/#is-special\n  isSpecial: function () {\n    return hasOwn(specialSchemes, this.scheme);\n  },\n  // https://url.spec.whatwg.org/#shorten-a-urls-path\n  shortenPath: function () {\n    var path = this.path;\n    var pathSize = path.length;\n    if (pathSize && (this.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n      path.length--;\n    }\n  },\n  // https://url.spec.whatwg.org/#concept-url-serializer\n  serialize: function () {\n    var url = this;\n    var scheme = url.scheme;\n    var username = url.username;\n    var password = url.password;\n    var host = url.host;\n    var port = url.port;\n    var path = url.path;\n    var query = url.query;\n    var fragment = url.fragment;\n    var output = scheme + ':';\n    if (host !== null) {\n      output += '//';\n      if (url.includesCredentials()) {\n        output += username + (password ? ':' + password : '') + '@';\n      }\n      output += serializeHost(host);\n      if (port !== null) output += ':' + port;\n    } else if (scheme == 'file') output += '//';\n    output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n    if (query !== null) output += '?' + query;\n    if (fragment !== null) output += '#' + fragment;\n    return output;\n  },\n  // https://url.spec.whatwg.org/#dom-url-href\n  setHref: function (href) {\n    var failure = this.parse(href);\n    if (failure) throw TypeError(failure);\n    this.searchParams.update();\n  },\n  // https://url.spec.whatwg.org/#dom-url-origin\n  getOrigin: function () {\n    var scheme = this.scheme;\n    var port = this.port;\n    if (scheme == 'blob') try {\n      return new URLConstructor(scheme.path[0]).origin;\n    } catch (error) {\n      return 'null';\n    }\n    if (scheme == 'file' || !this.isSpecial()) return 'null';\n    return scheme + '://' + serializeHost(this.host) + (port !== null ? ':' + port : '');\n  },\n  // https://url.spec.whatwg.org/#dom-url-protocol\n  getProtocol: function () {\n    return this.scheme + ':';\n  },\n  setProtocol: function (protocol) {\n    this.parse($toString(protocol) + ':', SCHEME_START);\n  },\n  // https://url.spec.whatwg.org/#dom-url-username\n  getUsername: function () {\n    return this.username;\n  },\n  setUsername: function (username) {\n    var codePoints = arrayFrom($toString(username));\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    this.username = '';\n    for (var i = 0; i < codePoints.length; i++) {\n      this.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n    }\n  },\n  // https://url.spec.whatwg.org/#dom-url-password\n  getPassword: function () {\n    return this.password;\n  },\n  setPassword: function (password) {\n    var codePoints = arrayFrom($toString(password));\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    this.password = '';\n    for (var i = 0; i < codePoints.length; i++) {\n      this.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n    }\n  },\n  // https://url.spec.whatwg.org/#dom-url-host\n  getHost: function () {\n    var host = this.host;\n    var port = this.port;\n    return host === null ? '' : port === null ? serializeHost(host) : serializeHost(host) + ':' + port;\n  },\n  setHost: function (host) {\n    if (this.cannotBeABaseURL) return;\n    this.parse(host, HOST);\n  },\n  // https://url.spec.whatwg.org/#dom-url-hostname\n  getHostname: function () {\n    var host = this.host;\n    return host === null ? '' : serializeHost(host);\n  },\n  setHostname: function (hostname) {\n    if (this.cannotBeABaseURL) return;\n    this.parse(hostname, HOSTNAME);\n  },\n  // https://url.spec.whatwg.org/#dom-url-port\n  getPort: function () {\n    var port = this.port;\n    return port === null ? '' : $toString(port);\n  },\n  setPort: function (port) {\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    port = $toString(port);\n    if (port == '') this.port = null;else this.parse(port, PORT);\n  },\n  // https://url.spec.whatwg.org/#dom-url-pathname\n  getPathname: function () {\n    var path = this.path;\n    return this.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n  },\n  setPathname: function (pathname) {\n    if (this.cannotBeABaseURL) return;\n    this.path = [];\n    this.parse(pathname, PATH_START);\n  },\n  // https://url.spec.whatwg.org/#dom-url-search\n  getSearch: function () {\n    var query = this.query;\n    return query ? '?' + query : '';\n  },\n  setSearch: function (search) {\n    search = $toString(search);\n    if (search == '') {\n      this.query = null;\n    } else {\n      if ('?' == charAt(search, 0)) search = stringSlice(search, 1);\n      this.query = '';\n      this.parse(search, QUERY);\n    }\n    this.searchParams.update();\n  },\n  // https://url.spec.whatwg.org/#dom-url-searchparams\n  getSearchParams: function () {\n    return this.searchParams.facade;\n  },\n  // https://url.spec.whatwg.org/#dom-url-hash\n  getHash: function () {\n    var fragment = this.fragment;\n    return fragment ? '#' + fragment : '';\n  },\n  setHash: function (hash) {\n    hash = $toString(hash);\n    if (hash == '') {\n      this.fragment = null;\n      return;\n    }\n    if ('#' == charAt(hash, 0)) hash = stringSlice(hash, 1);\n    this.fragment = '';\n    this.parse(hash, FRAGMENT);\n  },\n  update: function () {\n    this.query = this.searchParams.serialize() || null;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLPrototype);\n  var base = validateArgumentsLength(arguments.length, 1) > 1 ? arguments[1] : undefined;\n  var state = setInternalState(that, new URLState(url, false, base));\n  if (!DESCRIPTORS) {\n    that.href = state.serialize();\n    that.origin = state.getOrigin();\n    that.protocol = state.getProtocol();\n    that.username = state.getUsername();\n    that.password = state.getPassword();\n    that.host = state.getHost();\n    that.hostname = state.getHostname();\n    that.port = state.getPort();\n    that.pathname = state.getPathname();\n    that.search = state.getSearch();\n    that.searchParams = state.getSearchParams();\n    that.hash = state.getHash();\n  }\n};\nvar URLPrototype = URLConstructor.prototype;\nvar accessorDescriptor = function (getter, setter) {\n  return {\n    get: function () {\n      return getInternalURLState(this)[getter]();\n    },\n    set: setter && function (value) {\n      return getInternalURLState(this)[setter](value);\n    },\n    configurable: true,\n    enumerable: true\n  };\n};\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor('serialize', 'setHref'),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor('getOrigin'),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor('getProtocol', 'setProtocol'),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor('getUsername', 'setUsername'),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor('getPassword', 'setPassword'),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor('getHost', 'setHost'),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor('getHostname', 'setHostname'),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor('getPort', 'setPort'),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor('getPathname', 'setPathname'),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor('getSearch', 'setSearch'),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor('getSearchParams'),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor('getHash', 'setHash')\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return getInternalURLState(this).serialize();\n}, {\n  enumerable: true\n});\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return getInternalURLState(this).serialize();\n}, {\n  enumerable: true\n});\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', bind(nativeCreateObjectURL, NativeURL));\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', bind(nativeRevokeObjectURL, NativeURL));\n}\nsetToStringTag(URLConstructor, 'URL');\n$({\n  global: true,\n  forced: !USE_NATIVE_URL,\n  sham: !DESCRIPTORS\n}, {\n  URL: URLConstructor\n});","map":{"version":3,"names":["require","$","DESCRIPTORS","USE_NATIVE_URL","global","bind","uncurryThis","defineProperties","f","redefine","anInstance","hasOwn","assign","arrayFrom","arraySlice","codeAt","toASCII","$toString","setToStringTag","validateArgumentsLength","URLSearchParamsModule","InternalStateModule","setInternalState","set","getInternalURLState","getterFor","URLSearchParams","getInternalSearchParamsState","getState","NativeURL","URL","TypeError","parseInt","floor","Math","pow","charAt","exec","join","numberToString","toString","pop","push","replace","shift","split","stringSlice","slice","toLowerCase","unshift","INVALID_AUTHORITY","INVALID_SCHEME","INVALID_HOST","INVALID_PORT","ALPHA","ALPHANUMERIC","DIGIT","HEX_START","OCT","DEC","HEX","FORBIDDEN_HOST_CODE_POINT","FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT","LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE","TAB_AND_NEW_LINE","EOF","parseIPv4","input","parts","partsLength","numbers","index","part","radix","number","ipv4","length","parseIPv6","address","pieceIndex","compress","pointer","value","numbersSeen","ipv4Piece","swaps","swap","chr","findLongestZeroSequence","ipv6","maxIndex","maxLength","currStart","currLength","serializeHost","host","result","ignore0","C0ControlPercentEncodeSet","fragmentPercentEncodeSet","pathPercentEncodeSet","userinfoPercentEncodeSet","percentEncode","code","encodeURIComponent","specialSchemes","ftp","file","http","https","ws","wss","isWindowsDriveLetter","string","normalized","second","startsWithWindowsDriveLetter","third","isSingleDot","segment","isDoubleDot","SCHEME_START","SCHEME","NO_SCHEME","SPECIAL_RELATIVE_OR_AUTHORITY","PATH_OR_AUTHORITY","RELATIVE","RELATIVE_SLASH","SPECIAL_AUTHORITY_SLASHES","SPECIAL_AUTHORITY_IGNORE_SLASHES","AUTHORITY","HOST","HOSTNAME","PORT","FILE","FILE_SLASH","FILE_HOST","PATH_START","PATH","CANNOT_BE_A_BASE_URL_PATH","QUERY","FRAGMENT","URLState","url","isBase","base","urlString","baseState","failure","searchParams","parse","undefined","bindURL","prototype","type","stateOverride","state","buffer","seenAt","seenBracket","seenPasswordToken","codePoints","bufferCodePoints","scheme","username","password","port","path","query","fragment","cannotBeABaseURL","isSpecial","includesCredentials","i","codePoint","encodedCodePoints","parseHost","shortenPath","cannotHaveUsernamePasswordPort","pathSize","serialize","output","setHref","href","update","getOrigin","URLConstructor","origin","error","getProtocol","setProtocol","protocol","getUsername","setUsername","getPassword","setPassword","getHost","setHost","getHostname","setHostname","hostname","getPort","setPort","getPathname","setPathname","pathname","getSearch","setSearch","search","getSearchParams","facade","getHash","setHash","hash","that","URLPrototype","arguments","accessorDescriptor","getter","setter","get","configurable","enumerable","toJSON","nativeCreateObjectURL","createObjectURL","nativeRevokeObjectURL","revokeObjectURL","forced","sham"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/core-js-pure/modules/web.url.js"],"sourcesContent":["'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineProperties = require('../internals/object-define-properties').f;\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has-own-property');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar arraySlice = require('../internals/array-slice-simple');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar $toString = require('../internals/to-string');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\n\nvar NativeURL = global.URL;\nvar TypeError = global.TypeError;\nvar parseInt = global.parseInt;\nvar floor = Math.floor;\nvar pow = Math.pow;\nvar charAt = uncurryThis(''.charAt);\nvar exec = uncurryThis(/./.exec);\nvar join = uncurryThis([].join);\nvar numberToString = uncurryThis(1.0.toString);\nvar pop = uncurryThis([].pop);\nvar push = uncurryThis([].push);\nvar replace = uncurryThis(''.replace);\nvar shift = uncurryThis([].shift);\nvar split = uncurryThis(''.split);\nvar stringSlice = uncurryThis(''.slice);\nvar toLowerCase = uncurryThis(''.toLowerCase);\nvar unshift = uncurryThis([].unshift);\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[a-z]/i;\n// eslint-disable-next-line regexp/no-obscure-range -- safe\nvar ALPHANUMERIC = /[\\d+-.a-z]/i;\nvar DIGIT = /\\d/;\nvar HEX_START = /^0x/i;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\da-f]+$/i;\n/* eslint-disable regexp/no-control-character -- safe */\nvar FORBIDDEN_HOST_CODE_POINT = /[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/;\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\0\\t\\n\\r #/:<>?@[\\\\\\]^|]/;\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u0020]+|[\\u0000-\\u0020]+$/g;\nvar TAB_AND_NEW_LINE = /[\\t\\n\\r]/g;\n/* eslint-enable regexp/no-control-character -- safe */\nvar EOF;\n\n// https://url.spec.whatwg.org/#ipv4-number-parser\nvar parseIPv4 = function (input) {\n  var parts = split(input, '.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.length--;\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && charAt(part, 0) == '0') {\n      radix = exec(HEX_START, part) ? 16 : 8;\n      part = stringSlice(part, radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!exec(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part)) return input;\n      number = parseInt(part, radix);\n    }\n    push(numbers, number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = pop(numbers);\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// https://url.spec.whatwg.org/#concept-ipv6-parser\n// eslint-disable-next-line max-statements -- TODO\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var chr = function () {\n    return charAt(input, pointer);\n  };\n\n  if (chr() == ':') {\n    if (charAt(input, 1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (chr()) {\n    if (pieceIndex == 8) return;\n    if (chr() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && exec(HEX, chr())) {\n      value = value * 16 + parseInt(chr(), 16);\n      pointer++;\n      length++;\n    }\n    if (chr() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (chr()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (chr() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!exec(DIGIT, chr())) return;\n        while (exec(DIGIT, chr())) {\n          number = parseInt(chr(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (chr() == ':') {\n      pointer++;\n      if (!chr()) return;\n    } else if (chr()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\n// https://url.spec.whatwg.org/#host-serializing\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      unshift(result, host % 256);\n      host = floor(host / 256);\n    } return join(result, '.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += numberToString(host[index], 16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (chr, set) {\n  var code = codeAt(chr, 0);\n  return code > 0x20 && code < 0x7F && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);\n};\n\n// https://url.spec.whatwg.org/#special-scheme\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\n// https://url.spec.whatwg.org/#windows-drive-letter\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && exec(ALPHA, charAt(string, 0))\n    && ((second = charAt(string, 1)) == ':' || (!normalized && second == '|'));\n};\n\n// https://url.spec.whatwg.org/#start-with-a-windows-drive-letter\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (\n    string.length == 2 ||\n    ((third = charAt(string, 2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\n// https://url.spec.whatwg.org/#single-dot-path-segment\nvar isSingleDot = function (segment) {\n  return segment === '.' || toLowerCase(segment) === '%2e';\n};\n\n// https://url.spec.whatwg.org/#double-dot-path-segment\nvar isDoubleDot = function (segment) {\n  segment = toLowerCase(segment);\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\nvar URLState = function (url, isBase, base) {\n  var urlString = $toString(url);\n  var baseState, failure, searchParams;\n  if (isBase) {\n    failure = this.parse(urlString);\n    if (failure) throw TypeError(failure);\n    this.searchParams = null;\n  } else {\n    if (base !== undefined) baseState = new URLState(base, true);\n    failure = this.parse(urlString, null, baseState);\n    if (failure) throw TypeError(failure);\n    searchParams = getInternalSearchParamsState(new URLSearchParams());\n    searchParams.bindURL(this);\n    this.searchParams = searchParams;\n  }\n};\n\nURLState.prototype = {\n  type: 'URL',\n  // https://url.spec.whatwg.org/#url-parsing\n  // eslint-disable-next-line max-statements -- TODO\n  parse: function (input, stateOverride, base) {\n    var url = this;\n    var state = stateOverride || SCHEME_START;\n    var pointer = 0;\n    var buffer = '';\n    var seenAt = false;\n    var seenBracket = false;\n    var seenPasswordToken = false;\n    var codePoints, chr, bufferCodePoints, failure;\n\n    input = $toString(input);\n\n    if (!stateOverride) {\n      url.scheme = '';\n      url.username = '';\n      url.password = '';\n      url.host = null;\n      url.port = null;\n      url.path = [];\n      url.query = null;\n      url.fragment = null;\n      url.cannotBeABaseURL = false;\n      input = replace(input, LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n    }\n\n    input = replace(input, TAB_AND_NEW_LINE, '');\n\n    codePoints = arrayFrom(input);\n\n    while (pointer <= codePoints.length) {\n      chr = codePoints[pointer];\n      switch (state) {\n        case SCHEME_START:\n          if (chr && exec(ALPHA, chr)) {\n            buffer += toLowerCase(chr);\n            state = SCHEME;\n          } else if (!stateOverride) {\n            state = NO_SCHEME;\n            continue;\n          } else return INVALID_SCHEME;\n          break;\n\n        case SCHEME:\n          if (chr && (exec(ALPHANUMERIC, chr) || chr == '+' || chr == '-' || chr == '.')) {\n            buffer += toLowerCase(chr);\n          } else if (chr == ':') {\n            if (stateOverride && (\n              (url.isSpecial() != hasOwn(specialSchemes, buffer)) ||\n              (buffer == 'file' && (url.includesCredentials() || url.port !== null)) ||\n              (url.scheme == 'file' && !url.host)\n            )) return;\n            url.scheme = buffer;\n            if (stateOverride) {\n              if (url.isSpecial() && specialSchemes[url.scheme] == url.port) url.port = null;\n              return;\n            }\n            buffer = '';\n            if (url.scheme == 'file') {\n              state = FILE;\n            } else if (url.isSpecial() && base && base.scheme == url.scheme) {\n              state = SPECIAL_RELATIVE_OR_AUTHORITY;\n            } else if (url.isSpecial()) {\n              state = SPECIAL_AUTHORITY_SLASHES;\n            } else if (codePoints[pointer + 1] == '/') {\n              state = PATH_OR_AUTHORITY;\n              pointer++;\n            } else {\n              url.cannotBeABaseURL = true;\n              push(url.path, '');\n              state = CANNOT_BE_A_BASE_URL_PATH;\n            }\n          } else if (!stateOverride) {\n            buffer = '';\n            state = NO_SCHEME;\n            pointer = 0;\n            continue;\n          } else return INVALID_SCHEME;\n          break;\n\n        case NO_SCHEME:\n          if (!base || (base.cannotBeABaseURL && chr != '#')) return INVALID_SCHEME;\n          if (base.cannotBeABaseURL && chr == '#') {\n            url.scheme = base.scheme;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n            url.fragment = '';\n            url.cannotBeABaseURL = true;\n            state = FRAGMENT;\n            break;\n          }\n          state = base.scheme == 'file' ? FILE : RELATIVE;\n          continue;\n\n        case SPECIAL_RELATIVE_OR_AUTHORITY:\n          if (chr == '/' && codePoints[pointer + 1] == '/') {\n            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n            pointer++;\n          } else {\n            state = RELATIVE;\n            continue;\n          } break;\n\n        case PATH_OR_AUTHORITY:\n          if (chr == '/') {\n            state = AUTHORITY;\n            break;\n          } else {\n            state = PATH;\n            continue;\n          }\n\n        case RELATIVE:\n          url.scheme = base.scheme;\n          if (chr == EOF) {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n          } else if (chr == '/' || (chr == '\\\\' && url.isSpecial())) {\n            state = RELATIVE_SLASH;\n          } else if (chr == '?') {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            url.path = arraySlice(base.path);\n            url.path.length--;\n            state = PATH;\n            continue;\n          } break;\n\n        case RELATIVE_SLASH:\n          if (url.isSpecial() && (chr == '/' || chr == '\\\\')) {\n            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          } else if (chr == '/') {\n            state = AUTHORITY;\n          } else {\n            url.username = base.username;\n            url.password = base.password;\n            url.host = base.host;\n            url.port = base.port;\n            state = PATH;\n            continue;\n          } break;\n\n        case SPECIAL_AUTHORITY_SLASHES:\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          if (chr != '/' || charAt(buffer, pointer + 1) != '/') continue;\n          pointer++;\n          break;\n\n        case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n          if (chr != '/' && chr != '\\\\') {\n            state = AUTHORITY;\n            continue;\n          } break;\n\n        case AUTHORITY:\n          if (chr == '@') {\n            if (seenAt) buffer = '%40' + buffer;\n            seenAt = true;\n            bufferCodePoints = arrayFrom(buffer);\n            for (var i = 0; i < bufferCodePoints.length; i++) {\n              var codePoint = bufferCodePoints[i];\n              if (codePoint == ':' && !seenPasswordToken) {\n                seenPasswordToken = true;\n                continue;\n              }\n              var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n              if (seenPasswordToken) url.password += encodedCodePoints;\n              else url.username += encodedCodePoints;\n            }\n            buffer = '';\n          } else if (\n            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||\n            (chr == '\\\\' && url.isSpecial())\n          ) {\n            if (seenAt && buffer == '') return INVALID_AUTHORITY;\n            pointer -= arrayFrom(buffer).length + 1;\n            buffer = '';\n            state = HOST;\n          } else buffer += chr;\n          break;\n\n        case HOST:\n        case HOSTNAME:\n          if (stateOverride && url.scheme == 'file') {\n            state = FILE_HOST;\n            continue;\n          } else if (chr == ':' && !seenBracket) {\n            if (buffer == '') return INVALID_HOST;\n            failure = url.parseHost(buffer);\n            if (failure) return failure;\n            buffer = '';\n            state = PORT;\n            if (stateOverride == HOSTNAME) return;\n          } else if (\n            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||\n            (chr == '\\\\' && url.isSpecial())\n          ) {\n            if (url.isSpecial() && buffer == '') return INVALID_HOST;\n            if (stateOverride && buffer == '' && (url.includesCredentials() || url.port !== null)) return;\n            failure = url.parseHost(buffer);\n            if (failure) return failure;\n            buffer = '';\n            state = PATH_START;\n            if (stateOverride) return;\n            continue;\n          } else {\n            if (chr == '[') seenBracket = true;\n            else if (chr == ']') seenBracket = false;\n            buffer += chr;\n          } break;\n\n        case PORT:\n          if (exec(DIGIT, chr)) {\n            buffer += chr;\n          } else if (\n            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||\n            (chr == '\\\\' && url.isSpecial()) ||\n            stateOverride\n          ) {\n            if (buffer != '') {\n              var port = parseInt(buffer, 10);\n              if (port > 0xFFFF) return INVALID_PORT;\n              url.port = (url.isSpecial() && port === specialSchemes[url.scheme]) ? null : port;\n              buffer = '';\n            }\n            if (stateOverride) return;\n            state = PATH_START;\n            continue;\n          } else return INVALID_PORT;\n          break;\n\n        case FILE:\n          url.scheme = 'file';\n          if (chr == '/' || chr == '\\\\') state = FILE_SLASH;\n          else if (base && base.scheme == 'file') {\n            if (chr == EOF) {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = base.query;\n            } else if (chr == '?') {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = '';\n              state = QUERY;\n            } else if (chr == '#') {\n              url.host = base.host;\n              url.path = arraySlice(base.path);\n              url.query = base.query;\n              url.fragment = '';\n              state = FRAGMENT;\n            } else {\n              if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n                url.host = base.host;\n                url.path = arraySlice(base.path);\n                url.shortenPath();\n              }\n              state = PATH;\n              continue;\n            }\n          } else {\n            state = PATH;\n            continue;\n          } break;\n\n        case FILE_SLASH:\n          if (chr == '/' || chr == '\\\\') {\n            state = FILE_HOST;\n            break;\n          }\n          if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {\n            if (isWindowsDriveLetter(base.path[0], true)) push(url.path, base.path[0]);\n            else url.host = base.host;\n          }\n          state = PATH;\n          continue;\n\n        case FILE_HOST:\n          if (chr == EOF || chr == '/' || chr == '\\\\' || chr == '?' || chr == '#') {\n            if (!stateOverride && isWindowsDriveLetter(buffer)) {\n              state = PATH;\n            } else if (buffer == '') {\n              url.host = '';\n              if (stateOverride) return;\n              state = PATH_START;\n            } else {\n              failure = url.parseHost(buffer);\n              if (failure) return failure;\n              if (url.host == 'localhost') url.host = '';\n              if (stateOverride) return;\n              buffer = '';\n              state = PATH_START;\n            } continue;\n          } else buffer += chr;\n          break;\n\n        case PATH_START:\n          if (url.isSpecial()) {\n            state = PATH;\n            if (chr != '/' && chr != '\\\\') continue;\n          } else if (!stateOverride && chr == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (!stateOverride && chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            state = PATH;\n            if (chr != '/') continue;\n          } break;\n\n        case PATH:\n          if (\n            chr == EOF || chr == '/' ||\n            (chr == '\\\\' && url.isSpecial()) ||\n            (!stateOverride && (chr == '?' || chr == '#'))\n          ) {\n            if (isDoubleDot(buffer)) {\n              url.shortenPath();\n              if (chr != '/' && !(chr == '\\\\' && url.isSpecial())) {\n                push(url.path, '');\n              }\n            } else if (isSingleDot(buffer)) {\n              if (chr != '/' && !(chr == '\\\\' && url.isSpecial())) {\n                push(url.path, '');\n              }\n            } else {\n              if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n                if (url.host) url.host = '';\n                buffer = charAt(buffer, 0) + ':'; // normalize windows drive letter\n              }\n              push(url.path, buffer);\n            }\n            buffer = '';\n            if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {\n              while (url.path.length > 1 && url.path[0] === '') {\n                shift(url.path);\n              }\n            }\n            if (chr == '?') {\n              url.query = '';\n              state = QUERY;\n            } else if (chr == '#') {\n              url.fragment = '';\n              state = FRAGMENT;\n            }\n          } else {\n            buffer += percentEncode(chr, pathPercentEncodeSet);\n          } break;\n\n        case CANNOT_BE_A_BASE_URL_PATH:\n          if (chr == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);\n          } break;\n\n        case QUERY:\n          if (!stateOverride && chr == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          } else if (chr != EOF) {\n            if (chr == \"'\" && url.isSpecial()) url.query += '%27';\n            else if (chr == '#') url.query += '%23';\n            else url.query += percentEncode(chr, C0ControlPercentEncodeSet);\n          } break;\n\n        case FRAGMENT:\n          if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);\n          break;\n      }\n\n      pointer++;\n    }\n  },\n  // https://url.spec.whatwg.org/#host-parsing\n  parseHost: function (input) {\n    var result, codePoints, index;\n    if (charAt(input, 0) == '[') {\n      if (charAt(input, input.length - 1) != ']') return INVALID_HOST;\n      result = parseIPv6(stringSlice(input, 1, -1));\n      if (!result) return INVALID_HOST;\n      this.host = result;\n    // opaque host\n    } else if (!this.isSpecial()) {\n      if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;\n      result = '';\n      codePoints = arrayFrom(input);\n      for (index = 0; index < codePoints.length; index++) {\n        result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n      }\n      this.host = result;\n    } else {\n      input = toASCII(input);\n      if (exec(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;\n      result = parseIPv4(input);\n      if (result === null) return INVALID_HOST;\n      this.host = result;\n    }\n  },\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\n  cannotHaveUsernamePasswordPort: function () {\n    return !this.host || this.cannotBeABaseURL || this.scheme == 'file';\n  },\n  // https://url.spec.whatwg.org/#include-credentials\n  includesCredentials: function () {\n    return this.username != '' || this.password != '';\n  },\n  // https://url.spec.whatwg.org/#is-special\n  isSpecial: function () {\n    return hasOwn(specialSchemes, this.scheme);\n  },\n  // https://url.spec.whatwg.org/#shorten-a-urls-path\n  shortenPath: function () {\n    var path = this.path;\n    var pathSize = path.length;\n    if (pathSize && (this.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n      path.length--;\n    }\n  },\n  // https://url.spec.whatwg.org/#concept-url-serializer\n  serialize: function () {\n    var url = this;\n    var scheme = url.scheme;\n    var username = url.username;\n    var password = url.password;\n    var host = url.host;\n    var port = url.port;\n    var path = url.path;\n    var query = url.query;\n    var fragment = url.fragment;\n    var output = scheme + ':';\n    if (host !== null) {\n      output += '//';\n      if (url.includesCredentials()) {\n        output += username + (password ? ':' + password : '') + '@';\n      }\n      output += serializeHost(host);\n      if (port !== null) output += ':' + port;\n    } else if (scheme == 'file') output += '//';\n    output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n    if (query !== null) output += '?' + query;\n    if (fragment !== null) output += '#' + fragment;\n    return output;\n  },\n  // https://url.spec.whatwg.org/#dom-url-href\n  setHref: function (href) {\n    var failure = this.parse(href);\n    if (failure) throw TypeError(failure);\n    this.searchParams.update();\n  },\n  // https://url.spec.whatwg.org/#dom-url-origin\n  getOrigin: function () {\n    var scheme = this.scheme;\n    var port = this.port;\n    if (scheme == 'blob') try {\n      return new URLConstructor(scheme.path[0]).origin;\n    } catch (error) {\n      return 'null';\n    }\n    if (scheme == 'file' || !this.isSpecial()) return 'null';\n    return scheme + '://' + serializeHost(this.host) + (port !== null ? ':' + port : '');\n  },\n  // https://url.spec.whatwg.org/#dom-url-protocol\n  getProtocol: function () {\n    return this.scheme + ':';\n  },\n  setProtocol: function (protocol) {\n    this.parse($toString(protocol) + ':', SCHEME_START);\n  },\n  // https://url.spec.whatwg.org/#dom-url-username\n  getUsername: function () {\n    return this.username;\n  },\n  setUsername: function (username) {\n    var codePoints = arrayFrom($toString(username));\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    this.username = '';\n    for (var i = 0; i < codePoints.length; i++) {\n      this.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n    }\n  },\n  // https://url.spec.whatwg.org/#dom-url-password\n  getPassword: function () {\n    return this.password;\n  },\n  setPassword: function (password) {\n    var codePoints = arrayFrom($toString(password));\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    this.password = '';\n    for (var i = 0; i < codePoints.length; i++) {\n      this.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n    }\n  },\n  // https://url.spec.whatwg.org/#dom-url-host\n  getHost: function () {\n    var host = this.host;\n    var port = this.port;\n    return host === null ? ''\n      : port === null ? serializeHost(host)\n      : serializeHost(host) + ':' + port;\n  },\n  setHost: function (host) {\n    if (this.cannotBeABaseURL) return;\n    this.parse(host, HOST);\n  },\n  // https://url.spec.whatwg.org/#dom-url-hostname\n  getHostname: function () {\n    var host = this.host;\n    return host === null ? '' : serializeHost(host);\n  },\n  setHostname: function (hostname) {\n    if (this.cannotBeABaseURL) return;\n    this.parse(hostname, HOSTNAME);\n  },\n  // https://url.spec.whatwg.org/#dom-url-port\n  getPort: function () {\n    var port = this.port;\n    return port === null ? '' : $toString(port);\n  },\n  setPort: function (port) {\n    if (this.cannotHaveUsernamePasswordPort()) return;\n    port = $toString(port);\n    if (port == '') this.port = null;\n    else this.parse(port, PORT);\n  },\n  // https://url.spec.whatwg.org/#dom-url-pathname\n  getPathname: function () {\n    var path = this.path;\n    return this.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';\n  },\n  setPathname: function (pathname) {\n    if (this.cannotBeABaseURL) return;\n    this.path = [];\n    this.parse(pathname, PATH_START);\n  },\n  // https://url.spec.whatwg.org/#dom-url-search\n  getSearch: function () {\n    var query = this.query;\n    return query ? '?' + query : '';\n  },\n  setSearch: function (search) {\n    search = $toString(search);\n    if (search == '') {\n      this.query = null;\n    } else {\n      if ('?' == charAt(search, 0)) search = stringSlice(search, 1);\n      this.query = '';\n      this.parse(search, QUERY);\n    }\n    this.searchParams.update();\n  },\n  // https://url.spec.whatwg.org/#dom-url-searchparams\n  getSearchParams: function () {\n    return this.searchParams.facade;\n  },\n  // https://url.spec.whatwg.org/#dom-url-hash\n  getHash: function () {\n    var fragment = this.fragment;\n    return fragment ? '#' + fragment : '';\n  },\n  setHash: function (hash) {\n    hash = $toString(hash);\n    if (hash == '') {\n      this.fragment = null;\n      return;\n    }\n    if ('#' == charAt(hash, 0)) hash = stringSlice(hash, 1);\n    this.fragment = '';\n    this.parse(hash, FRAGMENT);\n  },\n  update: function () {\n    this.query = this.searchParams.serialize() || null;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLPrototype);\n  var base = validateArgumentsLength(arguments.length, 1) > 1 ? arguments[1] : undefined;\n  var state = setInternalState(that, new URLState(url, false, base));\n  if (!DESCRIPTORS) {\n    that.href = state.serialize();\n    that.origin = state.getOrigin();\n    that.protocol = state.getProtocol();\n    that.username = state.getUsername();\n    that.password = state.getPassword();\n    that.host = state.getHost();\n    that.hostname = state.getHostname();\n    that.port = state.getPort();\n    that.pathname = state.getPathname();\n    that.search = state.getSearch();\n    that.searchParams = state.getSearchParams();\n    that.hash = state.getHash();\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar accessorDescriptor = function (getter, setter) {\n  return {\n    get: function () {\n      return getInternalURLState(this)[getter]();\n    },\n    set: setter && function (value) {\n      return getInternalURLState(this)[setter](value);\n    },\n    configurable: true,\n    enumerable: true\n  };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor('serialize', 'setHref'),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor('getOrigin'),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor('getProtocol', 'setProtocol'),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor('getUsername', 'setUsername'),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor('getPassword', 'setPassword'),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor('getHost', 'setHost'),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor('getHostname', 'setHostname'),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor('getPort', 'setPort'),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor('getPathname', 'setPathname'),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor('getSearch', 'setSearch'),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor('getSearchParams'),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor('getHash', 'setHash')\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return getInternalURLState(this).serialize();\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return getInternalURLState(this).serialize();\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', bind(nativeCreateObjectURL, NativeURL));\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', bind(nativeRevokeObjectURL, NativeURL));\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}