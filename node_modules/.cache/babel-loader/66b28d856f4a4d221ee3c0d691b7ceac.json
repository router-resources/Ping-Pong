{"ast":null,"code":"import * as encoding from \"@walletconnect/encoding\";\nimport { signingMethods, reservedEvents } from \"./constants\";\nexport function isEmptyString(value) {\n  return value === \"\" || typeof value === \"string\" && value.trim() === \"\";\n}\nexport function isEmptyArray(array) {\n  return !(array && array.length);\n}\nexport function isBuffer(val) {\n  return encoding.isBuffer(val);\n}\nexport function isTypedArray(val) {\n  return encoding.isTypedArray(val);\n}\nexport function isArrayBuffer(val) {\n  return encoding.isArrayBuffer(val);\n}\nexport function getType(val) {\n  return encoding.getType(val);\n}\nexport function getEncoding(val) {\n  return encoding.getEncoding(val);\n}\nexport function isHexString(value, length) {\n  return encoding.isHexString(value, length);\n}\nexport function isJsonRpcSubscription(object) {\n  return typeof object.params === \"object\";\n}\nexport function isJsonRpcRequest(object) {\n  return typeof object.method !== \"undefined\";\n}\nexport function isJsonRpcResponseSuccess(object) {\n  return typeof object.result !== \"undefined\";\n}\nexport function isJsonRpcResponseError(object) {\n  return typeof object.error !== \"undefined\";\n}\nexport function isInternalEvent(object) {\n  return typeof object.event !== \"undefined\";\n}\nexport function isReservedEvent(event) {\n  return reservedEvents.includes(event) || event.startsWith(\"wc_\");\n}\nexport function isSilentPayload(request) {\n  if (request.method.startsWith(\"wc_\")) {\n    return true;\n  }\n  if (signingMethods.includes(request.method)) {\n    return false;\n  }\n  return true;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,yBAAyB;AASnD,SAASC,cAAc,EAAEC,cAAc,QAAQ,aAAa;AAE5D,OAAM,SAAUC,aAAa,CAACC,KAAa;EACzC,OAAOA,KAAK,KAAK,EAAE,IAAK,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACC,IAAI,EAAE,KAAK,EAAG;AAC3E;AAEA,OAAM,SAAUC,YAAY,CAACC,KAAY;EACvC,OAAO,EAAEA,KAAK,IAAIA,KAAK,CAACC,MAAM,CAAC;AACjC;AAEA,OAAM,SAAUC,QAAQ,CAACC,GAAQ;EAC/B,OAAOV,QAAQ,CAACS,QAAQ,CAACC,GAAG,CAAC;AAC/B;AAEA,OAAM,SAAUC,YAAY,CAACD,GAAQ;EACnC,OAAOV,QAAQ,CAACW,YAAY,CAACD,GAAG,CAAC;AACnC;AAEA,OAAM,SAAUE,aAAa,CAACF,GAAQ;EACpC,OAAOV,QAAQ,CAACY,aAAa,CAACF,GAAG,CAAC;AACpC;AAEA,OAAM,SAAUG,OAAO,CAACH,GAAQ;EAC9B,OAAOV,QAAQ,CAACa,OAAO,CAACH,GAAG,CAAC;AAC9B;AAEA,OAAM,SAAUI,WAAW,CAACJ,GAAQ;EAClC,OAAOV,QAAQ,CAACc,WAAW,CAACJ,GAAG,CAAC;AAClC;AAEA,OAAM,SAAUK,WAAW,CAACX,KAAU,EAAEI,MAAe;EACrD,OAAOR,QAAQ,CAACe,WAAW,CAACX,KAAK,EAAEI,MAAM,CAAC;AAC5C;AAEA,OAAM,SAAUQ,qBAAqB,CAACC,MAAW;EAC/C,OAAO,OAAOA,MAAM,CAACC,MAAM,KAAK,QAAQ;AAC1C;AAEA,OAAM,SAAUC,gBAAgB,CAACF,MAAW;EAC1C,OAAO,OAAOA,MAAM,CAACG,MAAM,KAAK,WAAW;AAC7C;AAEA,OAAM,SAAUC,wBAAwB,CAACJ,MAAW;EAClD,OAAO,OAAOA,MAAM,CAACK,MAAM,KAAK,WAAW;AAC7C;AAEA,OAAM,SAAUC,sBAAsB,CAACN,MAAW;EAChD,OAAO,OAAOA,MAAM,CAACO,KAAK,KAAK,WAAW;AAC5C;AAEA,OAAM,SAAUC,eAAe,CAACR,MAAW;EACzC,OAAO,OAAOA,MAAM,CAACS,KAAK,KAAK,WAAW;AAC5C;AAEA,OAAM,SAAUC,eAAe,CAACD,KAAa;EAC3C,OAAOxB,cAAc,CAAC0B,QAAQ,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,UAAU,CAAC,KAAK,CAAC;AAClE;AAEA,OAAM,SAAUC,eAAe,CAACC,OAAwB;EACtD,IAAIA,OAAO,CAACX,MAAM,CAACS,UAAU,CAAC,KAAK,CAAC,EAAE;IACpC,OAAO,IAAI;;EAEb,IAAI5B,cAAc,CAAC2B,QAAQ,CAACG,OAAO,CAACX,MAAM,CAAC,EAAE;IAC3C,OAAO,KAAK;;EAEd,OAAO,IAAI;AACb","names":["encoding","signingMethods","reservedEvents","isEmptyString","value","trim","isEmptyArray","array","length","isBuffer","val","isTypedArray","isArrayBuffer","getType","getEncoding","isHexString","isJsonRpcSubscription","object","params","isJsonRpcRequest","method","isJsonRpcResponseSuccess","result","isJsonRpcResponseError","error","isInternalEvent","event","isReservedEvent","includes","startsWith","isSilentPayload","request"],"sourceRoot":"","sources":["../../src/validators.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}