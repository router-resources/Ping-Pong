{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.send = send;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/**\n * Contains functions to deal with Push in Parse.\n *\n * @class Parse.Push\n * @static\n * @hideconstructor\n */\n\n/**\n * Sends a push notification.\n * **Available in Cloud Code only.**\n *\n * See {@link https://docs.parseplatform.org/js/guide/#push-notifications Push Notification Guide}\n *\n * @function send\n * @name Parse.Push.send\n * @param {object} data -  The data of the push notification.  Valid fields\n * are:\n *   <ol>\n *     <li>channels - An Array of channels to push to.</li>\n *     <li>push_time - A Date object for when to send the push.</li>\n *     <li>expiration_time -  A Date object for when to expire\n *         the push.</li>\n *     <li>expiration_interval - The seconds from now to expire the push.</li>\n *     <li>where - A Parse.Query over Parse.Installation that is used to match\n *         a set of installations to push to.</li>\n *     <li>data - The data to send as part of the push.</li>\n *   <ol>\n * @returns {Promise} A promise that is fulfilled when the push request\n *     completes.\n */\n\nfunction send(data\n/*: PushData*/) /*: Promise*/\n{\n  if (data.where && data.where instanceof _ParseQuery.default) {\n    data.where = data.where.toJSON().where;\n  }\n  if (data.push_time && (0, _typeof2.default)(data.push_time) === 'object') {\n    data.push_time = data.push_time.toJSON();\n  }\n  if (data.expiration_time && (0, _typeof2.default)(data.expiration_time) === 'object') {\n    data.expiration_time = data.expiration_time.toJSON();\n  }\n  if (data.expiration_time && data.expiration_interval) {\n    throw new Error('expiration_time and expiration_interval cannot both be set.');\n  }\n  return _CoreManager.default.getPushController().send(data);\n}\nvar DefaultController = {\n  send: function (data\n  /*: PushData*/) {\n    return _CoreManager.default.getRESTController().request('POST', 'push', data, {\n      useMasterKey: true\n    });\n  }\n};\n_CoreManager.default.setPushController(DefaultController);","map":{"version":3,"names":["_Object$defineProperty","require","_interopRequireDefault","exports","value","send","_typeof2","_CoreManager","_ParseQuery","data","where","default","toJSON","push_time","expiration_time","expiration_interval","Error","getPushController","DefaultController","getRESTController","request","useMasterKey","setPushController"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/moralis/lib/browser/Push.js"],"sourcesContent":["\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.send = send;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/**\n * Contains functions to deal with Push in Parse.\n *\n * @class Parse.Push\n * @static\n * @hideconstructor\n */\n\n/**\n * Sends a push notification.\n * **Available in Cloud Code only.**\n *\n * See {@link https://docs.parseplatform.org/js/guide/#push-notifications Push Notification Guide}\n *\n * @function send\n * @name Parse.Push.send\n * @param {object} data -  The data of the push notification.  Valid fields\n * are:\n *   <ol>\n *     <li>channels - An Array of channels to push to.</li>\n *     <li>push_time - A Date object for when to send the push.</li>\n *     <li>expiration_time -  A Date object for when to expire\n *         the push.</li>\n *     <li>expiration_interval - The seconds from now to expire the push.</li>\n *     <li>where - A Parse.Query over Parse.Installation that is used to match\n *         a set of installations to push to.</li>\n *     <li>data - The data to send as part of the push.</li>\n *   <ol>\n * @returns {Promise} A promise that is fulfilled when the push request\n *     completes.\n */\n\n\nfunction send(data\n/*: PushData*/\n)\n/*: Promise*/\n{\n  if (data.where && data.where instanceof _ParseQuery.default) {\n    data.where = data.where.toJSON().where;\n  }\n\n  if (data.push_time && (0, _typeof2.default)(data.push_time) === 'object') {\n    data.push_time = data.push_time.toJSON();\n  }\n\n  if (data.expiration_time && (0, _typeof2.default)(data.expiration_time) === 'object') {\n    data.expiration_time = data.expiration_time.toJSON();\n  }\n\n  if (data.expiration_time && data.expiration_interval) {\n    throw new Error('expiration_time and expiration_interval cannot both be set.');\n  }\n\n  return _CoreManager.default.getPushController().send(data);\n}\n\nvar DefaultController = {\n  send: function (data\n  /*: PushData*/\n  ) {\n    return _CoreManager.default.getRESTController().request('POST', 'push', data, {\n      useMasterKey: true\n    });\n  }\n};\n\n_CoreManager.default.setPushController(DefaultController);"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8DAA8D,CAAC;AAEpG,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,sDAAsD,CAAC;AAE5FD,sBAAsB,CAACG,OAAO,EAAE,YAAY,EAAE;EAC5CC,KAAK,EAAE;AACT,CAAC,CAAC;AAEFD,OAAO,CAACE,IAAI,GAAGA,IAAI;AAEnB,IAAIC,QAAQ,GAAGJ,sBAAsB,CAACD,OAAO,CAAC,uCAAuC,CAAC,CAAC;AAEvF,IAAIM,YAAY,GAAGL,sBAAsB,CAACD,OAAO,CAAC,eAAe,CAAC,CAAC;AAEnE,IAAIO,WAAW,GAAGN,sBAAsB,CAACD,OAAO,CAAC,cAAc,CAAC,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASI,IAAI,CAACI;AACd,gBAEA;AACA;EACE,IAAIA,IAAI,CAACC,KAAK,IAAID,IAAI,CAACC,KAAK,YAAYF,WAAW,CAACG,OAAO,EAAE;IAC3DF,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACE,MAAM,EAAE,CAACF,KAAK;EACxC;EAEA,IAAID,IAAI,CAACI,SAAS,IAAI,CAAC,CAAC,EAAEP,QAAQ,CAACK,OAAO,EAAEF,IAAI,CAACI,SAAS,CAAC,KAAK,QAAQ,EAAE;IACxEJ,IAAI,CAACI,SAAS,GAAGJ,IAAI,CAACI,SAAS,CAACD,MAAM,EAAE;EAC1C;EAEA,IAAIH,IAAI,CAACK,eAAe,IAAI,CAAC,CAAC,EAAER,QAAQ,CAACK,OAAO,EAAEF,IAAI,CAACK,eAAe,CAAC,KAAK,QAAQ,EAAE;IACpFL,IAAI,CAACK,eAAe,GAAGL,IAAI,CAACK,eAAe,CAACF,MAAM,EAAE;EACtD;EAEA,IAAIH,IAAI,CAACK,eAAe,IAAIL,IAAI,CAACM,mBAAmB,EAAE;IACpD,MAAM,IAAIC,KAAK,CAAC,6DAA6D,CAAC;EAChF;EAEA,OAAOT,YAAY,CAACI,OAAO,CAACM,iBAAiB,EAAE,CAACZ,IAAI,CAACI,IAAI,CAAC;AAC5D;AAEA,IAAIS,iBAAiB,GAAG;EACtBb,IAAI,EAAE,UAAUI;EAChB,gBACE;IACA,OAAOF,YAAY,CAACI,OAAO,CAACQ,iBAAiB,EAAE,CAACC,OAAO,CAAC,MAAM,EAAE,MAAM,EAAEX,IAAI,EAAE;MAC5EY,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ;AACF,CAAC;AAEDd,YAAY,CAACI,OAAO,CAACW,iBAAiB,CAACJ,iBAAiB,CAAC"},"metadata":{},"sourceType":"script"}