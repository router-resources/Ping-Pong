{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\nvar _Array$isArray = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/map\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"));\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/values\"));\nvar _setTimeout2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-timeout\"));\nvar _bind = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/bind\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _EventEmitter2 = _interopRequireDefault(require(\"./EventEmitter\"));\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\nvar _LiveQuerySubscription = _interopRequireDefault(require(\"./LiveQuerySubscription\"));\nvar _promiseUtils = require(\"./promiseUtils\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = _sliceInstanceProperty(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // The LiveQuery client inner state\n\nvar CLIENT_STATE = {\n  INITIALIZED: 'initialized',\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  CLOSED: 'closed',\n  RECONNECTING: 'reconnecting',\n  DISCONNECTED: 'disconnected'\n}; // The event type the LiveQuery client should sent to server\n\nvar OP_TYPES = {\n  CONNECT: 'connect',\n  SUBSCRIBE: 'subscribe',\n  UNSUBSCRIBE: 'unsubscribe',\n  ERROR: 'error'\n}; // The event we get back from LiveQuery server\n\nvar OP_EVENTS = {\n  CONNECTED: 'connected',\n  SUBSCRIBED: 'subscribed',\n  UNSUBSCRIBED: 'unsubscribed',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n}; // The event the LiveQuery client should emit\n\nvar CLIENT_EMMITER_TYPES = {\n  CLOSE: 'close',\n  ERROR: 'error',\n  OPEN: 'open'\n}; // The event the LiveQuery subscription should emit\n\nvar SUBSCRIPTION_EMMITER_TYPES = {\n  OPEN: 'open',\n  CLOSE: 'close',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n};\nvar generateInterval = function (k) {\n  return Math.random() * Math.min(30, Math.pow(2, k) - 1) * 1000;\n};\n/**\n * Creates a new LiveQueryClient.\n * Extends events.EventEmitter\n * <a href=\"https://nodejs.org/api/events.html#events_class_eventemitter\">cloud functions</a>.\n *\n * A wrapper of a standard WebSocket client. We add several useful methods to\n * help you connect/disconnect to LiveQueryServer, subscribe/unsubscribe a ParseQuery easily.\n *\n * javascriptKey and masterKey are used for verifying the LiveQueryClient when it tries\n * to connect to the LiveQuery server\n *\n * We expose three events to help you monitor the status of the LiveQueryClient.\n *\n * <pre>\n * let Parse = require('parse/node');\n * let LiveQueryClient = Parse.LiveQueryClient;\n * let client = new LiveQueryClient({\n *   applicationId: '',\n *   serverURL: '',\n *   javascriptKey: '',\n *   masterKey: ''\n *  });\n * </pre>\n *\n * Open - When we establish the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('open', () => {\n *\n * });</pre>\n *\n * Close - When we lose the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('close', () => {\n *\n * });</pre>\n *\n * Error - When some network error or LiveQuery server error happens, you'll get this event.\n * <pre>\n * client.on('error', (error) => {\n *\n * });</pre>\n *\n * @alias Parse.LiveQueryClient\n */\n\nvar LiveQueryClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2.default)(LiveQueryClient, _EventEmitter);\n  var _super = _createSuper(LiveQueryClient);\n  /**\n   * @param {object} options\n   * @param {string} options.applicationId - applicationId of your Parse app\n   * @param {string} options.serverURL - <b>the URL of your LiveQuery server</b>\n   * @param {string} options.javascriptKey (optional)\n   * @param {string} options.masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @param {string} options.sessionToken (optional)\n   * @param {string} options.installationId (optional)\n   */\n\n  function LiveQueryClient(_ref) {\n    var _this;\n    var applicationId = _ref.applicationId,\n      serverURL = _ref.serverURL,\n      javascriptKey = _ref.javascriptKey,\n      masterKey = _ref.masterKey,\n      sessionToken = _ref.sessionToken,\n      installationId = _ref.installationId;\n    (0, _classCallCheck2.default)(this, LiveQueryClient);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"attempts\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"id\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"requestId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"applicationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"serverURL\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"javascriptKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"masterKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"sessionToken\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"installationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"additionalProperties\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"connectPromise\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"subscriptions\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"socket\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", void 0);\n    if (!serverURL || (0, _indexOf.default)(serverURL).call(serverURL, 'ws') !== 0) {\n      throw new Error('You need to set a proper Parse LiveQuery server url before using LiveQueryClient');\n    }\n    _this.reconnectHandle = null;\n    _this.attempts = 1;\n    _this.id = 0;\n    _this.requestId = 1;\n    _this.serverURL = serverURL;\n    _this.applicationId = applicationId;\n    _this.javascriptKey = javascriptKey || undefined;\n    _this.masterKey = masterKey || undefined;\n    _this.sessionToken = sessionToken || undefined;\n    _this.installationId = installationId || undefined;\n    _this.additionalProperties = true;\n    _this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n    _this.subscriptions = new _map.default();\n    _this.state = CLIENT_STATE.INITIALIZED; // adding listener so process does not crash\n    // best practice is for developer to register their own listener\n\n    _this.on('error', function () {});\n    return _this;\n  }\n  (0, _createClass2.default)(LiveQueryClient, [{\n    key: \"shouldOpen\",\n    value: function () /*: any*/\n    {\n      return this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED;\n    }\n    /**\n     * Subscribes to a ParseQuery\n     *\n     * If you provide the sessionToken, when the LiveQuery server gets ParseObject's\n     * updates from parse server, it'll try to check whether the sessionToken fulfills\n     * the ParseObject's ACL. The LiveQuery server will only send updates to clients whose\n     * sessionToken is fit for the ParseObject's ACL. You can check the LiveQuery protocol\n     * <a href=\"https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification\">here</a> for more details. The subscription you get is the same subscription you get\n     * from our Standard API.\n     *\n     * @param {object} query - the ParseQuery you want to subscribe to\n     * @param {string} sessionToken (optional)\n     * @returns {LiveQuerySubscription} subscription\n     */\n  }, {\n    key: \"subscribe\",\n    value: function (query\n    /*: Object*/, sessionToken\n    /*: ?string*/) /*: LiveQuerySubscription*/\n    {\n      var _this2 = this;\n      if (!query) {\n        return;\n      }\n      var className = query.className;\n      var queryJSON = query.toJSON();\n      var where = queryJSON.where;\n      var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n      var subscribeRequest = {\n        op: OP_TYPES.SUBSCRIBE,\n        requestId: this.requestId,\n        query: {\n          className: className,\n          where: where,\n          fields: fields\n        }\n      };\n      if (sessionToken) {\n        subscribeRequest.sessionToken = sessionToken;\n      }\n      var subscription = new _LiveQuerySubscription.default(this.requestId, query, sessionToken);\n      this.subscriptions.set(this.requestId, subscription);\n      this.requestId += 1;\n      this.connectPromise.then(function () {\n        _this2.socket.send((0, _stringify.default)(subscribeRequest));\n      });\n      return subscription;\n    }\n    /**\n     * After calling unsubscribe you'll stop receiving events from the subscription object.\n     *\n     * @param {object} subscription - subscription you would like to unsubscribe from.\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function (subscription\n    /*: Object*/) {\n      var _this3 = this;\n      if (!subscription) {\n        return;\n      }\n      this.subscriptions.delete(subscription.id);\n      var unsubscribeRequest = {\n        op: OP_TYPES.UNSUBSCRIBE,\n        requestId: subscription.id\n      };\n      this.connectPromise.then(function () {\n        _this3.socket.send((0, _stringify.default)(unsubscribeRequest));\n      });\n    }\n    /**\n     * After open is called, the LiveQueryClient will try to send a connect request\n     * to the LiveQuery server.\n     *\n     */\n  }, {\n    key: \"open\",\n    value: function () {\n      var _this4 = this;\n      var WebSocketImplementation = _CoreManager.default.getWebSocketController();\n      if (!WebSocketImplementation) {\n        this.emit(CLIENT_EMMITER_TYPES.ERROR, 'Can not find WebSocket implementation');\n        return;\n      }\n      if (this.state !== CLIENT_STATE.RECONNECTING) {\n        this.state = CLIENT_STATE.CONNECTING;\n      }\n      this.socket = new WebSocketImplementation(this.serverURL); // Bind WebSocket callbacks\n\n      this.socket.onopen = function () {\n        _this4._handleWebSocketOpen();\n      };\n      this.socket.onmessage = function (event) {\n        _this4._handleWebSocketMessage(event);\n      };\n      this.socket.onclose = function () {\n        _this4._handleWebSocketClose();\n      };\n      this.socket.onerror = function (error) {\n        _this4._handleWebSocketError(error);\n      };\n    }\n  }, {\n    key: \"resubscribe\",\n    value: function () {\n      var _context,\n        _this5 = this;\n      (0, _forEach.default)(_context = this.subscriptions).call(_context, function (subscription, requestId) {\n        var query = subscription.query;\n        var queryJSON = query.toJSON();\n        var where = queryJSON.where;\n        var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n        var className = query.className;\n        var sessionToken = subscription.sessionToken;\n        var subscribeRequest = {\n          op: OP_TYPES.SUBSCRIBE,\n          requestId: requestId,\n          query: {\n            className: className,\n            where: where,\n            fields: fields\n          }\n        };\n        if (sessionToken) {\n          subscribeRequest.sessionToken = sessionToken;\n        }\n        _this5.connectPromise.then(function () {\n          _this5.socket.send((0, _stringify.default)(subscribeRequest));\n        });\n      });\n    }\n    /**\n     * This method will close the WebSocket connection to this LiveQueryClient,\n     * cancel the auto reconnect and unsubscribe all subscriptions based on it.\n     *\n     */\n  }, {\n    key: \"close\",\n    value: function () {\n      var _context2;\n      if (this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n      this.state = CLIENT_STATE.DISCONNECTED;\n      this.socket.close(); // Notify each subscription about the close\n\n      var _iterator = _createForOfIteratorHelper((0, _values.default)(_context2 = this.subscriptions).call(_context2)),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var subscription = _step.value;\n          subscription.subscribed = false;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._handleReset();\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE);\n    } // ensure we start with valid state if connect is called again after close\n  }, {\n    key: \"_handleReset\",\n    value: function () {\n      this.attempts = 1;\n      this.id = 0;\n      this.requestId = 1;\n      this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n      this.subscriptions = new _map.default();\n    }\n  }, {\n    key: \"_handleWebSocketOpen\",\n    value: function () {\n      this.attempts = 1;\n      var connectRequest = {\n        op: OP_TYPES.CONNECT,\n        applicationId: this.applicationId,\n        javascriptKey: this.javascriptKey,\n        masterKey: this.masterKey,\n        sessionToken: this.sessionToken\n      };\n      if (this.additionalProperties) {\n        connectRequest.installationId = this.installationId;\n      }\n      this.socket.send((0, _stringify.default)(connectRequest));\n    }\n  }, {\n    key: \"_handleWebSocketMessage\",\n    value: function (event\n    /*: any*/) {\n      var data = event.data;\n      if (typeof data === 'string') {\n        data = JSON.parse(data);\n      }\n      var subscription = null;\n      if (data.requestId) {\n        subscription = this.subscriptions.get(data.requestId);\n      }\n      var response = {\n        clientId: data.clientId,\n        installationId: data.installationId\n      };\n      switch (data.op) {\n        case OP_EVENTS.CONNECTED:\n          if (this.state === CLIENT_STATE.RECONNECTING) {\n            this.resubscribe();\n          }\n          this.emit(CLIENT_EMMITER_TYPES.OPEN);\n          this.id = data.clientId;\n          this.connectPromise.resolve();\n          this.state = CLIENT_STATE.CONNECTED;\n          break;\n        case OP_EVENTS.SUBSCRIBED:\n          if (subscription) {\n            subscription.subscribed = true;\n            subscription.subscribePromise.resolve();\n            (0, _setTimeout2.default)(function () {\n              return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.OPEN, response);\n            }, 200);\n          }\n          break;\n        case OP_EVENTS.ERROR:\n          if (data.requestId) {\n            if (subscription) {\n              subscription.subscribePromise.resolve();\n              (0, _setTimeout2.default)(function () {\n                return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, data.error);\n              }, 200);\n            }\n          } else {\n            this.emit(CLIENT_EMMITER_TYPES.ERROR, data.error);\n          }\n          if (data.error === 'Additional properties not allowed') {\n            this.additionalProperties = false;\n          }\n          if (data.reconnect) {\n            this._handleReconnect();\n          }\n          break;\n        case OP_EVENTS.UNSUBSCRIBED:\n          // We have already deleted subscription in unsubscribe(), do nothing here\n          break;\n        default:\n          {\n            // create, update, enter, leave, delete cases\n            if (!subscription) {\n              break;\n            }\n            var override = false;\n            if (data.original) {\n              override = true;\n              delete data.original.__type; // Check for removed fields\n\n              for (var field in data.original) {\n                if (!(field in data.object)) {\n                  data.object[field] = undefined;\n                }\n              }\n              data.original = _ParseObject.default.fromJSON(data.original, false);\n            }\n            delete data.object.__type;\n            var parseObject = _ParseObject.default.fromJSON(data.object, override);\n            if (data.original) {\n              subscription.emit(data.op, parseObject, data.original, response);\n            } else {\n              subscription.emit(data.op, parseObject, response);\n            }\n            var localDatastore = _CoreManager.default.getLocalDatastore();\n            if (override && localDatastore.isEnabled) {\n              localDatastore._updateObjectIfPinned(parseObject).then(function () {});\n            }\n          }\n      }\n    }\n  }, {\n    key: \"_handleWebSocketClose\",\n    value: function () {\n      var _context3;\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n      this.state = CLIENT_STATE.CLOSED;\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE); // Notify each subscription about the close\n\n      var _iterator2 = _createForOfIteratorHelper((0, _values.default)(_context3 = this.subscriptions).call(_context3)),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var subscription = _step2.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleWebSocketError\",\n    value: function (error\n    /*: any*/) {\n      var _context4;\n      this.emit(CLIENT_EMMITER_TYPES.ERROR, error);\n      var _iterator3 = _createForOfIteratorHelper((0, _values.default)(_context4 = this.subscriptions).call(_context4)),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var subscription = _step3.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleReconnect\",\n    value: function () {\n      var _context5,\n        _this6 = this; // if closed or currently reconnecting we stop attempting to reconnect\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n      this.state = CLIENT_STATE.RECONNECTING;\n      var time = generateInterval(this.attempts); // handle case when both close/error occur at frequent rates we ensure we do not reconnect unnecessarily.\n      // we're unable to distinguish different between close/error when we're unable to reconnect therefore\n      // we try to reconnect in both cases\n      // server side ws and browser WebSocket behave differently in when close/error get triggered\n\n      if (this.reconnectHandle) {\n        clearTimeout(this.reconnectHandle);\n      }\n      this.reconnectHandle = (0, _setTimeout2.default)((0, _bind.default)(_context5 = function () {\n        _this6.attempts++;\n        _this6.connectPromise = (0, _promiseUtils.resolvingPromise)();\n        _this6.open();\n      }).call(_context5, this), time);\n    }\n  }]);\n  return LiveQueryClient;\n}(_EventEmitter2.default);\n_CoreManager.default.setWebSocketController(typeof WebSocket === 'function' || (typeof WebSocket === \"undefined\" ? \"undefined\" : (0, _typeof2.default)(WebSocket)) === 'object' ? WebSocket : null);\nvar _default = LiveQueryClient;\nexports.default = _default;","map":{"version":3,"names":["_Reflect$construct","require","_sliceInstanceProperty","_Array$from","_Symbol","_getIteratorMethod","_Array$isArray","_Object$defineProperty","_interopRequireDefault","exports","value","default","_indexOf","_map","_keys","_stringify","_forEach","_values","_setTimeout2","_bind","_typeof2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_CoreManager","_EventEmitter2","_ParseObject","_LiveQuerySubscription","_promiseUtils","_createForOfIteratorHelper","o","allowArrayLike","it","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_context6","_arrayLikeToArray","Object","prototype","toString","constructor","name","test","arr","len","arr2","Array","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","result","NewTarget","arguments","apply","Reflect","sham","Proxy","Boolean","valueOf","CLIENT_STATE","INITIALIZED","CONNECTING","CONNECTED","CLOSED","RECONNECTING","DISCONNECTED","OP_TYPES","CONNECT","SUBSCRIBE","UNSUBSCRIBE","ERROR","OP_EVENTS","SUBSCRIBED","UNSUBSCRIBED","CREATE","UPDATE","ENTER","LEAVE","DELETE","CLIENT_EMMITER_TYPES","CLOSE","OPEN","SUBSCRIPTION_EMMITER_TYPES","generateInterval","k","Math","random","min","pow","LiveQueryClient","_EventEmitter","_super","_ref","_this","applicationId","serverURL","javascriptKey","masterKey","sessionToken","installationId","Error","reconnectHandle","attempts","id","requestId","undefined","additionalProperties","connectPromise","resolvingPromise","subscriptions","state","on","key","query","_this2","className","queryJSON","toJSON","where","fields","split","subscribeRequest","op","subscription","set","then","socket","send","_this3","delete","unsubscribeRequest","_this4","WebSocketImplementation","getWebSocketController","emit","onopen","_handleWebSocketOpen","onmessage","event","_handleWebSocketMessage","onclose","_handleWebSocketClose","onerror","error","_handleWebSocketError","_context","_this5","_context2","close","_iterator","_step","subscribed","_handleReset","connectRequest","data","JSON","parse","get","response","clientId","resubscribe","resolve","subscribePromise","reconnect","_handleReconnect","override","original","__type","field","object","fromJSON","parseObject","localDatastore","getLocalDatastore","isEnabled","_updateObjectIfPinned","_context3","_iterator2","_step2","_context4","_iterator3","_step3","_context5","_this6","time","clearTimeout","open","setWebSocketController","WebSocket","_default"],"sources":["/Users/shivamsoni/Desktop/router/pingspong/Ping-Pong/node_modules/moralis/lib/browser/LiveQueryClient.js"],"sourcesContent":["\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\n\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Array$isArray = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/map\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/values\"));\n\nvar _setTimeout2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-timeout\"));\n\nvar _bind = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/bind\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _EventEmitter2 = _interopRequireDefault(require(\"./EventEmitter\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _LiveQuerySubscription = _interopRequireDefault(require(\"./LiveQuerySubscription\"));\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n\n  if (!it) {\n    if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\n  var n = _sliceInstanceProperty(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // The LiveQuery client inner state\n\n\nvar CLIENT_STATE = {\n  INITIALIZED: 'initialized',\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  CLOSED: 'closed',\n  RECONNECTING: 'reconnecting',\n  DISCONNECTED: 'disconnected'\n}; // The event type the LiveQuery client should sent to server\n\nvar OP_TYPES = {\n  CONNECT: 'connect',\n  SUBSCRIBE: 'subscribe',\n  UNSUBSCRIBE: 'unsubscribe',\n  ERROR: 'error'\n}; // The event we get back from LiveQuery server\n\nvar OP_EVENTS = {\n  CONNECTED: 'connected',\n  SUBSCRIBED: 'subscribed',\n  UNSUBSCRIBED: 'unsubscribed',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n}; // The event the LiveQuery client should emit\n\nvar CLIENT_EMMITER_TYPES = {\n  CLOSE: 'close',\n  ERROR: 'error',\n  OPEN: 'open'\n}; // The event the LiveQuery subscription should emit\n\nvar SUBSCRIPTION_EMMITER_TYPES = {\n  OPEN: 'open',\n  CLOSE: 'close',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n};\n\nvar generateInterval = function (k) {\n  return Math.random() * Math.min(30, Math.pow(2, k) - 1) * 1000;\n};\n/**\n * Creates a new LiveQueryClient.\n * Extends events.EventEmitter\n * <a href=\"https://nodejs.org/api/events.html#events_class_eventemitter\">cloud functions</a>.\n *\n * A wrapper of a standard WebSocket client. We add several useful methods to\n * help you connect/disconnect to LiveQueryServer, subscribe/unsubscribe a ParseQuery easily.\n *\n * javascriptKey and masterKey are used for verifying the LiveQueryClient when it tries\n * to connect to the LiveQuery server\n *\n * We expose three events to help you monitor the status of the LiveQueryClient.\n *\n * <pre>\n * let Parse = require('parse/node');\n * let LiveQueryClient = Parse.LiveQueryClient;\n * let client = new LiveQueryClient({\n *   applicationId: '',\n *   serverURL: '',\n *   javascriptKey: '',\n *   masterKey: ''\n *  });\n * </pre>\n *\n * Open - When we establish the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('open', () => {\n *\n * });</pre>\n *\n * Close - When we lose the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('close', () => {\n *\n * });</pre>\n *\n * Error - When some network error or LiveQuery server error happens, you'll get this event.\n * <pre>\n * client.on('error', (error) => {\n *\n * });</pre>\n *\n * @alias Parse.LiveQueryClient\n */\n\n\nvar LiveQueryClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2.default)(LiveQueryClient, _EventEmitter);\n\n  var _super = _createSuper(LiveQueryClient);\n  /**\n   * @param {object} options\n   * @param {string} options.applicationId - applicationId of your Parse app\n   * @param {string} options.serverURL - <b>the URL of your LiveQuery server</b>\n   * @param {string} options.javascriptKey (optional)\n   * @param {string} options.masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @param {string} options.sessionToken (optional)\n   * @param {string} options.installationId (optional)\n   */\n\n\n  function LiveQueryClient(_ref) {\n    var _this;\n\n    var applicationId = _ref.applicationId,\n        serverURL = _ref.serverURL,\n        javascriptKey = _ref.javascriptKey,\n        masterKey = _ref.masterKey,\n        sessionToken = _ref.sessionToken,\n        installationId = _ref.installationId;\n    (0, _classCallCheck2.default)(this, LiveQueryClient);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"attempts\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"id\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"requestId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"applicationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"serverURL\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"javascriptKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"masterKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"sessionToken\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"installationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"additionalProperties\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"connectPromise\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"subscriptions\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"socket\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", void 0);\n\n    if (!serverURL || (0, _indexOf.default)(serverURL).call(serverURL, 'ws') !== 0) {\n      throw new Error('You need to set a proper Parse LiveQuery server url before using LiveQueryClient');\n    }\n\n    _this.reconnectHandle = null;\n    _this.attempts = 1;\n    _this.id = 0;\n    _this.requestId = 1;\n    _this.serverURL = serverURL;\n    _this.applicationId = applicationId;\n    _this.javascriptKey = javascriptKey || undefined;\n    _this.masterKey = masterKey || undefined;\n    _this.sessionToken = sessionToken || undefined;\n    _this.installationId = installationId || undefined;\n    _this.additionalProperties = true;\n    _this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n    _this.subscriptions = new _map.default();\n    _this.state = CLIENT_STATE.INITIALIZED; // adding listener so process does not crash\n    // best practice is for developer to register their own listener\n\n    _this.on('error', function () {});\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(LiveQueryClient, [{\n    key: \"shouldOpen\",\n    value: function ()\n    /*: any*/\n    {\n      return this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED;\n    }\n    /**\n     * Subscribes to a ParseQuery\n     *\n     * If you provide the sessionToken, when the LiveQuery server gets ParseObject's\n     * updates from parse server, it'll try to check whether the sessionToken fulfills\n     * the ParseObject's ACL. The LiveQuery server will only send updates to clients whose\n     * sessionToken is fit for the ParseObject's ACL. You can check the LiveQuery protocol\n     * <a href=\"https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification\">here</a> for more details. The subscription you get is the same subscription you get\n     * from our Standard API.\n     *\n     * @param {object} query - the ParseQuery you want to subscribe to\n     * @param {string} sessionToken (optional)\n     * @returns {LiveQuerySubscription} subscription\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function (query\n    /*: Object*/\n    , sessionToken\n    /*: ?string*/\n    )\n    /*: LiveQuerySubscription*/\n    {\n      var _this2 = this;\n\n      if (!query) {\n        return;\n      }\n\n      var className = query.className;\n      var queryJSON = query.toJSON();\n      var where = queryJSON.where;\n      var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n      var subscribeRequest = {\n        op: OP_TYPES.SUBSCRIBE,\n        requestId: this.requestId,\n        query: {\n          className: className,\n          where: where,\n          fields: fields\n        }\n      };\n\n      if (sessionToken) {\n        subscribeRequest.sessionToken = sessionToken;\n      }\n\n      var subscription = new _LiveQuerySubscription.default(this.requestId, query, sessionToken);\n      this.subscriptions.set(this.requestId, subscription);\n      this.requestId += 1;\n      this.connectPromise.then(function () {\n        _this2.socket.send((0, _stringify.default)(subscribeRequest));\n      });\n      return subscription;\n    }\n    /**\n     * After calling unsubscribe you'll stop receiving events from the subscription object.\n     *\n     * @param {object} subscription - subscription you would like to unsubscribe from.\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function (subscription\n    /*: Object*/\n    ) {\n      var _this3 = this;\n\n      if (!subscription) {\n        return;\n      }\n\n      this.subscriptions.delete(subscription.id);\n      var unsubscribeRequest = {\n        op: OP_TYPES.UNSUBSCRIBE,\n        requestId: subscription.id\n      };\n      this.connectPromise.then(function () {\n        _this3.socket.send((0, _stringify.default)(unsubscribeRequest));\n      });\n    }\n    /**\n     * After open is called, the LiveQueryClient will try to send a connect request\n     * to the LiveQuery server.\n     *\n     */\n\n  }, {\n    key: \"open\",\n    value: function () {\n      var _this4 = this;\n\n      var WebSocketImplementation = _CoreManager.default.getWebSocketController();\n\n      if (!WebSocketImplementation) {\n        this.emit(CLIENT_EMMITER_TYPES.ERROR, 'Can not find WebSocket implementation');\n        return;\n      }\n\n      if (this.state !== CLIENT_STATE.RECONNECTING) {\n        this.state = CLIENT_STATE.CONNECTING;\n      }\n\n      this.socket = new WebSocketImplementation(this.serverURL); // Bind WebSocket callbacks\n\n      this.socket.onopen = function () {\n        _this4._handleWebSocketOpen();\n      };\n\n      this.socket.onmessage = function (event) {\n        _this4._handleWebSocketMessage(event);\n      };\n\n      this.socket.onclose = function () {\n        _this4._handleWebSocketClose();\n      };\n\n      this.socket.onerror = function (error) {\n        _this4._handleWebSocketError(error);\n      };\n    }\n  }, {\n    key: \"resubscribe\",\n    value: function () {\n      var _context,\n          _this5 = this;\n\n      (0, _forEach.default)(_context = this.subscriptions).call(_context, function (subscription, requestId) {\n        var query = subscription.query;\n        var queryJSON = query.toJSON();\n        var where = queryJSON.where;\n        var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n        var className = query.className;\n        var sessionToken = subscription.sessionToken;\n        var subscribeRequest = {\n          op: OP_TYPES.SUBSCRIBE,\n          requestId: requestId,\n          query: {\n            className: className,\n            where: where,\n            fields: fields\n          }\n        };\n\n        if (sessionToken) {\n          subscribeRequest.sessionToken = sessionToken;\n        }\n\n        _this5.connectPromise.then(function () {\n          _this5.socket.send((0, _stringify.default)(subscribeRequest));\n        });\n      });\n    }\n    /**\n     * This method will close the WebSocket connection to this LiveQueryClient,\n     * cancel the auto reconnect and unsubscribe all subscriptions based on it.\n     *\n     */\n\n  }, {\n    key: \"close\",\n    value: function () {\n      var _context2;\n\n      if (this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.DISCONNECTED;\n      this.socket.close(); // Notify each subscription about the close\n\n      var _iterator = _createForOfIteratorHelper((0, _values.default)(_context2 = this.subscriptions).call(_context2)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var subscription = _step.value;\n          subscription.subscribed = false;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this._handleReset();\n\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE);\n    } // ensure we start with valid state if connect is called again after close\n\n  }, {\n    key: \"_handleReset\",\n    value: function () {\n      this.attempts = 1;\n      this.id = 0;\n      this.requestId = 1;\n      this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n      this.subscriptions = new _map.default();\n    }\n  }, {\n    key: \"_handleWebSocketOpen\",\n    value: function () {\n      this.attempts = 1;\n      var connectRequest = {\n        op: OP_TYPES.CONNECT,\n        applicationId: this.applicationId,\n        javascriptKey: this.javascriptKey,\n        masterKey: this.masterKey,\n        sessionToken: this.sessionToken\n      };\n\n      if (this.additionalProperties) {\n        connectRequest.installationId = this.installationId;\n      }\n\n      this.socket.send((0, _stringify.default)(connectRequest));\n    }\n  }, {\n    key: \"_handleWebSocketMessage\",\n    value: function (event\n    /*: any*/\n    ) {\n      var data = event.data;\n\n      if (typeof data === 'string') {\n        data = JSON.parse(data);\n      }\n\n      var subscription = null;\n\n      if (data.requestId) {\n        subscription = this.subscriptions.get(data.requestId);\n      }\n\n      var response = {\n        clientId: data.clientId,\n        installationId: data.installationId\n      };\n\n      switch (data.op) {\n        case OP_EVENTS.CONNECTED:\n          if (this.state === CLIENT_STATE.RECONNECTING) {\n            this.resubscribe();\n          }\n\n          this.emit(CLIENT_EMMITER_TYPES.OPEN);\n          this.id = data.clientId;\n          this.connectPromise.resolve();\n          this.state = CLIENT_STATE.CONNECTED;\n          break;\n\n        case OP_EVENTS.SUBSCRIBED:\n          if (subscription) {\n            subscription.subscribed = true;\n            subscription.subscribePromise.resolve();\n            (0, _setTimeout2.default)(function () {\n              return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.OPEN, response);\n            }, 200);\n          }\n\n          break;\n\n        case OP_EVENTS.ERROR:\n          if (data.requestId) {\n            if (subscription) {\n              subscription.subscribePromise.resolve();\n              (0, _setTimeout2.default)(function () {\n                return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, data.error);\n              }, 200);\n            }\n          } else {\n            this.emit(CLIENT_EMMITER_TYPES.ERROR, data.error);\n          }\n\n          if (data.error === 'Additional properties not allowed') {\n            this.additionalProperties = false;\n          }\n\n          if (data.reconnect) {\n            this._handleReconnect();\n          }\n\n          break;\n\n        case OP_EVENTS.UNSUBSCRIBED:\n          // We have already deleted subscription in unsubscribe(), do nothing here\n          break;\n\n        default:\n          {\n            // create, update, enter, leave, delete cases\n            if (!subscription) {\n              break;\n            }\n\n            var override = false;\n\n            if (data.original) {\n              override = true;\n              delete data.original.__type; // Check for removed fields\n\n              for (var field in data.original) {\n                if (!(field in data.object)) {\n                  data.object[field] = undefined;\n                }\n              }\n\n              data.original = _ParseObject.default.fromJSON(data.original, false);\n            }\n\n            delete data.object.__type;\n\n            var parseObject = _ParseObject.default.fromJSON(data.object, override);\n\n            if (data.original) {\n              subscription.emit(data.op, parseObject, data.original, response);\n            } else {\n              subscription.emit(data.op, parseObject, response);\n            }\n\n            var localDatastore = _CoreManager.default.getLocalDatastore();\n\n            if (override && localDatastore.isEnabled) {\n              localDatastore._updateObjectIfPinned(parseObject).then(function () {});\n            }\n          }\n      }\n    }\n  }, {\n    key: \"_handleWebSocketClose\",\n    value: function () {\n      var _context3;\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.CLOSED;\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE); // Notify each subscription about the close\n\n      var _iterator2 = _createForOfIteratorHelper((0, _values.default)(_context3 = this.subscriptions).call(_context3)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var subscription = _step2.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleWebSocketError\",\n    value: function (error\n    /*: any*/\n    ) {\n      var _context4;\n\n      this.emit(CLIENT_EMMITER_TYPES.ERROR, error);\n\n      var _iterator3 = _createForOfIteratorHelper((0, _values.default)(_context4 = this.subscriptions).call(_context4)),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var subscription = _step3.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleReconnect\",\n    value: function () {\n      var _context5,\n          _this6 = this; // if closed or currently reconnecting we stop attempting to reconnect\n\n\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n\n      this.state = CLIENT_STATE.RECONNECTING;\n      var time = generateInterval(this.attempts); // handle case when both close/error occur at frequent rates we ensure we do not reconnect unnecessarily.\n      // we're unable to distinguish different between close/error when we're unable to reconnect therefore\n      // we try to reconnect in both cases\n      // server side ws and browser WebSocket behave differently in when close/error get triggered\n\n      if (this.reconnectHandle) {\n        clearTimeout(this.reconnectHandle);\n      }\n\n      this.reconnectHandle = (0, _setTimeout2.default)((0, _bind.default)(_context5 = function () {\n        _this6.attempts++;\n        _this6.connectPromise = (0, _promiseUtils.resolvingPromise)();\n\n        _this6.open();\n      }).call(_context5, this), time);\n    }\n  }]);\n  return LiveQueryClient;\n}(_EventEmitter2.default);\n\n_CoreManager.default.setWebSocketController(typeof WebSocket === 'function' || (typeof WebSocket === \"undefined\" ? \"undefined\" : (0, _typeof2.default)(WebSocket)) === 'object' ? WebSocket : null);\n\nvar _default = LiveQueryClient;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}