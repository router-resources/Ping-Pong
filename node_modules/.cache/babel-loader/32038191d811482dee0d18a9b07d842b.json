{"ast":null,"code":"import nacl from '@toruslabs/tweetnacl-js';\nconst l = nacl.lowlevel;\nfunction getED25519Key(privateKey) {\n  let privKey;\n  if (typeof privateKey === \"string\") {\n    privKey = Buffer.from(privateKey, \"hex\");\n  } else {\n    privKey = privateKey;\n  } // Implementation copied from tweetnacl\n\n  const d = new Uint8Array(64);\n  const p = [l.gf(), l.gf(), l.gf(), l.gf()];\n  const sk = new Uint8Array([...new Uint8Array(privKey), ...new Uint8Array(32)]);\n  const pk = new Uint8Array(32);\n  l.crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  l.scalarbase(p, d);\n  l.pack(pk, p);\n  for (let i = 0; i < 32; i += 1) sk[i + 32] = pk[i];\n  return {\n    sk: Buffer.from(sk),\n    pk: Buffer.from(pk)\n  };\n}\nexport { getED25519Key };","map":{"version":3,"mappings":";AAQA,MAAMA,CAAC,GAAIC,IAAY,CAACC,QAAxB;SAEgBC,cAAcC;EAI5B,IAAIC,OAAJ;EACA,IAAI,OAAOD,UAAP,KAAsB,QAA1B,EAAoC;IAClCC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwB,KAAxB,CAAV;EACD,CAFD,MAEO;IACLC,OAAO,GAAGD,UAAV;EACD;;EAGD,MAAMI,CAAC,GAAG,IAAIC,UAAJ,CAAe,EAAf,CAAV;EACA,MAAMC,CAAC,GAAG,CAACV,CAAC,CAACW,EAAF,EAAD,EAASX,CAAC,CAACW,EAAF,EAAT,EAAiBX,CAAC,CAACW,EAAF,EAAjB,EAAyBX,CAAC,CAACW,EAAF,EAAzB,CAAV;EACA,MAAMC,EAAE,GAAG,IAAIH,UAAJ,CAAe,CAAC,GAAG,IAAIA,UAAJ,CAAeJ,OAAf,CAAJ,EAA6B,GAAG,IAAII,UAAJ,CAAe,EAAf,CAAhC,CAAf,CAAX;EACA,MAAMI,EAAE,GAAG,IAAIJ,UAAJ,CAAe,EAAf,CAAX;EACAT,CAAC,CAACc,WAAF,CAAcN,CAAd,EAAiBI,EAAjB,EAAqB,EAArB;EAEAJ,CAAC,CAAC,CAAD,CAAD,IAAQ,GAAR;EAEAA,CAAC,CAAC,EAAD,CAAD,IAAS,GAAT;EAEAA,CAAC,CAAC,EAAD,CAAD,IAAS,EAAT;EACAR,CAAC,CAACe,UAAF,CAAaL,CAAb,EAAgBF,CAAhB;EACAR,CAAC,CAACgB,IAAF,CAAOH,EAAP,EAAWH,CAAX;EACA,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B,EAAgCL,EAAE,CAACK,CAAC,GAAG,EAAL,CAAF,GAAaJ,EAAE,CAACI,CAAD,CAAf;EAEhC,OAAO;IAAEL,EAAE,EAAEN,MAAM,CAACC,IAAP,CAAYK,EAAZ,CAAN;IAAuBC,EAAE,EAAEP,MAAM,CAACC,IAAP,CAAYM,EAAZ;EAA3B,CAAP;AACD","names":["l","nacl","lowlevel","getED25519Key","privateKey","privKey","Buffer","from","d","Uint8Array","p","gf","sk","pk","crypto_hash","scalarbase","pack","i"],"sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}