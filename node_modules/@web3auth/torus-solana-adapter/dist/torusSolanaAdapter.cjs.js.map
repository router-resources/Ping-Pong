{"version":3,"sources":["webpack://TorusSolanaAdapter/webpack/bootstrap","webpack://TorusSolanaAdapter/external \"@web3auth/base\"","webpack://TorusSolanaAdapter/external \"@babel/runtime/helpers/defineProperty\"","webpack://TorusSolanaAdapter/external \"@toruslabs/solana-embed\"","webpack://TorusSolanaAdapter/external \"@web3auth/solana-provider\"","webpack://TorusSolanaAdapter/external \"loglevel\"","webpack://TorusSolanaAdapter/./src/solanaWalletAdapter.ts"],"names":["SolanaWalletAdapter","BaseAdapter","constructor","params","WALLET_ADAPTERS","TORUS_SOLANA","ADAPTER_NAMESPACES","SOLANA","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","ADAPTER_STATUS","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","chainConfig","provider","status","CONNECTED","solanaProvider","_","Error","init","options","checkInitializationRequirements","network","getChainConfig","blockExplorer","displayName","ticker","tickerName","rpcTarget","chainId","blockExplorerUrl","logo","torusInstance","Torus","showTorusButton","TorusInjectedProvider","config","READY","emit","ADAPTER_EVENTS","autoConnect","rehydrated","connect","error","log","ERRORED","checkConnectionRequirements","WalletInitializationError","notReady","CONNECTING","adapter","login","setupProvider","reconnected","WalletLoginError","connectionError","disconnect","cleanup","notConnectedError","logout","DISCONNECTED","getUserInfo","userInfo","setAdapterSettings"],"mappings":"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","file":"torusSolanaAdapter.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"@web3auth/base\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@toruslabs/solana-embed\");","module.exports = require(\"@web3auth/solana-provider\");","module.exports = require(\"loglevel\");","import Torus, { NetworkInterface, TorusCtorArgs, TorusLoginParams, TorusParams } from \"@toruslabs/solana-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { InjectedProvider, TorusInjectedProvider } from \"@web3auth/solana-provider\";\nimport log from \"loglevel\";\n\nexport interface SolanaWalletOptions {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: TorusLoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n  chainConfig?: CustomChainConfig;\n}\ntype ProviderFactory = BaseProvider<BaseProviderConfig, BaseProviderState, InjectedProvider>;\n\nexport class SolanaWalletAdapter extends BaseAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_SOLANA;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: TorusLoginParams = {};\n\n  private solanaProvider: ProviderFactory | null = null;\n\n  private rehydrated = false;\n\n  constructor(params: SolanaWalletOptions = {}) {\n    super();\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n    this.chainConfig = params.chainConfig || null;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n      return this.solanaProvider?.provider || null;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    // set chainConfig for mainnet by default if not set\n    let network: NetworkInterface;\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n      const { blockExplorer, displayName, ticker, tickerName, rpcTarget, chainId } = this.chainConfig as CustomChainConfig;\n      network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, ticker, tickerName, logo: \"\" };\n    } else {\n      const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n      network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n    }\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    await this.torusInstance.init({ showTorusButton: false, ...this.initParams, network });\n\n    this.solanaProvider = new TorusInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig as CustomChainConfig,\n      },\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n\n    try {\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached torus solana provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    if (!this.solanaProvider) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_SOLANA });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      await this.solanaProvider.setupProvider(this.torusInstance.provider as InjectedProvider);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_SOLANA, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n    if (options.cleanup) {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n      this.solanaProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo();\n    return userInfo;\n  }\n\n  setAdapterSettings(_: unknown): void {}\n}\n"],"sourceRoot":""}