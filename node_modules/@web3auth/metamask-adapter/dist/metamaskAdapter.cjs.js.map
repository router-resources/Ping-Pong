{"version":3,"sources":["webpack://MetamaskAdapter/webpack/bootstrap","webpack://MetamaskAdapter/external \"@web3auth/base\"","webpack://MetamaskAdapter/external \"@babel/runtime/helpers/defineProperty\"","webpack://MetamaskAdapter/external \"@metamask/detect-provider\"","webpack://MetamaskAdapter/./src/metamaskAdapter.ts"],"names":["MetamaskAdapter","BaseAdapter","constructor","adapterOptions","ADAPTER_NAMESPACES","EIP155","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","WALLET_ADAPTERS","METAMASK","ADAPTER_STATUS","NOT_READY","chainConfig","provider","status","CONNECTED","metamaskProvider","_","Error","init","options","checkInitializationRequirements","detectEthereumProvider","mustBeMetaMask","WalletInitializationError","notInstalled","READY","emit","ADAPTER_EVENTS","autoConnect","rehydrated","connect","error","ERRORED","setAdapterSettings","checkConnectionRequirements","getChainConfig","CONNECTING","adapter","WalletLoginError","notConnectedError","request","method","chainId","switchChain","once","disconnect","reconnected","connectionError","cleanup","disconnectionError","removeAllListeners","DISCONNECTED","getUserInfo","params","switchError","code","chainName","displayName","rpcUrls","rpcTarget"],"mappings":"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","file":"metamaskAdapter.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"@web3auth/base\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@metamask/detect-provider\");","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n} from \"@web3auth/base\";\n\ninterface EthereumProvider extends SafeEventEmitterProvider {\n  isMetaMask?: boolean;\n  isConnected: () => boolean;\n  chainId: string;\n}\nexport interface MetamaskAdapterOptions {\n  chainConfig?: CustomChainConfig;\n}\n\nclass MetamaskAdapter extends BaseAdapter<void> {\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly name: string = WALLET_ADAPTERS.METAMASK;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  private rehydrated = false;\n\n  private metamaskProvider: EthereumProvider | null = null;\n\n  constructor(adapterOptions: MetamaskAdapterOptions = {}) {\n    super();\n    this.chainConfig = adapterOptions.chainConfig || null;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.metamaskProvider) {\n      return this.metamaskProvider as SafeEventEmitterProvider;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    this.metamaskProvider = (await detectEthereumProvider({ mustBeMetaMask: true })) as EthereumProvider;\n    if (!this.metamaskProvider) throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n    try {\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  setAdapterSettings(_: unknown): void {}\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    // set default to mainnet\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.METAMASK });\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n    try {\n      await this.metamaskProvider.request({ method: \"eth_requestAccounts\" });\n      const { chainId } = this.metamaskProvider;\n      if (chainId !== (this.chainConfig as CustomChainConfig).chainId) {\n        await this.switchChain(this.chainConfig as CustomChainConfig);\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n      this.provider.once(\"disconnect\", () => {\n        // ready to be connected again\n        this.disconnect();\n      });\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.METAMASK, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n    this.provider?.removeAllListeners();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.metamaskProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async switchChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    try {\n      await this.metamaskProvider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: chainConfig.chainId }],\n      });\n    } catch (switchError: unknown) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if ((switchError as { code: number }).code === 4902) {\n        await this.metamaskProvider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [{ chainId: chainConfig.chainId, chainName: chainConfig.displayName, rpcUrls: [chainConfig.rpcTarget] }],\n        });\n      } else {\n        throw switchError;\n      }\n    }\n  }\n}\n\nexport { MetamaskAdapter };\n"],"sourceRoot":""}