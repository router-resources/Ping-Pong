module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("@web3auth/base");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("@babel/runtime/helpers/defineProperty");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("@toruslabs/torus-embed");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("loglevel");

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "TorusWalletAdapter", function() { return /* reexport */ torusWalletAdapter_TorusWalletAdapter; });

// EXTERNAL MODULE: external "@babel/runtime/helpers/defineProperty"
var defineProperty_ = __webpack_require__(1);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_);

// EXTERNAL MODULE: external "@toruslabs/torus-embed"
var torus_embed_ = __webpack_require__(2);
var torus_embed_default = /*#__PURE__*/__webpack_require__.n(torus_embed_);

// EXTERNAL MODULE: external "@web3auth/base"
var base_ = __webpack_require__(0);

// EXTERNAL MODULE: external "loglevel"
var external_loglevel_ = __webpack_require__(3);
var external_loglevel_default = /*#__PURE__*/__webpack_require__.n(external_loglevel_);

// CONCATENATED MODULE: ./src/torusWalletAdapter.ts


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty_default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }




class torusWalletAdapter_TorusWalletAdapter extends base_["BaseAdapter"] {
  constructor() {
    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    super();

    defineProperty_default()(this, "name", base_["WALLET_ADAPTERS"].TORUS_EVM);

    defineProperty_default()(this, "adapterNamespace", base_["ADAPTER_NAMESPACES"].EIP155);

    defineProperty_default()(this, "currentChainNamespace", base_["CHAIN_NAMESPACES"].EIP155);

    defineProperty_default()(this, "type", base_["ADAPTER_CATEGORY"].EXTERNAL);

    defineProperty_default()(this, "status", base_["ADAPTER_STATUS"].NOT_READY);

    defineProperty_default()(this, "torusInstance", null);

    defineProperty_default()(this, "torusWalletOptions", void 0);

    defineProperty_default()(this, "initParams", void 0);

    defineProperty_default()(this, "loginSettings", {});

    defineProperty_default()(this, "rehydrated", false);

    this.torusWalletOptions = params.adapterSettings || {};
    this.initParams = params.initParams || {};
    this.loginSettings = params.loginSettings || {};
    this.chainConfig = params.chainConfig || null;
  }

  get provider() {
    if (this.status === base_["ADAPTER_STATUS"].CONNECTED && this.torusInstance) {
      return this.torusInstance.provider;
    }

    return null;
  }

  set provider(_) {
    throw new Error("Not implemented");
  }

  async init(options) {
    super.checkInitializationRequirements(); // set chainConfig for mainnet by default if not set

    let network;

    if (!this.chainConfig) {
      this.chainConfig = Object(base_["getChainConfig"])(base_["CHAIN_NAMESPACES"].EIP155, 1);
      const {
        blockExplorer,
        displayName
      } = this.chainConfig;
      network = {
        chainId: 1,
        host: "mainnet",
        blockExplorer,
        networkName: displayName
      };
    } else {
      const {
        chainId,
        blockExplorer,
        displayName,
        rpcTarget
      } = this.chainConfig;
      network = {
        chainId: parseInt(chainId, 16),
        host: rpcTarget,
        blockExplorer,
        networkName: displayName
      };
    }

    this.torusInstance = new torus_embed_default.a(this.torusWalletOptions);
    await this.torusInstance.init(_objectSpread(_objectSpread({
      showTorusButton: false
    }, this.initParams), {}, {
      network
    }));
    this.status = base_["ADAPTER_STATUS"].READY;
    this.emit(base_["ADAPTER_EVENTS"].READY, base_["WALLET_ADAPTERS"].TORUS_EVM);

    try {
      if (options.autoConnect) {
        this.rehydrated = true;
        await this.connect();
      }
    } catch (error) {
      external_loglevel_default.a.error("Failed to connect with torus evm provider", error);
      this.emit(base_["ADAPTER_EVENTS"].ERRORED, error);
    }
  }

  async connect() {
    super.checkConnectionRequirements();
    if (!this.torusInstance) throw base_["WalletInitializationError"].notReady("Torus wallet is not initialized");
    this.status = base_["ADAPTER_STATUS"].CONNECTING;
    this.emit(base_["ADAPTER_EVENTS"].CONNECTING, {
      adapter: base_["WALLET_ADAPTERS"].TORUS_EVM
    });

    try {
      await this.torusInstance.login(this.loginSettings);
      const {
        chainId
      } = this.torusInstance.provider;

      if (chainId && parseInt(chainId) !== parseInt(this.chainConfig.chainId, 16)) {
        throw base_["WalletInitializationError"].fromCode(5000, "Not connected to correct chainId. Expected: ".concat(this.chainConfig.chainId, ", Current: ").concat(chainId));
      }

      this.status = base_["ADAPTER_STATUS"].CONNECTED;
      this.torusInstance.showTorusButton();
      this.emit(base_["ADAPTER_STATUS"].CONNECTED, {
        adapter: base_["WALLET_ADAPTERS"].TORUS_EVM,
        reconnected: this.rehydrated
      });
      return this.provider;
    } catch (error) {
      // ready again to be connected
      this.status = base_["ADAPTER_STATUS"].READY;
      this.rehydrated = false;
      this.emit(base_["ADAPTER_STATUS"].ERRORED, error);
      throw error instanceof base_["Web3AuthError"] ? error : base_["WalletLoginError"].connectionError("Failed to login with torus wallet");
    }
  }

  async disconnect() {
    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
      cleanup: false
    };
    if (this.status !== base_["ADAPTER_STATUS"].CONNECTED) throw base_["WalletLoginError"].notConnectedError("Not connected with wallet");
    if (!this.torusInstance) throw base_["WalletInitializationError"].notReady("Torus wallet is not initialized");
    await this.torusInstance.logout();
    this.torusInstance.hideTorusButton();

    if (options.cleanup) {
      this.status = base_["ADAPTER_STATUS"].NOT_READY;
      this.torusInstance = null;
    } else {
      // ready to be connected again
      this.status = base_["ADAPTER_STATUS"].READY;
    }

    this.rehydrated = false;
    this.emit(base_["ADAPTER_EVENTS"].DISCONNECTED);
  }

  async getUserInfo() {
    if (this.status !== base_["ADAPTER_STATUS"].CONNECTED) throw base_["WalletLoginError"].notConnectedError("Not connected with wallet");
    if (!this.torusInstance) throw base_["WalletInitializationError"].notReady("Torus wallet is not initialized");
    const userInfo = await this.torusInstance.getUserInfo("");
    return userInfo;
  }

  setAdapterSettings(_) {}

}
// CONCATENATED MODULE: ./src/index.ts


/***/ })
/******/ ]);
//# sourceMappingURL=torusEvmAdapter.cjs.js.map